Search.setIndex({"docnames": ["api", "bootstrap/background", "bootstrap/bootstrap", "bootstrap/bootstrap_examples", "bootstrap/confidence-intervals", "bootstrap/generated/arch.bootstrap.CircularBlockBootstrap", "bootstrap/generated/arch.bootstrap.IIDBootstrap", "bootstrap/generated/arch.bootstrap.IndependentSamplesBootstrap", "bootstrap/generated/arch.bootstrap.MovingBlockBootstrap", "bootstrap/generated/arch.bootstrap.StationaryBootstrap", "bootstrap/generated/arch.bootstrap.optimal_block_length", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.apply", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.bootstrap", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.clone", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.conf_int", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.cov", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.generator", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.get_state", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.index", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.random_state", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.reset", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.seed", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.set_state", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.state", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.update_indices", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.var", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.apply", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.bootstrap", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.clone", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.conf_int", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.cov", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.generator", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.get_state", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.index", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.random_state", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.reset", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.seed", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.set_state", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.state", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.update_indices", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.var", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.apply", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.bootstrap", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.clone", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.conf_int", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.cov", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.generator", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.get_state", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.index", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.random_state", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.reset", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.seed", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.set_state", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.state", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.update_indices", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.var", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.apply", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.bootstrap", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.clone", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.conf_int", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.cov", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.generator", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.get_state", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.index", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.random_state", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.reset", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.seed", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.set_state", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.state", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.update_indices", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.var", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.apply", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.bootstrap", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.clone", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.conf_int", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.cov", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.generator", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.get_state", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.index", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.random_state", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.reset", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.seed", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.set_state", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.state", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.update_indices", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.var", "bootstrap/iid-bootstraps", "bootstrap/low-level-interface", "bootstrap/parameter-covariance-estimation", "bootstrap/semiparametric-parametric-bootstrap", "bootstrap/timeseries-bootstraps", "changes", "covariance/covariance", "covariance/generated/arch.covariance.kernel.Andrews", "covariance/generated/arch.covariance.kernel.Bartlett", "covariance/generated/arch.covariance.kernel.CovarianceEstimate", "covariance/generated/arch.covariance.kernel.Gallant", "covariance/generated/arch.covariance.kernel.NeweyWest", "covariance/generated/arch.covariance.kernel.Parzen", "covariance/generated/arch.covariance.kernel.ParzenCauchy", "covariance/generated/arch.covariance.kernel.ParzenGeometric", "covariance/generated/arch.covariance.kernel.ParzenRiesz", "covariance/generated/arch.covariance.kernel.QuadraticSpectral", "covariance/generated/arch.covariance.kernel.TukeyHamming", "covariance/generated/arch.covariance.kernel.TukeyHanning", "covariance/generated/arch.covariance.kernel.TukeyParzen", "covariance/generated/generated/arch.covariance.kernel.Andrews.bandwidth", "covariance/generated/generated/arch.covariance.kernel.Andrews.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.Andrews.centered", "covariance/generated/generated/arch.covariance.kernel.Andrews.cov", "covariance/generated/generated/arch.covariance.kernel.Andrews.force_int", "covariance/generated/generated/arch.covariance.kernel.Andrews.kernel_const", "covariance/generated/generated/arch.covariance.kernel.Andrews.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.Andrews.name", "covariance/generated/generated/arch.covariance.kernel.Andrews.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.Andrews.rate", "covariance/generated/generated/arch.covariance.kernel.Bartlett.bandwidth", "covariance/generated/generated/arch.covariance.kernel.Bartlett.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.Bartlett.centered", "covariance/generated/generated/arch.covariance.kernel.Bartlett.cov", "covariance/generated/generated/arch.covariance.kernel.Bartlett.force_int", "covariance/generated/generated/arch.covariance.kernel.Bartlett.kernel_const", "covariance/generated/generated/arch.covariance.kernel.Bartlett.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.Bartlett.name", "covariance/generated/generated/arch.covariance.kernel.Bartlett.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.Bartlett.rate", "covariance/generated/generated/arch.covariance.kernel.CovarianceEstimate.long_run", "covariance/generated/generated/arch.covariance.kernel.CovarianceEstimate.one_sided", "covariance/generated/generated/arch.covariance.kernel.CovarianceEstimate.one_sided_strict", "covariance/generated/generated/arch.covariance.kernel.CovarianceEstimate.short_run", "covariance/generated/generated/arch.covariance.kernel.Gallant.bandwidth", "covariance/generated/generated/arch.covariance.kernel.Gallant.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.Gallant.centered", "covariance/generated/generated/arch.covariance.kernel.Gallant.cov", "covariance/generated/generated/arch.covariance.kernel.Gallant.force_int", "covariance/generated/generated/arch.covariance.kernel.Gallant.kernel_const", "covariance/generated/generated/arch.covariance.kernel.Gallant.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.Gallant.name", "covariance/generated/generated/arch.covariance.kernel.Gallant.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.Gallant.rate", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.bandwidth", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.centered", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.cov", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.force_int", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.kernel_const", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.name", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.rate", "covariance/generated/generated/arch.covariance.kernel.Parzen.bandwidth", "covariance/generated/generated/arch.covariance.kernel.Parzen.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.Parzen.centered", "covariance/generated/generated/arch.covariance.kernel.Parzen.cov", "covariance/generated/generated/arch.covariance.kernel.Parzen.force_int", "covariance/generated/generated/arch.covariance.kernel.Parzen.kernel_const", "covariance/generated/generated/arch.covariance.kernel.Parzen.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.Parzen.name", "covariance/generated/generated/arch.covariance.kernel.Parzen.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.Parzen.rate", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.bandwidth", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.centered", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.cov", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.force_int", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.kernel_const", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.name", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.rate", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.bandwidth", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.centered", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.cov", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.force_int", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.kernel_const", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.name", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.rate", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.bandwidth", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.centered", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.cov", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.force_int", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.kernel_const", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.name", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.rate", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.bandwidth", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.centered", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.cov", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.force_int", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.kernel_const", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.name", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.rate", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.bandwidth", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.centered", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.cov", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.force_int", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.kernel_const", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.name", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.rate", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.bandwidth", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.centered", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.cov", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.force_int", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.kernel_const", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.name", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.rate", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.bandwidth", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.bandwidth_scale", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.centered", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.cov", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.force_int", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.kernel_const", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.kernel_weights", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.name", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.opt_bandwidth", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.rate", "index", "multiple-comparison/background", "multiple-comparison/generated/arch.bootstrap.MCS", "multiple-comparison/generated/arch.bootstrap.SPA", "multiple-comparison/generated/arch.bootstrap.StepM", "multiple-comparison/generated/generated/arch.bootstrap.MCS.compute", "multiple-comparison/generated/generated/arch.bootstrap.MCS.excluded", "multiple-comparison/generated/generated/arch.bootstrap.MCS.included", "multiple-comparison/generated/generated/arch.bootstrap.MCS.pvalues", "multiple-comparison/generated/generated/arch.bootstrap.MCS.reset", "multiple-comparison/generated/generated/arch.bootstrap.MCS.seed", "multiple-comparison/generated/generated/arch.bootstrap.SPA.better_models", "multiple-comparison/generated/generated/arch.bootstrap.SPA.compute", "multiple-comparison/generated/generated/arch.bootstrap.SPA.critical_values", "multiple-comparison/generated/generated/arch.bootstrap.SPA.pvalues", "multiple-comparison/generated/generated/arch.bootstrap.SPA.reset", "multiple-comparison/generated/generated/arch.bootstrap.SPA.seed", "multiple-comparison/generated/generated/arch.bootstrap.SPA.subset", "multiple-comparison/generated/generated/arch.bootstrap.StepM.compute", "multiple-comparison/generated/generated/arch.bootstrap.StepM.reset", "multiple-comparison/generated/generated/arch.bootstrap.StepM.seed", "multiple-comparison/generated/generated/arch.bootstrap.StepM.superior_models", "multiple-comparison/multiple-comparison-reference", "multiple-comparison/multiple-comparison_examples", "multiple-comparison/multiple-comparisons", "unitroot/cointegration", "unitroot/generated/arch.unitroot.ADF", "unitroot/generated/arch.unitroot.DFGLS", "unitroot/generated/arch.unitroot.KPSS", "unitroot/generated/arch.unitroot.PhillipsPerron", "unitroot/generated/arch.unitroot.VarianceRatio", "unitroot/generated/arch.unitroot.ZivotAndrews", "unitroot/generated/arch.unitroot.auto_bandwidth", "unitroot/generated/arch.unitroot.cointegration.CanonicalCointegratingReg", "unitroot/generated/arch.unitroot.cointegration.CointegrationAnalysisResults", "unitroot/generated/arch.unitroot.cointegration.DynamicOLS", "unitroot/generated/arch.unitroot.cointegration.DynamicOLSResults", "unitroot/generated/arch.unitroot.cointegration.EngleGrangerTestResults", "unitroot/generated/arch.unitroot.cointegration.FullyModifiedOLS", "unitroot/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults", "unitroot/generated/arch.unitroot.cointegration.engle_granger", "unitroot/generated/arch.unitroot.cointegration.phillips_ouliaris", "unitroot/generated/generated/arch.unitroot.ADF.alternative_hypothesis", "unitroot/generated/generated/arch.unitroot.ADF.critical_values", "unitroot/generated/generated/arch.unitroot.ADF.lags", "unitroot/generated/generated/arch.unitroot.ADF.max_lags", "unitroot/generated/generated/arch.unitroot.ADF.nobs", "unitroot/generated/generated/arch.unitroot.ADF.null_hypothesis", "unitroot/generated/generated/arch.unitroot.ADF.pvalue", "unitroot/generated/generated/arch.unitroot.ADF.regression", "unitroot/generated/generated/arch.unitroot.ADF.stat", "unitroot/generated/generated/arch.unitroot.ADF.summary", "unitroot/generated/generated/arch.unitroot.ADF.trend", "unitroot/generated/generated/arch.unitroot.ADF.valid_trends", "unitroot/generated/generated/arch.unitroot.ADF.y", "unitroot/generated/generated/arch.unitroot.DFGLS.alternative_hypothesis", "unitroot/generated/generated/arch.unitroot.DFGLS.critical_values", "unitroot/generated/generated/arch.unitroot.DFGLS.lags", "unitroot/generated/generated/arch.unitroot.DFGLS.max_lags", "unitroot/generated/generated/arch.unitroot.DFGLS.nobs", "unitroot/generated/generated/arch.unitroot.DFGLS.null_hypothesis", "unitroot/generated/generated/arch.unitroot.DFGLS.pvalue", "unitroot/generated/generated/arch.unitroot.DFGLS.regression", "unitroot/generated/generated/arch.unitroot.DFGLS.stat", "unitroot/generated/generated/arch.unitroot.DFGLS.summary", "unitroot/generated/generated/arch.unitroot.DFGLS.trend", "unitroot/generated/generated/arch.unitroot.DFGLS.valid_trends", "unitroot/generated/generated/arch.unitroot.DFGLS.y", "unitroot/generated/generated/arch.unitroot.KPSS.alternative_hypothesis", "unitroot/generated/generated/arch.unitroot.KPSS.critical_values", "unitroot/generated/generated/arch.unitroot.KPSS.lags", "unitroot/generated/generated/arch.unitroot.KPSS.nobs", "unitroot/generated/generated/arch.unitroot.KPSS.null_hypothesis", "unitroot/generated/generated/arch.unitroot.KPSS.pvalue", "unitroot/generated/generated/arch.unitroot.KPSS.stat", "unitroot/generated/generated/arch.unitroot.KPSS.summary", "unitroot/generated/generated/arch.unitroot.KPSS.trend", "unitroot/generated/generated/arch.unitroot.KPSS.valid_trends", "unitroot/generated/generated/arch.unitroot.KPSS.y", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.alternative_hypothesis", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.critical_values", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.lags", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.nobs", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.null_hypothesis", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.pvalue", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.regression", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.stat", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.summary", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.test_type", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.trend", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.valid_trends", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.y", "unitroot/generated/generated/arch.unitroot.VarianceRatio.alternative_hypothesis", "unitroot/generated/generated/arch.unitroot.VarianceRatio.critical_values", "unitroot/generated/generated/arch.unitroot.VarianceRatio.debiased", "unitroot/generated/generated/arch.unitroot.VarianceRatio.lags", "unitroot/generated/generated/arch.unitroot.VarianceRatio.nobs", "unitroot/generated/generated/arch.unitroot.VarianceRatio.null_hypothesis", "unitroot/generated/generated/arch.unitroot.VarianceRatio.overlap", "unitroot/generated/generated/arch.unitroot.VarianceRatio.pvalue", "unitroot/generated/generated/arch.unitroot.VarianceRatio.robust", "unitroot/generated/generated/arch.unitroot.VarianceRatio.stat", "unitroot/generated/generated/arch.unitroot.VarianceRatio.summary", "unitroot/generated/generated/arch.unitroot.VarianceRatio.trend", "unitroot/generated/generated/arch.unitroot.VarianceRatio.valid_trends", "unitroot/generated/generated/arch.unitroot.VarianceRatio.vr", "unitroot/generated/generated/arch.unitroot.VarianceRatio.y", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.alternative_hypothesis", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.critical_values", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.lags", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.nobs", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.null_hypothesis", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.pvalue", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.stat", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.summary", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.trend", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.valid_trends", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.y", "unitroot/generated/generated/arch.unitroot.cointegration.CanonicalCointegratingReg.fit", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.bandwidth", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.cov", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.kernel", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.long_run_variance", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.params", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.pvalues", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.resid", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.residual_variance", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.rsquared", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.rsquared_adj", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.std_errors", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.summary", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.tvalues", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLS.fit", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.bandwidth", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.cov", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.cov_type", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.full_cov", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.full_params", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.kernel", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.lags", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.leads", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.long_run_variance", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.params", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.pvalues", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.resid", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.residual_variance", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.rsquared", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.rsquared_adj", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.std_errors", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.summary", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.tvalues", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.alternative_hypothesis", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.cointegrating_vector", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.critical_values", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.distribution_order", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.lags", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.max_lags", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.name", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.null_hypothesis", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.plot", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.pvalue", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.resid", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.rho", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.stat", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.summary", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.trend", "unitroot/generated/generated/arch.unitroot.cointegration.FullyModifiedOLS.fit", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.alternative_hypothesis", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.bandwidth", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.cointegrating_vector", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.critical_values", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.distribution_order", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.kernel", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.name", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.null_hypothesis", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.plot", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.pvalue", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.resid", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.stat", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.summary", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.trend", "unitroot/introduction", "unitroot/tests", "unitroot/unitroot", "unitroot/unitroot_cointegration_examples", "unitroot/unitroot_examples", "univariate/background", "univariate/distribution", "univariate/forecasting", "univariate/generated/arch.univariate.APARCH", "univariate/generated/arch.univariate.ARCH", "univariate/generated/arch.univariate.ARCHInMean", "univariate/generated/arch.univariate.ARX", "univariate/generated/arch.univariate.ConstantMean", "univariate/generated/arch.univariate.ConstantVariance", "univariate/generated/arch.univariate.EGARCH", "univariate/generated/arch.univariate.EWMAVariance", "univariate/generated/arch.univariate.FIGARCH", "univariate/generated/arch.univariate.FixedVariance", "univariate/generated/arch.univariate.GARCH", "univariate/generated/arch.univariate.GeneralizedError", "univariate/generated/arch.univariate.HARCH", "univariate/generated/arch.univariate.HARX", "univariate/generated/arch.univariate.LS", "univariate/generated/arch.univariate.MIDASHyperbolic", "univariate/generated/arch.univariate.Normal", "univariate/generated/arch.univariate.RiskMetrics2006", "univariate/generated/arch.univariate.SkewStudent", "univariate/generated/arch.univariate.StudentsT", "univariate/generated/arch.univariate.ZeroMean", "univariate/generated/arch.univariate.base.ARCHModel", "univariate/generated/arch.univariate.base.ARCHModelFixedResult", "univariate/generated/arch.univariate.base.ARCHModelForecast", "univariate/generated/arch.univariate.base.ARCHModelForecastSimulation", "univariate/generated/arch.univariate.base.ARCHModelResult", "univariate/generated/arch.univariate.distribution.Distribution", "univariate/generated/arch.univariate.recursions_python.VolatilityUpdater", "univariate/generated/arch.univariate.volatility.VolatilityProcess", "univariate/generated/generated/arch.univariate.APARCH.backcast", "univariate/generated/generated/arch.univariate.APARCH.backcast_transform", "univariate/generated/generated/arch.univariate.APARCH.bounds", "univariate/generated/generated/arch.univariate.APARCH.common_asym", "univariate/generated/generated/arch.univariate.APARCH.compute_variance", "univariate/generated/generated/arch.univariate.APARCH.constraints", "univariate/generated/generated/arch.univariate.APARCH.delta", "univariate/generated/generated/arch.univariate.APARCH.forecast", "univariate/generated/generated/arch.univariate.APARCH.name", "univariate/generated/generated/arch.univariate.APARCH.num_params", "univariate/generated/generated/arch.univariate.APARCH.parameter_names", "univariate/generated/generated/arch.univariate.APARCH.simulate", "univariate/generated/generated/arch.univariate.APARCH.start", "univariate/generated/generated/arch.univariate.APARCH.starting_values", "univariate/generated/generated/arch.univariate.APARCH.stop", "univariate/generated/generated/arch.univariate.APARCH.update", "univariate/generated/generated/arch.univariate.APARCH.updateable", "univariate/generated/generated/arch.univariate.APARCH.variance_bounds", "univariate/generated/generated/arch.univariate.APARCH.volatility_updater", "univariate/generated/generated/arch.univariate.ARCH.backcast", "univariate/generated/generated/arch.univariate.ARCH.backcast_transform", "univariate/generated/generated/arch.univariate.ARCH.bounds", "univariate/generated/generated/arch.univariate.ARCH.compute_variance", "univariate/generated/generated/arch.univariate.ARCH.constraints", "univariate/generated/generated/arch.univariate.ARCH.forecast", "univariate/generated/generated/arch.univariate.ARCH.name", "univariate/generated/generated/arch.univariate.ARCH.num_params", "univariate/generated/generated/arch.univariate.ARCH.parameter_names", "univariate/generated/generated/arch.univariate.ARCH.simulate", "univariate/generated/generated/arch.univariate.ARCH.start", "univariate/generated/generated/arch.univariate.ARCH.starting_values", "univariate/generated/generated/arch.univariate.ARCH.stop", "univariate/generated/generated/arch.univariate.ARCH.update", "univariate/generated/generated/arch.univariate.ARCH.updateable", "univariate/generated/generated/arch.univariate.ARCH.variance_bounds", "univariate/generated/generated/arch.univariate.ARCH.volatility_updater", "univariate/generated/generated/arch.univariate.ARCHInMean.bounds", "univariate/generated/generated/arch.univariate.ARCHInMean.compute_param_cov", "univariate/generated/generated/arch.univariate.ARCHInMean.constraints", "univariate/generated/generated/arch.univariate.ARCHInMean.distribution", "univariate/generated/generated/arch.univariate.ARCHInMean.fit", "univariate/generated/generated/arch.univariate.ARCHInMean.fix", "univariate/generated/generated/arch.univariate.ARCHInMean.forecast", "univariate/generated/generated/arch.univariate.ARCHInMean.form", "univariate/generated/generated/arch.univariate.ARCHInMean.name", "univariate/generated/generated/arch.univariate.ARCHInMean.num_params", "univariate/generated/generated/arch.univariate.ARCHInMean.parameter_names", "univariate/generated/generated/arch.univariate.ARCHInMean.resids", "univariate/generated/generated/arch.univariate.ARCHInMean.simulate", "univariate/generated/generated/arch.univariate.ARCHInMean.starting_values", "univariate/generated/generated/arch.univariate.ARCHInMean.volatility", "univariate/generated/generated/arch.univariate.ARCHInMean.x", "univariate/generated/generated/arch.univariate.ARCHInMean.y", "univariate/generated/generated/arch.univariate.ARX.bounds", "univariate/generated/generated/arch.univariate.ARX.compute_param_cov", "univariate/generated/generated/arch.univariate.ARX.constraints", "univariate/generated/generated/arch.univariate.ARX.distribution", "univariate/generated/generated/arch.univariate.ARX.fit", "univariate/generated/generated/arch.univariate.ARX.fix", "univariate/generated/generated/arch.univariate.ARX.forecast", "univariate/generated/generated/arch.univariate.ARX.name", "univariate/generated/generated/arch.univariate.ARX.num_params", "univariate/generated/generated/arch.univariate.ARX.parameter_names", "univariate/generated/generated/arch.univariate.ARX.resids", "univariate/generated/generated/arch.univariate.ARX.simulate", "univariate/generated/generated/arch.univariate.ARX.starting_values", "univariate/generated/generated/arch.univariate.ARX.volatility", "univariate/generated/generated/arch.univariate.ARX.x", "univariate/generated/generated/arch.univariate.ARX.y", "univariate/generated/generated/arch.univariate.ConstantMean.bounds", "univariate/generated/generated/arch.univariate.ConstantMean.compute_param_cov", "univariate/generated/generated/arch.univariate.ConstantMean.constraints", "univariate/generated/generated/arch.univariate.ConstantMean.distribution", "univariate/generated/generated/arch.univariate.ConstantMean.fit", "univariate/generated/generated/arch.univariate.ConstantMean.fix", "univariate/generated/generated/arch.univariate.ConstantMean.forecast", "univariate/generated/generated/arch.univariate.ConstantMean.name", "univariate/generated/generated/arch.univariate.ConstantMean.num_params", "univariate/generated/generated/arch.univariate.ConstantMean.parameter_names", "univariate/generated/generated/arch.univariate.ConstantMean.resids", "univariate/generated/generated/arch.univariate.ConstantMean.simulate", "univariate/generated/generated/arch.univariate.ConstantMean.starting_values", "univariate/generated/generated/arch.univariate.ConstantMean.volatility", "univariate/generated/generated/arch.univariate.ConstantMean.x", "univariate/generated/generated/arch.univariate.ConstantMean.y", "univariate/generated/generated/arch.univariate.ConstantVariance.backcast", "univariate/generated/generated/arch.univariate.ConstantVariance.backcast_transform", "univariate/generated/generated/arch.univariate.ConstantVariance.bounds", "univariate/generated/generated/arch.univariate.ConstantVariance.compute_variance", "univariate/generated/generated/arch.univariate.ConstantVariance.constraints", "univariate/generated/generated/arch.univariate.ConstantVariance.forecast", "univariate/generated/generated/arch.univariate.ConstantVariance.name", "univariate/generated/generated/arch.univariate.ConstantVariance.num_params", "univariate/generated/generated/arch.univariate.ConstantVariance.parameter_names", "univariate/generated/generated/arch.univariate.ConstantVariance.simulate", "univariate/generated/generated/arch.univariate.ConstantVariance.start", "univariate/generated/generated/arch.univariate.ConstantVariance.starting_values", "univariate/generated/generated/arch.univariate.ConstantVariance.stop", "univariate/generated/generated/arch.univariate.ConstantVariance.update", "univariate/generated/generated/arch.univariate.ConstantVariance.updateable", "univariate/generated/generated/arch.univariate.ConstantVariance.variance_bounds", "univariate/generated/generated/arch.univariate.ConstantVariance.volatility_updater", "univariate/generated/generated/arch.univariate.EGARCH.backcast", "univariate/generated/generated/arch.univariate.EGARCH.backcast_transform", "univariate/generated/generated/arch.univariate.EGARCH.bounds", "univariate/generated/generated/arch.univariate.EGARCH.compute_variance", "univariate/generated/generated/arch.univariate.EGARCH.constraints", "univariate/generated/generated/arch.univariate.EGARCH.forecast", "univariate/generated/generated/arch.univariate.EGARCH.name", "univariate/generated/generated/arch.univariate.EGARCH.num_params", "univariate/generated/generated/arch.univariate.EGARCH.parameter_names", "univariate/generated/generated/arch.univariate.EGARCH.simulate", "univariate/generated/generated/arch.univariate.EGARCH.start", "univariate/generated/generated/arch.univariate.EGARCH.starting_values", "univariate/generated/generated/arch.univariate.EGARCH.stop", "univariate/generated/generated/arch.univariate.EGARCH.update", "univariate/generated/generated/arch.univariate.EGARCH.updateable", "univariate/generated/generated/arch.univariate.EGARCH.variance_bounds", "univariate/generated/generated/arch.univariate.EGARCH.volatility_updater", "univariate/generated/generated/arch.univariate.EWMAVariance.backcast", "univariate/generated/generated/arch.univariate.EWMAVariance.backcast_transform", "univariate/generated/generated/arch.univariate.EWMAVariance.bounds", "univariate/generated/generated/arch.univariate.EWMAVariance.compute_variance", "univariate/generated/generated/arch.univariate.EWMAVariance.constraints", "univariate/generated/generated/arch.univariate.EWMAVariance.forecast", "univariate/generated/generated/arch.univariate.EWMAVariance.name", "univariate/generated/generated/arch.univariate.EWMAVariance.num_params", "univariate/generated/generated/arch.univariate.EWMAVariance.parameter_names", "univariate/generated/generated/arch.univariate.EWMAVariance.simulate", "univariate/generated/generated/arch.univariate.EWMAVariance.start", "univariate/generated/generated/arch.univariate.EWMAVariance.starting_values", "univariate/generated/generated/arch.univariate.EWMAVariance.stop", "univariate/generated/generated/arch.univariate.EWMAVariance.update", "univariate/generated/generated/arch.univariate.EWMAVariance.updateable", "univariate/generated/generated/arch.univariate.EWMAVariance.variance_bounds", "univariate/generated/generated/arch.univariate.EWMAVariance.volatility_updater", "univariate/generated/generated/arch.univariate.FIGARCH.backcast", "univariate/generated/generated/arch.univariate.FIGARCH.backcast_transform", "univariate/generated/generated/arch.univariate.FIGARCH.bounds", "univariate/generated/generated/arch.univariate.FIGARCH.compute_variance", "univariate/generated/generated/arch.univariate.FIGARCH.constraints", "univariate/generated/generated/arch.univariate.FIGARCH.forecast", "univariate/generated/generated/arch.univariate.FIGARCH.name", "univariate/generated/generated/arch.univariate.FIGARCH.num_params", "univariate/generated/generated/arch.univariate.FIGARCH.parameter_names", "univariate/generated/generated/arch.univariate.FIGARCH.simulate", "univariate/generated/generated/arch.univariate.FIGARCH.start", "univariate/generated/generated/arch.univariate.FIGARCH.starting_values", "univariate/generated/generated/arch.univariate.FIGARCH.stop", "univariate/generated/generated/arch.univariate.FIGARCH.truncation", "univariate/generated/generated/arch.univariate.FIGARCH.update", "univariate/generated/generated/arch.univariate.FIGARCH.updateable", "univariate/generated/generated/arch.univariate.FIGARCH.variance_bounds", "univariate/generated/generated/arch.univariate.FIGARCH.volatility_updater", "univariate/generated/generated/arch.univariate.FixedVariance.backcast", "univariate/generated/generated/arch.univariate.FixedVariance.backcast_transform", "univariate/generated/generated/arch.univariate.FixedVariance.bounds", "univariate/generated/generated/arch.univariate.FixedVariance.compute_variance", "univariate/generated/generated/arch.univariate.FixedVariance.constraints", "univariate/generated/generated/arch.univariate.FixedVariance.forecast", "univariate/generated/generated/arch.univariate.FixedVariance.name", "univariate/generated/generated/arch.univariate.FixedVariance.num_params", "univariate/generated/generated/arch.univariate.FixedVariance.parameter_names", "univariate/generated/generated/arch.univariate.FixedVariance.simulate", "univariate/generated/generated/arch.univariate.FixedVariance.start", "univariate/generated/generated/arch.univariate.FixedVariance.starting_values", "univariate/generated/generated/arch.univariate.FixedVariance.stop", "univariate/generated/generated/arch.univariate.FixedVariance.update", "univariate/generated/generated/arch.univariate.FixedVariance.updateable", "univariate/generated/generated/arch.univariate.FixedVariance.variance_bounds", "univariate/generated/generated/arch.univariate.FixedVariance.volatility_updater", "univariate/generated/generated/arch.univariate.GARCH.backcast", "univariate/generated/generated/arch.univariate.GARCH.backcast_transform", "univariate/generated/generated/arch.univariate.GARCH.bounds", "univariate/generated/generated/arch.univariate.GARCH.compute_variance", "univariate/generated/generated/arch.univariate.GARCH.constraints", "univariate/generated/generated/arch.univariate.GARCH.forecast", "univariate/generated/generated/arch.univariate.GARCH.name", "univariate/generated/generated/arch.univariate.GARCH.num_params", "univariate/generated/generated/arch.univariate.GARCH.parameter_names", "univariate/generated/generated/arch.univariate.GARCH.simulate", "univariate/generated/generated/arch.univariate.GARCH.start", "univariate/generated/generated/arch.univariate.GARCH.starting_values", "univariate/generated/generated/arch.univariate.GARCH.stop", "univariate/generated/generated/arch.univariate.GARCH.update", "univariate/generated/generated/arch.univariate.GARCH.updateable", "univariate/generated/generated/arch.univariate.GARCH.variance_bounds", "univariate/generated/generated/arch.univariate.GARCH.volatility_updater", "univariate/generated/generated/arch.univariate.GeneralizedError.bounds", "univariate/generated/generated/arch.univariate.GeneralizedError.cdf", "univariate/generated/generated/arch.univariate.GeneralizedError.constraints", "univariate/generated/generated/arch.univariate.GeneralizedError.generator", "univariate/generated/generated/arch.univariate.GeneralizedError.loglikelihood", "univariate/generated/generated/arch.univariate.GeneralizedError.moment", "univariate/generated/generated/arch.univariate.GeneralizedError.name", "univariate/generated/generated/arch.univariate.GeneralizedError.parameter_names", "univariate/generated/generated/arch.univariate.GeneralizedError.partial_moment", "univariate/generated/generated/arch.univariate.GeneralizedError.ppf", "univariate/generated/generated/arch.univariate.GeneralizedError.random_state", "univariate/generated/generated/arch.univariate.GeneralizedError.simulate", "univariate/generated/generated/arch.univariate.GeneralizedError.starting_values", "univariate/generated/generated/arch.univariate.HARCH.backcast", "univariate/generated/generated/arch.univariate.HARCH.backcast_transform", "univariate/generated/generated/arch.univariate.HARCH.bounds", "univariate/generated/generated/arch.univariate.HARCH.compute_variance", "univariate/generated/generated/arch.univariate.HARCH.constraints", "univariate/generated/generated/arch.univariate.HARCH.forecast", "univariate/generated/generated/arch.univariate.HARCH.name", "univariate/generated/generated/arch.univariate.HARCH.num_params", "univariate/generated/generated/arch.univariate.HARCH.parameter_names", "univariate/generated/generated/arch.univariate.HARCH.simulate", "univariate/generated/generated/arch.univariate.HARCH.start", "univariate/generated/generated/arch.univariate.HARCH.starting_values", "univariate/generated/generated/arch.univariate.HARCH.stop", "univariate/generated/generated/arch.univariate.HARCH.update", "univariate/generated/generated/arch.univariate.HARCH.updateable", "univariate/generated/generated/arch.univariate.HARCH.variance_bounds", "univariate/generated/generated/arch.univariate.HARCH.volatility_updater", "univariate/generated/generated/arch.univariate.HARX.bounds", "univariate/generated/generated/arch.univariate.HARX.compute_param_cov", "univariate/generated/generated/arch.univariate.HARX.constraints", "univariate/generated/generated/arch.univariate.HARX.distribution", "univariate/generated/generated/arch.univariate.HARX.fit", "univariate/generated/generated/arch.univariate.HARX.fix", "univariate/generated/generated/arch.univariate.HARX.forecast", "univariate/generated/generated/arch.univariate.HARX.name", "univariate/generated/generated/arch.univariate.HARX.num_params", "univariate/generated/generated/arch.univariate.HARX.parameter_names", "univariate/generated/generated/arch.univariate.HARX.resids", "univariate/generated/generated/arch.univariate.HARX.simulate", "univariate/generated/generated/arch.univariate.HARX.starting_values", "univariate/generated/generated/arch.univariate.HARX.volatility", "univariate/generated/generated/arch.univariate.HARX.x", "univariate/generated/generated/arch.univariate.HARX.y", "univariate/generated/generated/arch.univariate.LS.bounds", "univariate/generated/generated/arch.univariate.LS.compute_param_cov", "univariate/generated/generated/arch.univariate.LS.constraints", "univariate/generated/generated/arch.univariate.LS.distribution", "univariate/generated/generated/arch.univariate.LS.fit", "univariate/generated/generated/arch.univariate.LS.fix", "univariate/generated/generated/arch.univariate.LS.forecast", "univariate/generated/generated/arch.univariate.LS.name", "univariate/generated/generated/arch.univariate.LS.num_params", "univariate/generated/generated/arch.univariate.LS.parameter_names", "univariate/generated/generated/arch.univariate.LS.resids", "univariate/generated/generated/arch.univariate.LS.simulate", "univariate/generated/generated/arch.univariate.LS.starting_values", "univariate/generated/generated/arch.univariate.LS.volatility", "univariate/generated/generated/arch.univariate.LS.x", "univariate/generated/generated/arch.univariate.LS.y", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.backcast", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.backcast_transform", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.bounds", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.compute_variance", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.constraints", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.forecast", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.name", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.num_params", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.parameter_names", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.simulate", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.start", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.starting_values", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.stop", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.update", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.updateable", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.variance_bounds", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.volatility_updater", "univariate/generated/generated/arch.univariate.Normal.bounds", "univariate/generated/generated/arch.univariate.Normal.cdf", "univariate/generated/generated/arch.univariate.Normal.constraints", "univariate/generated/generated/arch.univariate.Normal.generator", "univariate/generated/generated/arch.univariate.Normal.loglikelihood", "univariate/generated/generated/arch.univariate.Normal.moment", "univariate/generated/generated/arch.univariate.Normal.name", "univariate/generated/generated/arch.univariate.Normal.parameter_names", "univariate/generated/generated/arch.univariate.Normal.partial_moment", "univariate/generated/generated/arch.univariate.Normal.ppf", "univariate/generated/generated/arch.univariate.Normal.random_state", "univariate/generated/generated/arch.univariate.Normal.simulate", "univariate/generated/generated/arch.univariate.Normal.starting_values", "univariate/generated/generated/arch.univariate.RiskMetrics2006.backcast", "univariate/generated/generated/arch.univariate.RiskMetrics2006.backcast_transform", "univariate/generated/generated/arch.univariate.RiskMetrics2006.bounds", "univariate/generated/generated/arch.univariate.RiskMetrics2006.compute_variance", "univariate/generated/generated/arch.univariate.RiskMetrics2006.constraints", "univariate/generated/generated/arch.univariate.RiskMetrics2006.forecast", "univariate/generated/generated/arch.univariate.RiskMetrics2006.name", "univariate/generated/generated/arch.univariate.RiskMetrics2006.num_params", "univariate/generated/generated/arch.univariate.RiskMetrics2006.parameter_names", "univariate/generated/generated/arch.univariate.RiskMetrics2006.simulate", "univariate/generated/generated/arch.univariate.RiskMetrics2006.start", "univariate/generated/generated/arch.univariate.RiskMetrics2006.starting_values", "univariate/generated/generated/arch.univariate.RiskMetrics2006.stop", "univariate/generated/generated/arch.univariate.RiskMetrics2006.update", "univariate/generated/generated/arch.univariate.RiskMetrics2006.updateable", "univariate/generated/generated/arch.univariate.RiskMetrics2006.variance_bounds", "univariate/generated/generated/arch.univariate.RiskMetrics2006.volatility_updater", "univariate/generated/generated/arch.univariate.SkewStudent.bounds", "univariate/generated/generated/arch.univariate.SkewStudent.cdf", "univariate/generated/generated/arch.univariate.SkewStudent.constraints", "univariate/generated/generated/arch.univariate.SkewStudent.generator", "univariate/generated/generated/arch.univariate.SkewStudent.loglikelihood", "univariate/generated/generated/arch.univariate.SkewStudent.moment", "univariate/generated/generated/arch.univariate.SkewStudent.name", "univariate/generated/generated/arch.univariate.SkewStudent.parameter_names", "univariate/generated/generated/arch.univariate.SkewStudent.partial_moment", "univariate/generated/generated/arch.univariate.SkewStudent.ppf", "univariate/generated/generated/arch.univariate.SkewStudent.random_state", "univariate/generated/generated/arch.univariate.SkewStudent.simulate", "univariate/generated/generated/arch.univariate.SkewStudent.starting_values", "univariate/generated/generated/arch.univariate.StudentsT.bounds", "univariate/generated/generated/arch.univariate.StudentsT.cdf", "univariate/generated/generated/arch.univariate.StudentsT.constraints", "univariate/generated/generated/arch.univariate.StudentsT.generator", "univariate/generated/generated/arch.univariate.StudentsT.loglikelihood", "univariate/generated/generated/arch.univariate.StudentsT.moment", "univariate/generated/generated/arch.univariate.StudentsT.name", "univariate/generated/generated/arch.univariate.StudentsT.parameter_names", "univariate/generated/generated/arch.univariate.StudentsT.partial_moment", "univariate/generated/generated/arch.univariate.StudentsT.ppf", "univariate/generated/generated/arch.univariate.StudentsT.random_state", "univariate/generated/generated/arch.univariate.StudentsT.simulate", "univariate/generated/generated/arch.univariate.StudentsT.starting_values", "univariate/generated/generated/arch.univariate.ZeroMean.bounds", "univariate/generated/generated/arch.univariate.ZeroMean.compute_param_cov", "univariate/generated/generated/arch.univariate.ZeroMean.constraints", "univariate/generated/generated/arch.univariate.ZeroMean.distribution", "univariate/generated/generated/arch.univariate.ZeroMean.fit", "univariate/generated/generated/arch.univariate.ZeroMean.fix", "univariate/generated/generated/arch.univariate.ZeroMean.forecast", "univariate/generated/generated/arch.univariate.ZeroMean.name", "univariate/generated/generated/arch.univariate.ZeroMean.num_params", "univariate/generated/generated/arch.univariate.ZeroMean.parameter_names", "univariate/generated/generated/arch.univariate.ZeroMean.resids", "univariate/generated/generated/arch.univariate.ZeroMean.simulate", "univariate/generated/generated/arch.univariate.ZeroMean.starting_values", "univariate/generated/generated/arch.univariate.ZeroMean.volatility", "univariate/generated/generated/arch.univariate.ZeroMean.x", "univariate/generated/generated/arch.univariate.ZeroMean.y", "univariate/generated/generated/arch.univariate.base.ARCHModel.bounds", "univariate/generated/generated/arch.univariate.base.ARCHModel.compute_param_cov", "univariate/generated/generated/arch.univariate.base.ARCHModel.constraints", "univariate/generated/generated/arch.univariate.base.ARCHModel.distribution", "univariate/generated/generated/arch.univariate.base.ARCHModel.fit", "univariate/generated/generated/arch.univariate.base.ARCHModel.fix", "univariate/generated/generated/arch.univariate.base.ARCHModel.forecast", "univariate/generated/generated/arch.univariate.base.ARCHModel.name", "univariate/generated/generated/arch.univariate.base.ARCHModel.num_params", "univariate/generated/generated/arch.univariate.base.ARCHModel.parameter_names", "univariate/generated/generated/arch.univariate.base.ARCHModel.resids", "univariate/generated/generated/arch.univariate.base.ARCHModel.simulate", "univariate/generated/generated/arch.univariate.base.ARCHModel.starting_values", "univariate/generated/generated/arch.univariate.base.ARCHModel.volatility", "univariate/generated/generated/arch.univariate.base.ARCHModel.y", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.aic", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.arch_lm_test", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.bic", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.conditional_volatility", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.forecast", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.hedgehog_plot", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.loglikelihood", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.model", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.nobs", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.num_params", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.params", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.plot", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.resid", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.std_resid", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.summary", "univariate/generated/generated/arch.univariate.base.ARCHModelForecast.mean", "univariate/generated/generated/arch.univariate.base.ARCHModelForecast.residual_variance", "univariate/generated/generated/arch.univariate.base.ARCHModelForecast.simulations", "univariate/generated/generated/arch.univariate.base.ARCHModelForecast.variance", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.index", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.residual_variances", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.residuals", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.values", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.variances", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.aic", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.arch_lm_test", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.bic", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.conditional_volatility", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.conf_int", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.convergence_flag", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.fit_start", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.fit_stop", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.forecast", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.hedgehog_plot", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.loglikelihood", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.model", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.nobs", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.num_params", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.optimization_result", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.param_cov", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.params", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.plot", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.pvalues", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.resid", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.rsquared", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.rsquared_adj", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.scale", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.std_err", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.std_resid", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.summary", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.tvalues", "univariate/generated/generated/arch.univariate.distribution.Distribution.bounds", "univariate/generated/generated/arch.univariate.distribution.Distribution.cdf", "univariate/generated/generated/arch.univariate.distribution.Distribution.constraints", "univariate/generated/generated/arch.univariate.distribution.Distribution.generator", "univariate/generated/generated/arch.univariate.distribution.Distribution.loglikelihood", "univariate/generated/generated/arch.univariate.distribution.Distribution.moment", "univariate/generated/generated/arch.univariate.distribution.Distribution.name", "univariate/generated/generated/arch.univariate.distribution.Distribution.parameter_names", "univariate/generated/generated/arch.univariate.distribution.Distribution.partial_moment", "univariate/generated/generated/arch.univariate.distribution.Distribution.ppf", "univariate/generated/generated/arch.univariate.distribution.Distribution.random_state", "univariate/generated/generated/arch.univariate.distribution.Distribution.simulate", "univariate/generated/generated/arch.univariate.distribution.Distribution.starting_values", "univariate/generated/generated/arch.univariate.recursions_python.VolatilityUpdater.initialize_update", "univariate/generated/generated/arch.univariate.recursions_python.VolatilityUpdater.update", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.backcast", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.backcast_transform", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.bounds", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.compute_variance", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.constraints", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.forecast", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.name", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.num_params", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.parameter_names", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.simulate", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.start", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.starting_values", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.stop", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.update", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.updateable", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.variance_bounds", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.volatility_updater", "univariate/introduction", "univariate/mean", "univariate/results", "univariate/univariate", "univariate/univariate_forecasting_with_exogenous_variables", "univariate/univariate_using_fixed_variance", "univariate/univariate_volatility_forecasting", "univariate/univariate_volatility_modeling", "univariate/univariate_volatility_scenarios", "univariate/utility", "univariate/volatility"], "filenames": ["api.rst", "bootstrap/background.rst", "bootstrap/bootstrap.rst", "bootstrap/bootstrap_examples.ipynb", "bootstrap/confidence-intervals.rst", "bootstrap/generated/arch.bootstrap.CircularBlockBootstrap.rst", "bootstrap/generated/arch.bootstrap.IIDBootstrap.rst", "bootstrap/generated/arch.bootstrap.IndependentSamplesBootstrap.rst", "bootstrap/generated/arch.bootstrap.MovingBlockBootstrap.rst", "bootstrap/generated/arch.bootstrap.StationaryBootstrap.rst", "bootstrap/generated/arch.bootstrap.optimal_block_length.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.apply.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.bootstrap.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.clone.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.conf_int.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.cov.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.generator.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.get_state.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.index.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.random_state.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.reset.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.seed.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.set_state.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.state.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.update_indices.rst", "bootstrap/generated/generated/arch.bootstrap.CircularBlockBootstrap.var.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.apply.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.bootstrap.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.clone.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.conf_int.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.cov.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.generator.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.get_state.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.index.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.random_state.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.reset.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.seed.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.set_state.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.state.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.update_indices.rst", "bootstrap/generated/generated/arch.bootstrap.IIDBootstrap.var.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.apply.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.bootstrap.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.clone.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.conf_int.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.cov.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.generator.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.get_state.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.index.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.random_state.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.reset.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.seed.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.set_state.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.state.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.update_indices.rst", "bootstrap/generated/generated/arch.bootstrap.IndependentSamplesBootstrap.var.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.apply.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.bootstrap.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.clone.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.conf_int.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.cov.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.generator.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.get_state.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.index.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.random_state.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.reset.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.seed.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.set_state.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.state.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.update_indices.rst", "bootstrap/generated/generated/arch.bootstrap.MovingBlockBootstrap.var.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.apply.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.bootstrap.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.clone.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.conf_int.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.cov.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.generator.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.get_state.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.index.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.random_state.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.reset.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.seed.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.set_state.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.state.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.update_indices.rst", "bootstrap/generated/generated/arch.bootstrap.StationaryBootstrap.var.rst", "bootstrap/iid-bootstraps.rst", "bootstrap/low-level-interface.rst", "bootstrap/parameter-covariance-estimation.rst", "bootstrap/semiparametric-parametric-bootstrap.rst", "bootstrap/timeseries-bootstraps.rst", "changes.rst", "covariance/covariance.rst", "covariance/generated/arch.covariance.kernel.Andrews.rst", "covariance/generated/arch.covariance.kernel.Bartlett.rst", "covariance/generated/arch.covariance.kernel.CovarianceEstimate.rst", "covariance/generated/arch.covariance.kernel.Gallant.rst", "covariance/generated/arch.covariance.kernel.NeweyWest.rst", "covariance/generated/arch.covariance.kernel.Parzen.rst", "covariance/generated/arch.covariance.kernel.ParzenCauchy.rst", "covariance/generated/arch.covariance.kernel.ParzenGeometric.rst", "covariance/generated/arch.covariance.kernel.ParzenRiesz.rst", "covariance/generated/arch.covariance.kernel.QuadraticSpectral.rst", "covariance/generated/arch.covariance.kernel.TukeyHamming.rst", "covariance/generated/arch.covariance.kernel.TukeyHanning.rst", "covariance/generated/arch.covariance.kernel.TukeyParzen.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.centered.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.cov.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.name.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.Andrews.rate.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.centered.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.cov.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.name.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.Bartlett.rate.rst", "covariance/generated/generated/arch.covariance.kernel.CovarianceEstimate.long_run.rst", "covariance/generated/generated/arch.covariance.kernel.CovarianceEstimate.one_sided.rst", "covariance/generated/generated/arch.covariance.kernel.CovarianceEstimate.one_sided_strict.rst", "covariance/generated/generated/arch.covariance.kernel.CovarianceEstimate.short_run.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.centered.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.cov.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.name.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.Gallant.rate.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.centered.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.cov.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.name.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.NeweyWest.rate.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.centered.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.cov.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.name.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.Parzen.rate.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.centered.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.cov.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.name.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenCauchy.rate.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.centered.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.cov.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.name.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenGeometric.rate.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.centered.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.cov.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.name.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.ParzenRiesz.rate.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.centered.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.cov.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.name.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.QuadraticSpectral.rate.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.centered.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.cov.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.name.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHamming.rate.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.centered.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.cov.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.name.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyHanning.rate.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.bandwidth_scale.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.centered.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.cov.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.force_int.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.kernel_const.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.kernel_weights.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.name.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.opt_bandwidth.rst", "covariance/generated/generated/arch.covariance.kernel.TukeyParzen.rate.rst", "index.rst", "multiple-comparison/background.rst", "multiple-comparison/generated/arch.bootstrap.MCS.rst", "multiple-comparison/generated/arch.bootstrap.SPA.rst", "multiple-comparison/generated/arch.bootstrap.StepM.rst", "multiple-comparison/generated/generated/arch.bootstrap.MCS.compute.rst", "multiple-comparison/generated/generated/arch.bootstrap.MCS.excluded.rst", "multiple-comparison/generated/generated/arch.bootstrap.MCS.included.rst", "multiple-comparison/generated/generated/arch.bootstrap.MCS.pvalues.rst", "multiple-comparison/generated/generated/arch.bootstrap.MCS.reset.rst", "multiple-comparison/generated/generated/arch.bootstrap.MCS.seed.rst", "multiple-comparison/generated/generated/arch.bootstrap.SPA.better_models.rst", "multiple-comparison/generated/generated/arch.bootstrap.SPA.compute.rst", "multiple-comparison/generated/generated/arch.bootstrap.SPA.critical_values.rst", "multiple-comparison/generated/generated/arch.bootstrap.SPA.pvalues.rst", "multiple-comparison/generated/generated/arch.bootstrap.SPA.reset.rst", "multiple-comparison/generated/generated/arch.bootstrap.SPA.seed.rst", "multiple-comparison/generated/generated/arch.bootstrap.SPA.subset.rst", "multiple-comparison/generated/generated/arch.bootstrap.StepM.compute.rst", "multiple-comparison/generated/generated/arch.bootstrap.StepM.reset.rst", "multiple-comparison/generated/generated/arch.bootstrap.StepM.seed.rst", "multiple-comparison/generated/generated/arch.bootstrap.StepM.superior_models.rst", "multiple-comparison/multiple-comparison-reference.rst", "multiple-comparison/multiple-comparison_examples.ipynb", "multiple-comparison/multiple-comparisons.rst", "unitroot/cointegration.rst", "unitroot/generated/arch.unitroot.ADF.rst", "unitroot/generated/arch.unitroot.DFGLS.rst", "unitroot/generated/arch.unitroot.KPSS.rst", "unitroot/generated/arch.unitroot.PhillipsPerron.rst", "unitroot/generated/arch.unitroot.VarianceRatio.rst", "unitroot/generated/arch.unitroot.ZivotAndrews.rst", "unitroot/generated/arch.unitroot.auto_bandwidth.rst", "unitroot/generated/arch.unitroot.cointegration.CanonicalCointegratingReg.rst", "unitroot/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.rst", "unitroot/generated/arch.unitroot.cointegration.DynamicOLS.rst", "unitroot/generated/arch.unitroot.cointegration.DynamicOLSResults.rst", "unitroot/generated/arch.unitroot.cointegration.EngleGrangerTestResults.rst", "unitroot/generated/arch.unitroot.cointegration.FullyModifiedOLS.rst", "unitroot/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.rst", "unitroot/generated/arch.unitroot.cointegration.engle_granger.rst", "unitroot/generated/arch.unitroot.cointegration.phillips_ouliaris.rst", "unitroot/generated/generated/arch.unitroot.ADF.alternative_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.ADF.critical_values.rst", "unitroot/generated/generated/arch.unitroot.ADF.lags.rst", "unitroot/generated/generated/arch.unitroot.ADF.max_lags.rst", "unitroot/generated/generated/arch.unitroot.ADF.nobs.rst", "unitroot/generated/generated/arch.unitroot.ADF.null_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.ADF.pvalue.rst", "unitroot/generated/generated/arch.unitroot.ADF.regression.rst", "unitroot/generated/generated/arch.unitroot.ADF.stat.rst", "unitroot/generated/generated/arch.unitroot.ADF.summary.rst", "unitroot/generated/generated/arch.unitroot.ADF.trend.rst", "unitroot/generated/generated/arch.unitroot.ADF.valid_trends.rst", "unitroot/generated/generated/arch.unitroot.ADF.y.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.alternative_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.critical_values.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.lags.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.max_lags.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.nobs.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.null_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.pvalue.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.regression.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.stat.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.summary.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.trend.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.valid_trends.rst", "unitroot/generated/generated/arch.unitroot.DFGLS.y.rst", "unitroot/generated/generated/arch.unitroot.KPSS.alternative_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.KPSS.critical_values.rst", "unitroot/generated/generated/arch.unitroot.KPSS.lags.rst", "unitroot/generated/generated/arch.unitroot.KPSS.nobs.rst", "unitroot/generated/generated/arch.unitroot.KPSS.null_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.KPSS.pvalue.rst", "unitroot/generated/generated/arch.unitroot.KPSS.stat.rst", "unitroot/generated/generated/arch.unitroot.KPSS.summary.rst", "unitroot/generated/generated/arch.unitroot.KPSS.trend.rst", "unitroot/generated/generated/arch.unitroot.KPSS.valid_trends.rst", "unitroot/generated/generated/arch.unitroot.KPSS.y.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.alternative_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.critical_values.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.lags.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.nobs.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.null_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.pvalue.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.regression.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.stat.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.summary.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.test_type.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.trend.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.valid_trends.rst", "unitroot/generated/generated/arch.unitroot.PhillipsPerron.y.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.alternative_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.critical_values.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.debiased.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.lags.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.nobs.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.null_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.overlap.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.pvalue.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.robust.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.stat.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.summary.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.trend.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.valid_trends.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.vr.rst", "unitroot/generated/generated/arch.unitroot.VarianceRatio.y.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.alternative_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.critical_values.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.lags.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.nobs.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.null_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.pvalue.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.stat.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.summary.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.trend.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.valid_trends.rst", "unitroot/generated/generated/arch.unitroot.ZivotAndrews.y.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CanonicalCointegratingReg.fit.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.bandwidth.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.cov.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.kernel.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.long_run_variance.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.params.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.pvalues.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.resid.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.residual_variance.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.rsquared.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.rsquared_adj.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.std_errors.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.summary.rst", "unitroot/generated/generated/arch.unitroot.cointegration.CointegrationAnalysisResults.tvalues.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLS.fit.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.bandwidth.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.cov.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.cov_type.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.full_cov.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.full_params.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.kernel.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.lags.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.leads.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.long_run_variance.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.params.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.pvalues.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.resid.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.residual_variance.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.rsquared.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.rsquared_adj.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.std_errors.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.summary.rst", "unitroot/generated/generated/arch.unitroot.cointegration.DynamicOLSResults.tvalues.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.alternative_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.cointegrating_vector.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.critical_values.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.distribution_order.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.lags.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.max_lags.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.name.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.null_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.plot.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.pvalue.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.resid.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.rho.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.stat.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.summary.rst", "unitroot/generated/generated/arch.unitroot.cointegration.EngleGrangerTestResults.trend.rst", "unitroot/generated/generated/arch.unitroot.cointegration.FullyModifiedOLS.fit.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.alternative_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.bandwidth.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.cointegrating_vector.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.critical_values.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.distribution_order.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.kernel.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.name.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.null_hypothesis.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.plot.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.pvalue.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.resid.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.stat.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.summary.rst", "unitroot/generated/generated/arch.unitroot.cointegration.PhillipsOuliarisTestResults.trend.rst", "unitroot/introduction.rst", "unitroot/tests.rst", "unitroot/unitroot.rst", "unitroot/unitroot_cointegration_examples.ipynb", "unitroot/unitroot_examples.ipynb", "univariate/background.rst", "univariate/distribution.rst", "univariate/forecasting.rst", "univariate/generated/arch.univariate.APARCH.rst", "univariate/generated/arch.univariate.ARCH.rst", "univariate/generated/arch.univariate.ARCHInMean.rst", "univariate/generated/arch.univariate.ARX.rst", "univariate/generated/arch.univariate.ConstantMean.rst", "univariate/generated/arch.univariate.ConstantVariance.rst", "univariate/generated/arch.univariate.EGARCH.rst", "univariate/generated/arch.univariate.EWMAVariance.rst", "univariate/generated/arch.univariate.FIGARCH.rst", "univariate/generated/arch.univariate.FixedVariance.rst", "univariate/generated/arch.univariate.GARCH.rst", "univariate/generated/arch.univariate.GeneralizedError.rst", "univariate/generated/arch.univariate.HARCH.rst", "univariate/generated/arch.univariate.HARX.rst", "univariate/generated/arch.univariate.LS.rst", "univariate/generated/arch.univariate.MIDASHyperbolic.rst", "univariate/generated/arch.univariate.Normal.rst", "univariate/generated/arch.univariate.RiskMetrics2006.rst", "univariate/generated/arch.univariate.SkewStudent.rst", "univariate/generated/arch.univariate.StudentsT.rst", "univariate/generated/arch.univariate.ZeroMean.rst", "univariate/generated/arch.univariate.base.ARCHModel.rst", "univariate/generated/arch.univariate.base.ARCHModelFixedResult.rst", "univariate/generated/arch.univariate.base.ARCHModelForecast.rst", "univariate/generated/arch.univariate.base.ARCHModelForecastSimulation.rst", "univariate/generated/arch.univariate.base.ARCHModelResult.rst", "univariate/generated/arch.univariate.distribution.Distribution.rst", "univariate/generated/arch.univariate.recursions_python.VolatilityUpdater.rst", "univariate/generated/arch.univariate.volatility.VolatilityProcess.rst", "univariate/generated/generated/arch.univariate.APARCH.backcast.rst", "univariate/generated/generated/arch.univariate.APARCH.backcast_transform.rst", "univariate/generated/generated/arch.univariate.APARCH.bounds.rst", "univariate/generated/generated/arch.univariate.APARCH.common_asym.rst", "univariate/generated/generated/arch.univariate.APARCH.compute_variance.rst", "univariate/generated/generated/arch.univariate.APARCH.constraints.rst", "univariate/generated/generated/arch.univariate.APARCH.delta.rst", "univariate/generated/generated/arch.univariate.APARCH.forecast.rst", "univariate/generated/generated/arch.univariate.APARCH.name.rst", "univariate/generated/generated/arch.univariate.APARCH.num_params.rst", "univariate/generated/generated/arch.univariate.APARCH.parameter_names.rst", "univariate/generated/generated/arch.univariate.APARCH.simulate.rst", "univariate/generated/generated/arch.univariate.APARCH.start.rst", "univariate/generated/generated/arch.univariate.APARCH.starting_values.rst", "univariate/generated/generated/arch.univariate.APARCH.stop.rst", "univariate/generated/generated/arch.univariate.APARCH.update.rst", "univariate/generated/generated/arch.univariate.APARCH.updateable.rst", "univariate/generated/generated/arch.univariate.APARCH.variance_bounds.rst", "univariate/generated/generated/arch.univariate.APARCH.volatility_updater.rst", "univariate/generated/generated/arch.univariate.ARCH.backcast.rst", "univariate/generated/generated/arch.univariate.ARCH.backcast_transform.rst", "univariate/generated/generated/arch.univariate.ARCH.bounds.rst", "univariate/generated/generated/arch.univariate.ARCH.compute_variance.rst", "univariate/generated/generated/arch.univariate.ARCH.constraints.rst", "univariate/generated/generated/arch.univariate.ARCH.forecast.rst", "univariate/generated/generated/arch.univariate.ARCH.name.rst", "univariate/generated/generated/arch.univariate.ARCH.num_params.rst", "univariate/generated/generated/arch.univariate.ARCH.parameter_names.rst", "univariate/generated/generated/arch.univariate.ARCH.simulate.rst", "univariate/generated/generated/arch.univariate.ARCH.start.rst", "univariate/generated/generated/arch.univariate.ARCH.starting_values.rst", "univariate/generated/generated/arch.univariate.ARCH.stop.rst", "univariate/generated/generated/arch.univariate.ARCH.update.rst", "univariate/generated/generated/arch.univariate.ARCH.updateable.rst", "univariate/generated/generated/arch.univariate.ARCH.variance_bounds.rst", "univariate/generated/generated/arch.univariate.ARCH.volatility_updater.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.bounds.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.compute_param_cov.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.constraints.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.distribution.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.fit.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.fix.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.forecast.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.form.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.name.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.num_params.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.parameter_names.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.resids.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.simulate.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.starting_values.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.volatility.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.x.rst", "univariate/generated/generated/arch.univariate.ARCHInMean.y.rst", "univariate/generated/generated/arch.univariate.ARX.bounds.rst", "univariate/generated/generated/arch.univariate.ARX.compute_param_cov.rst", "univariate/generated/generated/arch.univariate.ARX.constraints.rst", "univariate/generated/generated/arch.univariate.ARX.distribution.rst", "univariate/generated/generated/arch.univariate.ARX.fit.rst", "univariate/generated/generated/arch.univariate.ARX.fix.rst", "univariate/generated/generated/arch.univariate.ARX.forecast.rst", "univariate/generated/generated/arch.univariate.ARX.name.rst", "univariate/generated/generated/arch.univariate.ARX.num_params.rst", "univariate/generated/generated/arch.univariate.ARX.parameter_names.rst", "univariate/generated/generated/arch.univariate.ARX.resids.rst", "univariate/generated/generated/arch.univariate.ARX.simulate.rst", "univariate/generated/generated/arch.univariate.ARX.starting_values.rst", "univariate/generated/generated/arch.univariate.ARX.volatility.rst", "univariate/generated/generated/arch.univariate.ARX.x.rst", "univariate/generated/generated/arch.univariate.ARX.y.rst", "univariate/generated/generated/arch.univariate.ConstantMean.bounds.rst", "univariate/generated/generated/arch.univariate.ConstantMean.compute_param_cov.rst", "univariate/generated/generated/arch.univariate.ConstantMean.constraints.rst", "univariate/generated/generated/arch.univariate.ConstantMean.distribution.rst", "univariate/generated/generated/arch.univariate.ConstantMean.fit.rst", "univariate/generated/generated/arch.univariate.ConstantMean.fix.rst", "univariate/generated/generated/arch.univariate.ConstantMean.forecast.rst", "univariate/generated/generated/arch.univariate.ConstantMean.name.rst", "univariate/generated/generated/arch.univariate.ConstantMean.num_params.rst", "univariate/generated/generated/arch.univariate.ConstantMean.parameter_names.rst", "univariate/generated/generated/arch.univariate.ConstantMean.resids.rst", "univariate/generated/generated/arch.univariate.ConstantMean.simulate.rst", "univariate/generated/generated/arch.univariate.ConstantMean.starting_values.rst", "univariate/generated/generated/arch.univariate.ConstantMean.volatility.rst", "univariate/generated/generated/arch.univariate.ConstantMean.x.rst", "univariate/generated/generated/arch.univariate.ConstantMean.y.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.backcast.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.backcast_transform.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.bounds.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.compute_variance.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.constraints.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.forecast.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.name.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.num_params.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.parameter_names.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.simulate.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.start.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.starting_values.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.stop.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.update.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.updateable.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.variance_bounds.rst", "univariate/generated/generated/arch.univariate.ConstantVariance.volatility_updater.rst", "univariate/generated/generated/arch.univariate.EGARCH.backcast.rst", "univariate/generated/generated/arch.univariate.EGARCH.backcast_transform.rst", "univariate/generated/generated/arch.univariate.EGARCH.bounds.rst", "univariate/generated/generated/arch.univariate.EGARCH.compute_variance.rst", "univariate/generated/generated/arch.univariate.EGARCH.constraints.rst", "univariate/generated/generated/arch.univariate.EGARCH.forecast.rst", "univariate/generated/generated/arch.univariate.EGARCH.name.rst", "univariate/generated/generated/arch.univariate.EGARCH.num_params.rst", "univariate/generated/generated/arch.univariate.EGARCH.parameter_names.rst", "univariate/generated/generated/arch.univariate.EGARCH.simulate.rst", "univariate/generated/generated/arch.univariate.EGARCH.start.rst", "univariate/generated/generated/arch.univariate.EGARCH.starting_values.rst", "univariate/generated/generated/arch.univariate.EGARCH.stop.rst", "univariate/generated/generated/arch.univariate.EGARCH.update.rst", "univariate/generated/generated/arch.univariate.EGARCH.updateable.rst", "univariate/generated/generated/arch.univariate.EGARCH.variance_bounds.rst", "univariate/generated/generated/arch.univariate.EGARCH.volatility_updater.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.backcast.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.backcast_transform.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.bounds.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.compute_variance.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.constraints.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.forecast.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.name.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.num_params.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.parameter_names.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.simulate.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.start.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.starting_values.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.stop.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.update.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.updateable.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.variance_bounds.rst", "univariate/generated/generated/arch.univariate.EWMAVariance.volatility_updater.rst", "univariate/generated/generated/arch.univariate.FIGARCH.backcast.rst", "univariate/generated/generated/arch.univariate.FIGARCH.backcast_transform.rst", "univariate/generated/generated/arch.univariate.FIGARCH.bounds.rst", "univariate/generated/generated/arch.univariate.FIGARCH.compute_variance.rst", "univariate/generated/generated/arch.univariate.FIGARCH.constraints.rst", "univariate/generated/generated/arch.univariate.FIGARCH.forecast.rst", "univariate/generated/generated/arch.univariate.FIGARCH.name.rst", "univariate/generated/generated/arch.univariate.FIGARCH.num_params.rst", "univariate/generated/generated/arch.univariate.FIGARCH.parameter_names.rst", "univariate/generated/generated/arch.univariate.FIGARCH.simulate.rst", "univariate/generated/generated/arch.univariate.FIGARCH.start.rst", "univariate/generated/generated/arch.univariate.FIGARCH.starting_values.rst", "univariate/generated/generated/arch.univariate.FIGARCH.stop.rst", "univariate/generated/generated/arch.univariate.FIGARCH.truncation.rst", "univariate/generated/generated/arch.univariate.FIGARCH.update.rst", "univariate/generated/generated/arch.univariate.FIGARCH.updateable.rst", "univariate/generated/generated/arch.univariate.FIGARCH.variance_bounds.rst", "univariate/generated/generated/arch.univariate.FIGARCH.volatility_updater.rst", "univariate/generated/generated/arch.univariate.FixedVariance.backcast.rst", "univariate/generated/generated/arch.univariate.FixedVariance.backcast_transform.rst", "univariate/generated/generated/arch.univariate.FixedVariance.bounds.rst", "univariate/generated/generated/arch.univariate.FixedVariance.compute_variance.rst", "univariate/generated/generated/arch.univariate.FixedVariance.constraints.rst", "univariate/generated/generated/arch.univariate.FixedVariance.forecast.rst", "univariate/generated/generated/arch.univariate.FixedVariance.name.rst", "univariate/generated/generated/arch.univariate.FixedVariance.num_params.rst", "univariate/generated/generated/arch.univariate.FixedVariance.parameter_names.rst", "univariate/generated/generated/arch.univariate.FixedVariance.simulate.rst", "univariate/generated/generated/arch.univariate.FixedVariance.start.rst", "univariate/generated/generated/arch.univariate.FixedVariance.starting_values.rst", "univariate/generated/generated/arch.univariate.FixedVariance.stop.rst", "univariate/generated/generated/arch.univariate.FixedVariance.update.rst", "univariate/generated/generated/arch.univariate.FixedVariance.updateable.rst", "univariate/generated/generated/arch.univariate.FixedVariance.variance_bounds.rst", "univariate/generated/generated/arch.univariate.FixedVariance.volatility_updater.rst", "univariate/generated/generated/arch.univariate.GARCH.backcast.rst", "univariate/generated/generated/arch.univariate.GARCH.backcast_transform.rst", "univariate/generated/generated/arch.univariate.GARCH.bounds.rst", "univariate/generated/generated/arch.univariate.GARCH.compute_variance.rst", "univariate/generated/generated/arch.univariate.GARCH.constraints.rst", "univariate/generated/generated/arch.univariate.GARCH.forecast.rst", "univariate/generated/generated/arch.univariate.GARCH.name.rst", "univariate/generated/generated/arch.univariate.GARCH.num_params.rst", "univariate/generated/generated/arch.univariate.GARCH.parameter_names.rst", "univariate/generated/generated/arch.univariate.GARCH.simulate.rst", "univariate/generated/generated/arch.univariate.GARCH.start.rst", "univariate/generated/generated/arch.univariate.GARCH.starting_values.rst", "univariate/generated/generated/arch.univariate.GARCH.stop.rst", "univariate/generated/generated/arch.univariate.GARCH.update.rst", "univariate/generated/generated/arch.univariate.GARCH.updateable.rst", "univariate/generated/generated/arch.univariate.GARCH.variance_bounds.rst", "univariate/generated/generated/arch.univariate.GARCH.volatility_updater.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.bounds.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.cdf.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.constraints.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.generator.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.loglikelihood.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.moment.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.name.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.parameter_names.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.partial_moment.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.ppf.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.random_state.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.simulate.rst", "univariate/generated/generated/arch.univariate.GeneralizedError.starting_values.rst", "univariate/generated/generated/arch.univariate.HARCH.backcast.rst", "univariate/generated/generated/arch.univariate.HARCH.backcast_transform.rst", "univariate/generated/generated/arch.univariate.HARCH.bounds.rst", "univariate/generated/generated/arch.univariate.HARCH.compute_variance.rst", "univariate/generated/generated/arch.univariate.HARCH.constraints.rst", "univariate/generated/generated/arch.univariate.HARCH.forecast.rst", "univariate/generated/generated/arch.univariate.HARCH.name.rst", "univariate/generated/generated/arch.univariate.HARCH.num_params.rst", "univariate/generated/generated/arch.univariate.HARCH.parameter_names.rst", "univariate/generated/generated/arch.univariate.HARCH.simulate.rst", "univariate/generated/generated/arch.univariate.HARCH.start.rst", "univariate/generated/generated/arch.univariate.HARCH.starting_values.rst", "univariate/generated/generated/arch.univariate.HARCH.stop.rst", "univariate/generated/generated/arch.univariate.HARCH.update.rst", "univariate/generated/generated/arch.univariate.HARCH.updateable.rst", "univariate/generated/generated/arch.univariate.HARCH.variance_bounds.rst", "univariate/generated/generated/arch.univariate.HARCH.volatility_updater.rst", "univariate/generated/generated/arch.univariate.HARX.bounds.rst", "univariate/generated/generated/arch.univariate.HARX.compute_param_cov.rst", "univariate/generated/generated/arch.univariate.HARX.constraints.rst", "univariate/generated/generated/arch.univariate.HARX.distribution.rst", "univariate/generated/generated/arch.univariate.HARX.fit.rst", "univariate/generated/generated/arch.univariate.HARX.fix.rst", "univariate/generated/generated/arch.univariate.HARX.forecast.rst", "univariate/generated/generated/arch.univariate.HARX.name.rst", "univariate/generated/generated/arch.univariate.HARX.num_params.rst", "univariate/generated/generated/arch.univariate.HARX.parameter_names.rst", "univariate/generated/generated/arch.univariate.HARX.resids.rst", "univariate/generated/generated/arch.univariate.HARX.simulate.rst", "univariate/generated/generated/arch.univariate.HARX.starting_values.rst", "univariate/generated/generated/arch.univariate.HARX.volatility.rst", "univariate/generated/generated/arch.univariate.HARX.x.rst", "univariate/generated/generated/arch.univariate.HARX.y.rst", "univariate/generated/generated/arch.univariate.LS.bounds.rst", "univariate/generated/generated/arch.univariate.LS.compute_param_cov.rst", "univariate/generated/generated/arch.univariate.LS.constraints.rst", "univariate/generated/generated/arch.univariate.LS.distribution.rst", "univariate/generated/generated/arch.univariate.LS.fit.rst", "univariate/generated/generated/arch.univariate.LS.fix.rst", "univariate/generated/generated/arch.univariate.LS.forecast.rst", "univariate/generated/generated/arch.univariate.LS.name.rst", "univariate/generated/generated/arch.univariate.LS.num_params.rst", "univariate/generated/generated/arch.univariate.LS.parameter_names.rst", "univariate/generated/generated/arch.univariate.LS.resids.rst", "univariate/generated/generated/arch.univariate.LS.simulate.rst", "univariate/generated/generated/arch.univariate.LS.starting_values.rst", "univariate/generated/generated/arch.univariate.LS.volatility.rst", "univariate/generated/generated/arch.univariate.LS.x.rst", "univariate/generated/generated/arch.univariate.LS.y.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.backcast.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.backcast_transform.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.bounds.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.compute_variance.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.constraints.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.forecast.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.name.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.num_params.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.parameter_names.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.simulate.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.start.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.starting_values.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.stop.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.update.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.updateable.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.variance_bounds.rst", "univariate/generated/generated/arch.univariate.MIDASHyperbolic.volatility_updater.rst", "univariate/generated/generated/arch.univariate.Normal.bounds.rst", "univariate/generated/generated/arch.univariate.Normal.cdf.rst", "univariate/generated/generated/arch.univariate.Normal.constraints.rst", "univariate/generated/generated/arch.univariate.Normal.generator.rst", "univariate/generated/generated/arch.univariate.Normal.loglikelihood.rst", "univariate/generated/generated/arch.univariate.Normal.moment.rst", "univariate/generated/generated/arch.univariate.Normal.name.rst", "univariate/generated/generated/arch.univariate.Normal.parameter_names.rst", "univariate/generated/generated/arch.univariate.Normal.partial_moment.rst", "univariate/generated/generated/arch.univariate.Normal.ppf.rst", "univariate/generated/generated/arch.univariate.Normal.random_state.rst", "univariate/generated/generated/arch.univariate.Normal.simulate.rst", "univariate/generated/generated/arch.univariate.Normal.starting_values.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.backcast.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.backcast_transform.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.bounds.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.compute_variance.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.constraints.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.forecast.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.name.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.num_params.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.parameter_names.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.simulate.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.start.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.starting_values.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.stop.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.update.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.updateable.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.variance_bounds.rst", "univariate/generated/generated/arch.univariate.RiskMetrics2006.volatility_updater.rst", "univariate/generated/generated/arch.univariate.SkewStudent.bounds.rst", "univariate/generated/generated/arch.univariate.SkewStudent.cdf.rst", "univariate/generated/generated/arch.univariate.SkewStudent.constraints.rst", "univariate/generated/generated/arch.univariate.SkewStudent.generator.rst", "univariate/generated/generated/arch.univariate.SkewStudent.loglikelihood.rst", "univariate/generated/generated/arch.univariate.SkewStudent.moment.rst", "univariate/generated/generated/arch.univariate.SkewStudent.name.rst", "univariate/generated/generated/arch.univariate.SkewStudent.parameter_names.rst", "univariate/generated/generated/arch.univariate.SkewStudent.partial_moment.rst", "univariate/generated/generated/arch.univariate.SkewStudent.ppf.rst", "univariate/generated/generated/arch.univariate.SkewStudent.random_state.rst", "univariate/generated/generated/arch.univariate.SkewStudent.simulate.rst", "univariate/generated/generated/arch.univariate.SkewStudent.starting_values.rst", "univariate/generated/generated/arch.univariate.StudentsT.bounds.rst", "univariate/generated/generated/arch.univariate.StudentsT.cdf.rst", "univariate/generated/generated/arch.univariate.StudentsT.constraints.rst", "univariate/generated/generated/arch.univariate.StudentsT.generator.rst", "univariate/generated/generated/arch.univariate.StudentsT.loglikelihood.rst", "univariate/generated/generated/arch.univariate.StudentsT.moment.rst", "univariate/generated/generated/arch.univariate.StudentsT.name.rst", "univariate/generated/generated/arch.univariate.StudentsT.parameter_names.rst", "univariate/generated/generated/arch.univariate.StudentsT.partial_moment.rst", "univariate/generated/generated/arch.univariate.StudentsT.ppf.rst", "univariate/generated/generated/arch.univariate.StudentsT.random_state.rst", "univariate/generated/generated/arch.univariate.StudentsT.simulate.rst", "univariate/generated/generated/arch.univariate.StudentsT.starting_values.rst", "univariate/generated/generated/arch.univariate.ZeroMean.bounds.rst", "univariate/generated/generated/arch.univariate.ZeroMean.compute_param_cov.rst", "univariate/generated/generated/arch.univariate.ZeroMean.constraints.rst", "univariate/generated/generated/arch.univariate.ZeroMean.distribution.rst", "univariate/generated/generated/arch.univariate.ZeroMean.fit.rst", "univariate/generated/generated/arch.univariate.ZeroMean.fix.rst", "univariate/generated/generated/arch.univariate.ZeroMean.forecast.rst", "univariate/generated/generated/arch.univariate.ZeroMean.name.rst", "univariate/generated/generated/arch.univariate.ZeroMean.num_params.rst", "univariate/generated/generated/arch.univariate.ZeroMean.parameter_names.rst", "univariate/generated/generated/arch.univariate.ZeroMean.resids.rst", "univariate/generated/generated/arch.univariate.ZeroMean.simulate.rst", "univariate/generated/generated/arch.univariate.ZeroMean.starting_values.rst", "univariate/generated/generated/arch.univariate.ZeroMean.volatility.rst", "univariate/generated/generated/arch.univariate.ZeroMean.x.rst", "univariate/generated/generated/arch.univariate.ZeroMean.y.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.bounds.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.compute_param_cov.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.constraints.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.distribution.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.fit.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.fix.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.forecast.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.name.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.num_params.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.parameter_names.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.resids.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.simulate.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.starting_values.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.volatility.rst", "univariate/generated/generated/arch.univariate.base.ARCHModel.y.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.aic.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.arch_lm_test.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.bic.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.conditional_volatility.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.forecast.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.hedgehog_plot.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.loglikelihood.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.model.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.nobs.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.num_params.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.params.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.plot.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.resid.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.std_resid.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelFixedResult.summary.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecast.mean.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecast.residual_variance.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecast.simulations.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecast.variance.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.index.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.residual_variances.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.residuals.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.values.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelForecastSimulation.variances.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.aic.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.arch_lm_test.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.bic.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.conditional_volatility.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.conf_int.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.convergence_flag.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.fit_start.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.fit_stop.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.forecast.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.hedgehog_plot.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.loglikelihood.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.model.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.nobs.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.num_params.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.optimization_result.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.param_cov.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.params.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.plot.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.pvalues.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.resid.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.rsquared.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.rsquared_adj.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.scale.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.std_err.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.std_resid.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.summary.rst", "univariate/generated/generated/arch.univariate.base.ARCHModelResult.tvalues.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.bounds.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.cdf.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.constraints.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.generator.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.loglikelihood.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.moment.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.name.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.parameter_names.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.partial_moment.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.ppf.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.random_state.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.simulate.rst", "univariate/generated/generated/arch.univariate.distribution.Distribution.starting_values.rst", "univariate/generated/generated/arch.univariate.recursions_python.VolatilityUpdater.initialize_update.rst", "univariate/generated/generated/arch.univariate.recursions_python.VolatilityUpdater.update.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.backcast.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.backcast_transform.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.bounds.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.compute_variance.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.constraints.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.forecast.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.name.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.num_params.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.parameter_names.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.simulate.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.start.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.starting_values.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.stop.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.update.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.updateable.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.variance_bounds.rst", "univariate/generated/generated/arch.univariate.volatility.VolatilityProcess.volatility_updater.rst", "univariate/introduction.rst", "univariate/mean.rst", "univariate/results.rst", "univariate/univariate.rst", "univariate/univariate_forecasting_with_exogenous_variables.ipynb", "univariate/univariate_using_fixed_variance.ipynb", "univariate/univariate_volatility_forecasting.ipynb", "univariate/univariate_volatility_modeling.ipynb", "univariate/univariate_volatility_scenarios.ipynb", "univariate/utility.rst", "univariate/volatility.rst"], "titles": ["API Reference", "References", "Bootstrapping", "Bootstrap Examples", "Confidence Intervals", "arch.bootstrap.CircularBlockBootstrap", "arch.bootstrap.IIDBootstrap", "arch.bootstrap.IndependentSamplesBootstrap", "arch.bootstrap.MovingBlockBootstrap", "arch.bootstrap.StationaryBootstrap", "arch.bootstrap.optimal_block_length", "arch.bootstrap.CircularBlockBootstrap.apply", "arch.bootstrap.CircularBlockBootstrap.bootstrap", "arch.bootstrap.CircularBlockBootstrap.clone", "arch.bootstrap.CircularBlockBootstrap.conf_int", "arch.bootstrap.CircularBlockBootstrap.cov", "arch.bootstrap.CircularBlockBootstrap.generator", "arch.bootstrap.CircularBlockBootstrap.get_state", "arch.bootstrap.CircularBlockBootstrap.index", "arch.bootstrap.CircularBlockBootstrap.random_state", "arch.bootstrap.CircularBlockBootstrap.reset", "arch.bootstrap.CircularBlockBootstrap.seed", "arch.bootstrap.CircularBlockBootstrap.set_state", "arch.bootstrap.CircularBlockBootstrap.state", "arch.bootstrap.CircularBlockBootstrap.update_indices", "arch.bootstrap.CircularBlockBootstrap.var", "arch.bootstrap.IIDBootstrap.apply", "arch.bootstrap.IIDBootstrap.bootstrap", "arch.bootstrap.IIDBootstrap.clone", "arch.bootstrap.IIDBootstrap.conf_int", "arch.bootstrap.IIDBootstrap.cov", "arch.bootstrap.IIDBootstrap.generator", "arch.bootstrap.IIDBootstrap.get_state", "arch.bootstrap.IIDBootstrap.index", "arch.bootstrap.IIDBootstrap.random_state", "arch.bootstrap.IIDBootstrap.reset", "arch.bootstrap.IIDBootstrap.seed", "arch.bootstrap.IIDBootstrap.set_state", "arch.bootstrap.IIDBootstrap.state", "arch.bootstrap.IIDBootstrap.update_indices", "arch.bootstrap.IIDBootstrap.var", "arch.bootstrap.IndependentSamplesBootstrap.apply", "arch.bootstrap.IndependentSamplesBootstrap.bootstrap", "arch.bootstrap.IndependentSamplesBootstrap.clone", "arch.bootstrap.IndependentSamplesBootstrap.conf_int", "arch.bootstrap.IndependentSamplesBootstrap.cov", "arch.bootstrap.IndependentSamplesBootstrap.generator", "arch.bootstrap.IndependentSamplesBootstrap.get_state", "arch.bootstrap.IndependentSamplesBootstrap.index", "arch.bootstrap.IndependentSamplesBootstrap.random_state", "arch.bootstrap.IndependentSamplesBootstrap.reset", "arch.bootstrap.IndependentSamplesBootstrap.seed", "arch.bootstrap.IndependentSamplesBootstrap.set_state", "arch.bootstrap.IndependentSamplesBootstrap.state", "arch.bootstrap.IndependentSamplesBootstrap.update_indices", "arch.bootstrap.IndependentSamplesBootstrap.var", "arch.bootstrap.MovingBlockBootstrap.apply", "arch.bootstrap.MovingBlockBootstrap.bootstrap", "arch.bootstrap.MovingBlockBootstrap.clone", "arch.bootstrap.MovingBlockBootstrap.conf_int", "arch.bootstrap.MovingBlockBootstrap.cov", "arch.bootstrap.MovingBlockBootstrap.generator", "arch.bootstrap.MovingBlockBootstrap.get_state", "arch.bootstrap.MovingBlockBootstrap.index", "arch.bootstrap.MovingBlockBootstrap.random_state", "arch.bootstrap.MovingBlockBootstrap.reset", "arch.bootstrap.MovingBlockBootstrap.seed", "arch.bootstrap.MovingBlockBootstrap.set_state", "arch.bootstrap.MovingBlockBootstrap.state", "arch.bootstrap.MovingBlockBootstrap.update_indices", "arch.bootstrap.MovingBlockBootstrap.var", "arch.bootstrap.StationaryBootstrap.apply", "arch.bootstrap.StationaryBootstrap.bootstrap", "arch.bootstrap.StationaryBootstrap.clone", "arch.bootstrap.StationaryBootstrap.conf_int", "arch.bootstrap.StationaryBootstrap.cov", "arch.bootstrap.StationaryBootstrap.generator", "arch.bootstrap.StationaryBootstrap.get_state", "arch.bootstrap.StationaryBootstrap.index", "arch.bootstrap.StationaryBootstrap.random_state", "arch.bootstrap.StationaryBootstrap.reset", "arch.bootstrap.StationaryBootstrap.seed", "arch.bootstrap.StationaryBootstrap.set_state", "arch.bootstrap.StationaryBootstrap.state", "arch.bootstrap.StationaryBootstrap.update_indices", "arch.bootstrap.StationaryBootstrap.var", "Independent, Identical Distributed Data (i.i.d.)", "Low-level Interfaces", "Covariance Estimation", "Semiparametric Bootstraps", "Time-series Bootstraps", "Change Logs", "Long-run Covariance Estimation", "arch.covariance.kernel.Andrews", "arch.covariance.kernel.Bartlett", "arch.covariance.kernel.CovarianceEstimate", "arch.covariance.kernel.Gallant", "arch.covariance.kernel.NeweyWest", "arch.covariance.kernel.Parzen", "arch.covariance.kernel.ParzenCauchy", "arch.covariance.kernel.ParzenGeometric", "arch.covariance.kernel.ParzenRiesz", "arch.covariance.kernel.QuadraticSpectral", "arch.covariance.kernel.TukeyHamming", "arch.covariance.kernel.TukeyHanning", "arch.covariance.kernel.TukeyParzen", "arch.covariance.kernel.Andrews.bandwidth", "arch.covariance.kernel.Andrews.bandwidth_scale", "arch.covariance.kernel.Andrews.centered", "arch.covariance.kernel.Andrews.cov", "arch.covariance.kernel.Andrews.force_int", "arch.covariance.kernel.Andrews.kernel_const", "arch.covariance.kernel.Andrews.kernel_weights", "arch.covariance.kernel.Andrews.name", "arch.covariance.kernel.Andrews.opt_bandwidth", "arch.covariance.kernel.Andrews.rate", "arch.covariance.kernel.Bartlett.bandwidth", "arch.covariance.kernel.Bartlett.bandwidth_scale", "arch.covariance.kernel.Bartlett.centered", "arch.covariance.kernel.Bartlett.cov", "arch.covariance.kernel.Bartlett.force_int", "arch.covariance.kernel.Bartlett.kernel_const", "arch.covariance.kernel.Bartlett.kernel_weights", "arch.covariance.kernel.Bartlett.name", "arch.covariance.kernel.Bartlett.opt_bandwidth", "arch.covariance.kernel.Bartlett.rate", "arch.covariance.kernel.CovarianceEstimate.long_run", "arch.covariance.kernel.CovarianceEstimate.one_sided", "arch.covariance.kernel.CovarianceEstimate.one_sided_strict", "arch.covariance.kernel.CovarianceEstimate.short_run", "arch.covariance.kernel.Gallant.bandwidth", "arch.covariance.kernel.Gallant.bandwidth_scale", "arch.covariance.kernel.Gallant.centered", "arch.covariance.kernel.Gallant.cov", "arch.covariance.kernel.Gallant.force_int", "arch.covariance.kernel.Gallant.kernel_const", "arch.covariance.kernel.Gallant.kernel_weights", "arch.covariance.kernel.Gallant.name", "arch.covariance.kernel.Gallant.opt_bandwidth", "arch.covariance.kernel.Gallant.rate", "arch.covariance.kernel.NeweyWest.bandwidth", "arch.covariance.kernel.NeweyWest.bandwidth_scale", "arch.covariance.kernel.NeweyWest.centered", "arch.covariance.kernel.NeweyWest.cov", "arch.covariance.kernel.NeweyWest.force_int", "arch.covariance.kernel.NeweyWest.kernel_const", "arch.covariance.kernel.NeweyWest.kernel_weights", "arch.covariance.kernel.NeweyWest.name", "arch.covariance.kernel.NeweyWest.opt_bandwidth", "arch.covariance.kernel.NeweyWest.rate", "arch.covariance.kernel.Parzen.bandwidth", "arch.covariance.kernel.Parzen.bandwidth_scale", "arch.covariance.kernel.Parzen.centered", "arch.covariance.kernel.Parzen.cov", "arch.covariance.kernel.Parzen.force_int", "arch.covariance.kernel.Parzen.kernel_const", "arch.covariance.kernel.Parzen.kernel_weights", "arch.covariance.kernel.Parzen.name", "arch.covariance.kernel.Parzen.opt_bandwidth", "arch.covariance.kernel.Parzen.rate", "arch.covariance.kernel.ParzenCauchy.bandwidth", "arch.covariance.kernel.ParzenCauchy.bandwidth_scale", "arch.covariance.kernel.ParzenCauchy.centered", "arch.covariance.kernel.ParzenCauchy.cov", "arch.covariance.kernel.ParzenCauchy.force_int", "arch.covariance.kernel.ParzenCauchy.kernel_const", "arch.covariance.kernel.ParzenCauchy.kernel_weights", "arch.covariance.kernel.ParzenCauchy.name", "arch.covariance.kernel.ParzenCauchy.opt_bandwidth", "arch.covariance.kernel.ParzenCauchy.rate", "arch.covariance.kernel.ParzenGeometric.bandwidth", "arch.covariance.kernel.ParzenGeometric.bandwidth_scale", "arch.covariance.kernel.ParzenGeometric.centered", "arch.covariance.kernel.ParzenGeometric.cov", "arch.covariance.kernel.ParzenGeometric.force_int", "arch.covariance.kernel.ParzenGeometric.kernel_const", "arch.covariance.kernel.ParzenGeometric.kernel_weights", "arch.covariance.kernel.ParzenGeometric.name", "arch.covariance.kernel.ParzenGeometric.opt_bandwidth", "arch.covariance.kernel.ParzenGeometric.rate", "arch.covariance.kernel.ParzenRiesz.bandwidth", "arch.covariance.kernel.ParzenRiesz.bandwidth_scale", "arch.covariance.kernel.ParzenRiesz.centered", "arch.covariance.kernel.ParzenRiesz.cov", "arch.covariance.kernel.ParzenRiesz.force_int", "arch.covariance.kernel.ParzenRiesz.kernel_const", "arch.covariance.kernel.ParzenRiesz.kernel_weights", "arch.covariance.kernel.ParzenRiesz.name", "arch.covariance.kernel.ParzenRiesz.opt_bandwidth", "arch.covariance.kernel.ParzenRiesz.rate", "arch.covariance.kernel.QuadraticSpectral.bandwidth", "arch.covariance.kernel.QuadraticSpectral.bandwidth_scale", "arch.covariance.kernel.QuadraticSpectral.centered", "arch.covariance.kernel.QuadraticSpectral.cov", "arch.covariance.kernel.QuadraticSpectral.force_int", "arch.covariance.kernel.QuadraticSpectral.kernel_const", "arch.covariance.kernel.QuadraticSpectral.kernel_weights", "arch.covariance.kernel.QuadraticSpectral.name", "arch.covariance.kernel.QuadraticSpectral.opt_bandwidth", "arch.covariance.kernel.QuadraticSpectral.rate", "arch.covariance.kernel.TukeyHamming.bandwidth", "arch.covariance.kernel.TukeyHamming.bandwidth_scale", "arch.covariance.kernel.TukeyHamming.centered", "arch.covariance.kernel.TukeyHamming.cov", "arch.covariance.kernel.TukeyHamming.force_int", "arch.covariance.kernel.TukeyHamming.kernel_const", "arch.covariance.kernel.TukeyHamming.kernel_weights", "arch.covariance.kernel.TukeyHamming.name", "arch.covariance.kernel.TukeyHamming.opt_bandwidth", "arch.covariance.kernel.TukeyHamming.rate", "arch.covariance.kernel.TukeyHanning.bandwidth", "arch.covariance.kernel.TukeyHanning.bandwidth_scale", "arch.covariance.kernel.TukeyHanning.centered", "arch.covariance.kernel.TukeyHanning.cov", "arch.covariance.kernel.TukeyHanning.force_int", "arch.covariance.kernel.TukeyHanning.kernel_const", "arch.covariance.kernel.TukeyHanning.kernel_weights", "arch.covariance.kernel.TukeyHanning.name", "arch.covariance.kernel.TukeyHanning.opt_bandwidth", "arch.covariance.kernel.TukeyHanning.rate", "arch.covariance.kernel.TukeyParzen.bandwidth", "arch.covariance.kernel.TukeyParzen.bandwidth_scale", "arch.covariance.kernel.TukeyParzen.centered", "arch.covariance.kernel.TukeyParzen.cov", "arch.covariance.kernel.TukeyParzen.force_int", "arch.covariance.kernel.TukeyParzen.kernel_const", "arch.covariance.kernel.TukeyParzen.kernel_weights", "arch.covariance.kernel.TukeyParzen.name", "arch.covariance.kernel.TukeyParzen.opt_bandwidth", "arch.covariance.kernel.TukeyParzen.rate", "Introduction", "References", "arch.bootstrap.MCS", "arch.bootstrap.SPA", "arch.bootstrap.StepM", "arch.bootstrap.MCS.compute", "arch.bootstrap.MCS.excluded", "arch.bootstrap.MCS.included", "arch.bootstrap.MCS.pvalues", "arch.bootstrap.MCS.reset", "arch.bootstrap.MCS.seed", "arch.bootstrap.SPA.better_models", "arch.bootstrap.SPA.compute", "arch.bootstrap.SPA.critical_values", "arch.bootstrap.SPA.pvalues", "arch.bootstrap.SPA.reset", "arch.bootstrap.SPA.seed", "arch.bootstrap.SPA.subset", "arch.bootstrap.StepM.compute", "arch.bootstrap.StepM.reset", "arch.bootstrap.StepM.seed", "arch.bootstrap.StepM.superior_models", "Module Reference", "Multiple Comparisons", "Multiple Comparison Procedures", "Cointegration Tests", "arch.unitroot.ADF", "arch.unitroot.DFGLS", "arch.unitroot.KPSS", "arch.unitroot.PhillipsPerron", "arch.unitroot.VarianceRatio", "arch.unitroot.ZivotAndrews", "arch.unitroot.auto_bandwidth", "arch.unitroot.cointegration.CanonicalCointegratingReg", "arch.unitroot.cointegration.CointegrationAnalysisResults", "arch.unitroot.cointegration.DynamicOLS", "arch.unitroot.cointegration.DynamicOLSResults", "arch.unitroot.cointegration.EngleGrangerTestResults", "arch.unitroot.cointegration.FullyModifiedOLS", "arch.unitroot.cointegration.PhillipsOuliarisTestResults", "arch.unitroot.cointegration.engle_granger", "arch.unitroot.cointegration.phillips_ouliaris", "arch.unitroot.ADF.alternative_hypothesis", "arch.unitroot.ADF.critical_values", "arch.unitroot.ADF.lags", "arch.unitroot.ADF.max_lags", "arch.unitroot.ADF.nobs", "arch.unitroot.ADF.null_hypothesis", "arch.unitroot.ADF.pvalue", "arch.unitroot.ADF.regression", "arch.unitroot.ADF.stat", "arch.unitroot.ADF.summary", "arch.unitroot.ADF.trend", "arch.unitroot.ADF.valid_trends", "arch.unitroot.ADF.y", "arch.unitroot.DFGLS.alternative_hypothesis", "arch.unitroot.DFGLS.critical_values", "arch.unitroot.DFGLS.lags", "arch.unitroot.DFGLS.max_lags", "arch.unitroot.DFGLS.nobs", "arch.unitroot.DFGLS.null_hypothesis", "arch.unitroot.DFGLS.pvalue", "arch.unitroot.DFGLS.regression", "arch.unitroot.DFGLS.stat", "arch.unitroot.DFGLS.summary", "arch.unitroot.DFGLS.trend", "arch.unitroot.DFGLS.valid_trends", "arch.unitroot.DFGLS.y", "arch.unitroot.KPSS.alternative_hypothesis", "arch.unitroot.KPSS.critical_values", "arch.unitroot.KPSS.lags", "arch.unitroot.KPSS.nobs", "arch.unitroot.KPSS.null_hypothesis", "arch.unitroot.KPSS.pvalue", "arch.unitroot.KPSS.stat", "arch.unitroot.KPSS.summary", "arch.unitroot.KPSS.trend", "arch.unitroot.KPSS.valid_trends", "arch.unitroot.KPSS.y", "arch.unitroot.PhillipsPerron.alternative_hypothesis", "arch.unitroot.PhillipsPerron.critical_values", "arch.unitroot.PhillipsPerron.lags", "arch.unitroot.PhillipsPerron.nobs", "arch.unitroot.PhillipsPerron.null_hypothesis", "arch.unitroot.PhillipsPerron.pvalue", "arch.unitroot.PhillipsPerron.regression", "arch.unitroot.PhillipsPerron.stat", "arch.unitroot.PhillipsPerron.summary", "arch.unitroot.PhillipsPerron.test_type", "arch.unitroot.PhillipsPerron.trend", "arch.unitroot.PhillipsPerron.valid_trends", "arch.unitroot.PhillipsPerron.y", "arch.unitroot.VarianceRatio.alternative_hypothesis", "arch.unitroot.VarianceRatio.critical_values", "arch.unitroot.VarianceRatio.debiased", "arch.unitroot.VarianceRatio.lags", "arch.unitroot.VarianceRatio.nobs", "arch.unitroot.VarianceRatio.null_hypothesis", "arch.unitroot.VarianceRatio.overlap", "arch.unitroot.VarianceRatio.pvalue", "arch.unitroot.VarianceRatio.robust", "arch.unitroot.VarianceRatio.stat", "arch.unitroot.VarianceRatio.summary", "arch.unitroot.VarianceRatio.trend", "arch.unitroot.VarianceRatio.valid_trends", "arch.unitroot.VarianceRatio.vr", "arch.unitroot.VarianceRatio.y", "arch.unitroot.ZivotAndrews.alternative_hypothesis", "arch.unitroot.ZivotAndrews.critical_values", "arch.unitroot.ZivotAndrews.lags", "arch.unitroot.ZivotAndrews.nobs", "arch.unitroot.ZivotAndrews.null_hypothesis", "arch.unitroot.ZivotAndrews.pvalue", "arch.unitroot.ZivotAndrews.stat", "arch.unitroot.ZivotAndrews.summary", "arch.unitroot.ZivotAndrews.trend", "arch.unitroot.ZivotAndrews.valid_trends", "arch.unitroot.ZivotAndrews.y", "arch.unitroot.cointegration.CanonicalCointegratingReg.fit", "arch.unitroot.cointegration.CointegrationAnalysisResults.bandwidth", "arch.unitroot.cointegration.CointegrationAnalysisResults.cov", "arch.unitroot.cointegration.CointegrationAnalysisResults.kernel", "arch.unitroot.cointegration.CointegrationAnalysisResults.long_run_variance", "arch.unitroot.cointegration.CointegrationAnalysisResults.params", "arch.unitroot.cointegration.CointegrationAnalysisResults.pvalues", "arch.unitroot.cointegration.CointegrationAnalysisResults.resid", "arch.unitroot.cointegration.CointegrationAnalysisResults.residual_variance", "arch.unitroot.cointegration.CointegrationAnalysisResults.rsquared", "arch.unitroot.cointegration.CointegrationAnalysisResults.rsquared_adj", "arch.unitroot.cointegration.CointegrationAnalysisResults.std_errors", "arch.unitroot.cointegration.CointegrationAnalysisResults.summary", "arch.unitroot.cointegration.CointegrationAnalysisResults.tvalues", "arch.unitroot.cointegration.DynamicOLS.fit", "arch.unitroot.cointegration.DynamicOLSResults.bandwidth", "arch.unitroot.cointegration.DynamicOLSResults.cov", "arch.unitroot.cointegration.DynamicOLSResults.cov_type", "arch.unitroot.cointegration.DynamicOLSResults.full_cov", "arch.unitroot.cointegration.DynamicOLSResults.full_params", "arch.unitroot.cointegration.DynamicOLSResults.kernel", "arch.unitroot.cointegration.DynamicOLSResults.lags", "arch.unitroot.cointegration.DynamicOLSResults.leads", "arch.unitroot.cointegration.DynamicOLSResults.long_run_variance", "arch.unitroot.cointegration.DynamicOLSResults.params", "arch.unitroot.cointegration.DynamicOLSResults.pvalues", "arch.unitroot.cointegration.DynamicOLSResults.resid", "arch.unitroot.cointegration.DynamicOLSResults.residual_variance", "arch.unitroot.cointegration.DynamicOLSResults.rsquared", "arch.unitroot.cointegration.DynamicOLSResults.rsquared_adj", "arch.unitroot.cointegration.DynamicOLSResults.std_errors", "arch.unitroot.cointegration.DynamicOLSResults.summary", "arch.unitroot.cointegration.DynamicOLSResults.tvalues", "arch.unitroot.cointegration.EngleGrangerTestResults.alternative_hypothesis", "arch.unitroot.cointegration.EngleGrangerTestResults.cointegrating_vector", "arch.unitroot.cointegration.EngleGrangerTestResults.critical_values", "arch.unitroot.cointegration.EngleGrangerTestResults.distribution_order", "arch.unitroot.cointegration.EngleGrangerTestResults.lags", "arch.unitroot.cointegration.EngleGrangerTestResults.max_lags", "arch.unitroot.cointegration.EngleGrangerTestResults.name", "arch.unitroot.cointegration.EngleGrangerTestResults.null_hypothesis", "arch.unitroot.cointegration.EngleGrangerTestResults.plot", "arch.unitroot.cointegration.EngleGrangerTestResults.pvalue", "arch.unitroot.cointegration.EngleGrangerTestResults.resid", "arch.unitroot.cointegration.EngleGrangerTestResults.rho", "arch.unitroot.cointegration.EngleGrangerTestResults.stat", "arch.unitroot.cointegration.EngleGrangerTestResults.summary", "arch.unitroot.cointegration.EngleGrangerTestResults.trend", "arch.unitroot.cointegration.FullyModifiedOLS.fit", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.alternative_hypothesis", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.bandwidth", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.cointegrating_vector", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.critical_values", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.distribution_order", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.kernel", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.name", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.null_hypothesis", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.plot", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.pvalue", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.resid", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.stat", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.summary", "arch.unitroot.cointegration.PhillipsOuliarisTestResults.trend", "Introduction", "The Unit Root Tests", "Unit Root Testing", "Cointegration Testing", "Unit Root Testing", "Theoretical Background", "Distributions", "Forecasting", "arch.univariate.APARCH", "arch.univariate.ARCH", "arch.univariate.ARCHInMean", "arch.univariate.ARX", "arch.univariate.ConstantMean", "arch.univariate.ConstantVariance", "arch.univariate.EGARCH", "arch.univariate.EWMAVariance", "arch.univariate.FIGARCH", "arch.univariate.FixedVariance", "arch.univariate.GARCH", "arch.univariate.GeneralizedError", "arch.univariate.HARCH", "arch.univariate.HARX", "arch.univariate.LS", "arch.univariate.MIDASHyperbolic", "arch.univariate.Normal", "arch.univariate.RiskMetrics2006", "arch.univariate.SkewStudent", "arch.univariate.StudentsT", "arch.univariate.ZeroMean", "arch.univariate.base.ARCHModel", "arch.univariate.base.ARCHModelFixedResult", "arch.univariate.base.ARCHModelForecast", "arch.univariate.base.ARCHModelForecastSimulation", "arch.univariate.base.ARCHModelResult", "arch.univariate.distribution.Distribution", "arch.univariate.recursions_python.VolatilityUpdater", "arch.univariate.volatility.VolatilityProcess", "arch.univariate.APARCH.backcast", "arch.univariate.APARCH.backcast_transform", "arch.univariate.APARCH.bounds", "arch.univariate.APARCH.common_asym", "arch.univariate.APARCH.compute_variance", "arch.univariate.APARCH.constraints", "arch.univariate.APARCH.delta", "arch.univariate.APARCH.forecast", "arch.univariate.APARCH.name", "arch.univariate.APARCH.num_params", "arch.univariate.APARCH.parameter_names", "arch.univariate.APARCH.simulate", "arch.univariate.APARCH.start", "arch.univariate.APARCH.starting_values", "arch.univariate.APARCH.stop", "arch.univariate.APARCH.update", "arch.univariate.APARCH.updateable", "arch.univariate.APARCH.variance_bounds", "arch.univariate.APARCH.volatility_updater", "arch.univariate.ARCH.backcast", "arch.univariate.ARCH.backcast_transform", "arch.univariate.ARCH.bounds", "arch.univariate.ARCH.compute_variance", "arch.univariate.ARCH.constraints", "arch.univariate.ARCH.forecast", "arch.univariate.ARCH.name", "arch.univariate.ARCH.num_params", "arch.univariate.ARCH.parameter_names", "arch.univariate.ARCH.simulate", "arch.univariate.ARCH.start", "arch.univariate.ARCH.starting_values", "arch.univariate.ARCH.stop", "arch.univariate.ARCH.update", "arch.univariate.ARCH.updateable", "arch.univariate.ARCH.variance_bounds", "arch.univariate.ARCH.volatility_updater", "arch.univariate.ARCHInMean.bounds", "arch.univariate.ARCHInMean.compute_param_cov", "arch.univariate.ARCHInMean.constraints", "arch.univariate.ARCHInMean.distribution", "arch.univariate.ARCHInMean.fit", "arch.univariate.ARCHInMean.fix", "arch.univariate.ARCHInMean.forecast", "arch.univariate.ARCHInMean.form", "arch.univariate.ARCHInMean.name", "arch.univariate.ARCHInMean.num_params", "arch.univariate.ARCHInMean.parameter_names", "arch.univariate.ARCHInMean.resids", "arch.univariate.ARCHInMean.simulate", "arch.univariate.ARCHInMean.starting_values", "arch.univariate.ARCHInMean.volatility", "arch.univariate.ARCHInMean.x", "arch.univariate.ARCHInMean.y", "arch.univariate.ARX.bounds", "arch.univariate.ARX.compute_param_cov", "arch.univariate.ARX.constraints", "arch.univariate.ARX.distribution", "arch.univariate.ARX.fit", "arch.univariate.ARX.fix", "arch.univariate.ARX.forecast", "arch.univariate.ARX.name", "arch.univariate.ARX.num_params", "arch.univariate.ARX.parameter_names", "arch.univariate.ARX.resids", "arch.univariate.ARX.simulate", "arch.univariate.ARX.starting_values", "arch.univariate.ARX.volatility", "arch.univariate.ARX.x", "arch.univariate.ARX.y", "arch.univariate.ConstantMean.bounds", "arch.univariate.ConstantMean.compute_param_cov", "arch.univariate.ConstantMean.constraints", "arch.univariate.ConstantMean.distribution", "arch.univariate.ConstantMean.fit", "arch.univariate.ConstantMean.fix", "arch.univariate.ConstantMean.forecast", "arch.univariate.ConstantMean.name", "arch.univariate.ConstantMean.num_params", "arch.univariate.ConstantMean.parameter_names", "arch.univariate.ConstantMean.resids", "arch.univariate.ConstantMean.simulate", "arch.univariate.ConstantMean.starting_values", "arch.univariate.ConstantMean.volatility", "arch.univariate.ConstantMean.x", "arch.univariate.ConstantMean.y", "arch.univariate.ConstantVariance.backcast", "arch.univariate.ConstantVariance.backcast_transform", "arch.univariate.ConstantVariance.bounds", "arch.univariate.ConstantVariance.compute_variance", "arch.univariate.ConstantVariance.constraints", "arch.univariate.ConstantVariance.forecast", "arch.univariate.ConstantVariance.name", "arch.univariate.ConstantVariance.num_params", "arch.univariate.ConstantVariance.parameter_names", "arch.univariate.ConstantVariance.simulate", "arch.univariate.ConstantVariance.start", "arch.univariate.ConstantVariance.starting_values", "arch.univariate.ConstantVariance.stop", "arch.univariate.ConstantVariance.update", "arch.univariate.ConstantVariance.updateable", "arch.univariate.ConstantVariance.variance_bounds", "arch.univariate.ConstantVariance.volatility_updater", "arch.univariate.EGARCH.backcast", "arch.univariate.EGARCH.backcast_transform", "arch.univariate.EGARCH.bounds", "arch.univariate.EGARCH.compute_variance", "arch.univariate.EGARCH.constraints", "arch.univariate.EGARCH.forecast", "arch.univariate.EGARCH.name", "arch.univariate.EGARCH.num_params", "arch.univariate.EGARCH.parameter_names", "arch.univariate.EGARCH.simulate", "arch.univariate.EGARCH.start", "arch.univariate.EGARCH.starting_values", "arch.univariate.EGARCH.stop", "arch.univariate.EGARCH.update", "arch.univariate.EGARCH.updateable", "arch.univariate.EGARCH.variance_bounds", "arch.univariate.EGARCH.volatility_updater", "arch.univariate.EWMAVariance.backcast", "arch.univariate.EWMAVariance.backcast_transform", "arch.univariate.EWMAVariance.bounds", "arch.univariate.EWMAVariance.compute_variance", "arch.univariate.EWMAVariance.constraints", "arch.univariate.EWMAVariance.forecast", "arch.univariate.EWMAVariance.name", "arch.univariate.EWMAVariance.num_params", "arch.univariate.EWMAVariance.parameter_names", "arch.univariate.EWMAVariance.simulate", "arch.univariate.EWMAVariance.start", "arch.univariate.EWMAVariance.starting_values", "arch.univariate.EWMAVariance.stop", "arch.univariate.EWMAVariance.update", "arch.univariate.EWMAVariance.updateable", "arch.univariate.EWMAVariance.variance_bounds", "arch.univariate.EWMAVariance.volatility_updater", "arch.univariate.FIGARCH.backcast", "arch.univariate.FIGARCH.backcast_transform", "arch.univariate.FIGARCH.bounds", "arch.univariate.FIGARCH.compute_variance", "arch.univariate.FIGARCH.constraints", "arch.univariate.FIGARCH.forecast", "arch.univariate.FIGARCH.name", "arch.univariate.FIGARCH.num_params", "arch.univariate.FIGARCH.parameter_names", "arch.univariate.FIGARCH.simulate", "arch.univariate.FIGARCH.start", "arch.univariate.FIGARCH.starting_values", "arch.univariate.FIGARCH.stop", "arch.univariate.FIGARCH.truncation", "arch.univariate.FIGARCH.update", "arch.univariate.FIGARCH.updateable", "arch.univariate.FIGARCH.variance_bounds", "arch.univariate.FIGARCH.volatility_updater", "arch.univariate.FixedVariance.backcast", "arch.univariate.FixedVariance.backcast_transform", "arch.univariate.FixedVariance.bounds", "arch.univariate.FixedVariance.compute_variance", "arch.univariate.FixedVariance.constraints", "arch.univariate.FixedVariance.forecast", "arch.univariate.FixedVariance.name", "arch.univariate.FixedVariance.num_params", "arch.univariate.FixedVariance.parameter_names", "arch.univariate.FixedVariance.simulate", "arch.univariate.FixedVariance.start", "arch.univariate.FixedVariance.starting_values", "arch.univariate.FixedVariance.stop", "arch.univariate.FixedVariance.update", "arch.univariate.FixedVariance.updateable", "arch.univariate.FixedVariance.variance_bounds", "arch.univariate.FixedVariance.volatility_updater", "arch.univariate.GARCH.backcast", "arch.univariate.GARCH.backcast_transform", "arch.univariate.GARCH.bounds", "arch.univariate.GARCH.compute_variance", "arch.univariate.GARCH.constraints", "arch.univariate.GARCH.forecast", "arch.univariate.GARCH.name", "arch.univariate.GARCH.num_params", "arch.univariate.GARCH.parameter_names", "arch.univariate.GARCH.simulate", "arch.univariate.GARCH.start", "arch.univariate.GARCH.starting_values", "arch.univariate.GARCH.stop", "arch.univariate.GARCH.update", "arch.univariate.GARCH.updateable", "arch.univariate.GARCH.variance_bounds", "arch.univariate.GARCH.volatility_updater", "arch.univariate.GeneralizedError.bounds", "arch.univariate.GeneralizedError.cdf", "arch.univariate.GeneralizedError.constraints", "arch.univariate.GeneralizedError.generator", "arch.univariate.GeneralizedError.loglikelihood", "arch.univariate.GeneralizedError.moment", "arch.univariate.GeneralizedError.name", "arch.univariate.GeneralizedError.parameter_names", "arch.univariate.GeneralizedError.partial_moment", "arch.univariate.GeneralizedError.ppf", "arch.univariate.GeneralizedError.random_state", "arch.univariate.GeneralizedError.simulate", "arch.univariate.GeneralizedError.starting_values", "arch.univariate.HARCH.backcast", "arch.univariate.HARCH.backcast_transform", "arch.univariate.HARCH.bounds", "arch.univariate.HARCH.compute_variance", "arch.univariate.HARCH.constraints", "arch.univariate.HARCH.forecast", "arch.univariate.HARCH.name", "arch.univariate.HARCH.num_params", "arch.univariate.HARCH.parameter_names", "arch.univariate.HARCH.simulate", "arch.univariate.HARCH.start", "arch.univariate.HARCH.starting_values", "arch.univariate.HARCH.stop", "arch.univariate.HARCH.update", "arch.univariate.HARCH.updateable", "arch.univariate.HARCH.variance_bounds", "arch.univariate.HARCH.volatility_updater", "arch.univariate.HARX.bounds", "arch.univariate.HARX.compute_param_cov", "arch.univariate.HARX.constraints", "arch.univariate.HARX.distribution", "arch.univariate.HARX.fit", "arch.univariate.HARX.fix", "arch.univariate.HARX.forecast", "arch.univariate.HARX.name", "arch.univariate.HARX.num_params", "arch.univariate.HARX.parameter_names", "arch.univariate.HARX.resids", "arch.univariate.HARX.simulate", "arch.univariate.HARX.starting_values", "arch.univariate.HARX.volatility", "arch.univariate.HARX.x", "arch.univariate.HARX.y", "arch.univariate.LS.bounds", "arch.univariate.LS.compute_param_cov", "arch.univariate.LS.constraints", "arch.univariate.LS.distribution", "arch.univariate.LS.fit", "arch.univariate.LS.fix", "arch.univariate.LS.forecast", "arch.univariate.LS.name", "arch.univariate.LS.num_params", "arch.univariate.LS.parameter_names", "arch.univariate.LS.resids", "arch.univariate.LS.simulate", "arch.univariate.LS.starting_values", "arch.univariate.LS.volatility", "arch.univariate.LS.x", "arch.univariate.LS.y", "arch.univariate.MIDASHyperbolic.backcast", "arch.univariate.MIDASHyperbolic.backcast_transform", "arch.univariate.MIDASHyperbolic.bounds", "arch.univariate.MIDASHyperbolic.compute_variance", "arch.univariate.MIDASHyperbolic.constraints", "arch.univariate.MIDASHyperbolic.forecast", "arch.univariate.MIDASHyperbolic.name", "arch.univariate.MIDASHyperbolic.num_params", "arch.univariate.MIDASHyperbolic.parameter_names", "arch.univariate.MIDASHyperbolic.simulate", "arch.univariate.MIDASHyperbolic.start", "arch.univariate.MIDASHyperbolic.starting_values", "arch.univariate.MIDASHyperbolic.stop", "arch.univariate.MIDASHyperbolic.update", "arch.univariate.MIDASHyperbolic.updateable", "arch.univariate.MIDASHyperbolic.variance_bounds", "arch.univariate.MIDASHyperbolic.volatility_updater", "arch.univariate.Normal.bounds", "arch.univariate.Normal.cdf", "arch.univariate.Normal.constraints", "arch.univariate.Normal.generator", "arch.univariate.Normal.loglikelihood", "arch.univariate.Normal.moment", "arch.univariate.Normal.name", "arch.univariate.Normal.parameter_names", "arch.univariate.Normal.partial_moment", "arch.univariate.Normal.ppf", "arch.univariate.Normal.random_state", "arch.univariate.Normal.simulate", "arch.univariate.Normal.starting_values", "arch.univariate.RiskMetrics2006.backcast", "arch.univariate.RiskMetrics2006.backcast_transform", "arch.univariate.RiskMetrics2006.bounds", "arch.univariate.RiskMetrics2006.compute_variance", "arch.univariate.RiskMetrics2006.constraints", "arch.univariate.RiskMetrics2006.forecast", "arch.univariate.RiskMetrics2006.name", "arch.univariate.RiskMetrics2006.num_params", "arch.univariate.RiskMetrics2006.parameter_names", "arch.univariate.RiskMetrics2006.simulate", "arch.univariate.RiskMetrics2006.start", "arch.univariate.RiskMetrics2006.starting_values", "arch.univariate.RiskMetrics2006.stop", "arch.univariate.RiskMetrics2006.update", "arch.univariate.RiskMetrics2006.updateable", "arch.univariate.RiskMetrics2006.variance_bounds", "arch.univariate.RiskMetrics2006.volatility_updater", "arch.univariate.SkewStudent.bounds", "arch.univariate.SkewStudent.cdf", "arch.univariate.SkewStudent.constraints", "arch.univariate.SkewStudent.generator", "arch.univariate.SkewStudent.loglikelihood", "arch.univariate.SkewStudent.moment", "arch.univariate.SkewStudent.name", "arch.univariate.SkewStudent.parameter_names", "arch.univariate.SkewStudent.partial_moment", "arch.univariate.SkewStudent.ppf", "arch.univariate.SkewStudent.random_state", "arch.univariate.SkewStudent.simulate", "arch.univariate.SkewStudent.starting_values", "arch.univariate.StudentsT.bounds", "arch.univariate.StudentsT.cdf", "arch.univariate.StudentsT.constraints", "arch.univariate.StudentsT.generator", "arch.univariate.StudentsT.loglikelihood", "arch.univariate.StudentsT.moment", "arch.univariate.StudentsT.name", "arch.univariate.StudentsT.parameter_names", "arch.univariate.StudentsT.partial_moment", "arch.univariate.StudentsT.ppf", "arch.univariate.StudentsT.random_state", "arch.univariate.StudentsT.simulate", "arch.univariate.StudentsT.starting_values", "arch.univariate.ZeroMean.bounds", "arch.univariate.ZeroMean.compute_param_cov", "arch.univariate.ZeroMean.constraints", "arch.univariate.ZeroMean.distribution", "arch.univariate.ZeroMean.fit", "arch.univariate.ZeroMean.fix", "arch.univariate.ZeroMean.forecast", "arch.univariate.ZeroMean.name", "arch.univariate.ZeroMean.num_params", "arch.univariate.ZeroMean.parameter_names", "arch.univariate.ZeroMean.resids", "arch.univariate.ZeroMean.simulate", "arch.univariate.ZeroMean.starting_values", "arch.univariate.ZeroMean.volatility", "arch.univariate.ZeroMean.x", "arch.univariate.ZeroMean.y", "arch.univariate.base.ARCHModel.bounds", "arch.univariate.base.ARCHModel.compute_param_cov", "arch.univariate.base.ARCHModel.constraints", "arch.univariate.base.ARCHModel.distribution", "arch.univariate.base.ARCHModel.fit", "arch.univariate.base.ARCHModel.fix", "arch.univariate.base.ARCHModel.forecast", "arch.univariate.base.ARCHModel.name", "arch.univariate.base.ARCHModel.num_params", "arch.univariate.base.ARCHModel.parameter_names", "arch.univariate.base.ARCHModel.resids", "arch.univariate.base.ARCHModel.simulate", "arch.univariate.base.ARCHModel.starting_values", "arch.univariate.base.ARCHModel.volatility", "arch.univariate.base.ARCHModel.y", "arch.univariate.base.ARCHModelFixedResult.aic", "arch.univariate.base.ARCHModelFixedResult.arch_lm_test", "arch.univariate.base.ARCHModelFixedResult.bic", "arch.univariate.base.ARCHModelFixedResult.conditional_volatility", "arch.univariate.base.ARCHModelFixedResult.forecast", "arch.univariate.base.ARCHModelFixedResult.hedgehog_plot", "arch.univariate.base.ARCHModelFixedResult.loglikelihood", "arch.univariate.base.ARCHModelFixedResult.model", "arch.univariate.base.ARCHModelFixedResult.nobs", "arch.univariate.base.ARCHModelFixedResult.num_params", "arch.univariate.base.ARCHModelFixedResult.params", "arch.univariate.base.ARCHModelFixedResult.plot", "arch.univariate.base.ARCHModelFixedResult.resid", "arch.univariate.base.ARCHModelFixedResult.std_resid", "arch.univariate.base.ARCHModelFixedResult.summary", "arch.univariate.base.ARCHModelForecast.mean", "arch.univariate.base.ARCHModelForecast.residual_variance", "arch.univariate.base.ARCHModelForecast.simulations", "arch.univariate.base.ARCHModelForecast.variance", "arch.univariate.base.ARCHModelForecastSimulation.index", "arch.univariate.base.ARCHModelForecastSimulation.residual_variances", "arch.univariate.base.ARCHModelForecastSimulation.residuals", "arch.univariate.base.ARCHModelForecastSimulation.values", "arch.univariate.base.ARCHModelForecastSimulation.variances", "arch.univariate.base.ARCHModelResult.aic", "arch.univariate.base.ARCHModelResult.arch_lm_test", "arch.univariate.base.ARCHModelResult.bic", "arch.univariate.base.ARCHModelResult.conditional_volatility", "arch.univariate.base.ARCHModelResult.conf_int", "arch.univariate.base.ARCHModelResult.convergence_flag", "arch.univariate.base.ARCHModelResult.fit_start", "arch.univariate.base.ARCHModelResult.fit_stop", "arch.univariate.base.ARCHModelResult.forecast", "arch.univariate.base.ARCHModelResult.hedgehog_plot", "arch.univariate.base.ARCHModelResult.loglikelihood", "arch.univariate.base.ARCHModelResult.model", "arch.univariate.base.ARCHModelResult.nobs", "arch.univariate.base.ARCHModelResult.num_params", "arch.univariate.base.ARCHModelResult.optimization_result", "arch.univariate.base.ARCHModelResult.param_cov", "arch.univariate.base.ARCHModelResult.params", "arch.univariate.base.ARCHModelResult.plot", "arch.univariate.base.ARCHModelResult.pvalues", "arch.univariate.base.ARCHModelResult.resid", "arch.univariate.base.ARCHModelResult.rsquared", "arch.univariate.base.ARCHModelResult.rsquared_adj", "arch.univariate.base.ARCHModelResult.scale", "arch.univariate.base.ARCHModelResult.std_err", "arch.univariate.base.ARCHModelResult.std_resid", "arch.univariate.base.ARCHModelResult.summary", "arch.univariate.base.ARCHModelResult.tvalues", "arch.univariate.distribution.Distribution.bounds", "arch.univariate.distribution.Distribution.cdf", "arch.univariate.distribution.Distribution.constraints", "arch.univariate.distribution.Distribution.generator", "arch.univariate.distribution.Distribution.loglikelihood", "arch.univariate.distribution.Distribution.moment", "arch.univariate.distribution.Distribution.name", "arch.univariate.distribution.Distribution.parameter_names", "arch.univariate.distribution.Distribution.partial_moment", "arch.univariate.distribution.Distribution.ppf", "arch.univariate.distribution.Distribution.random_state", "arch.univariate.distribution.Distribution.simulate", "arch.univariate.distribution.Distribution.starting_values", "arch.univariate.recursions_python.VolatilityUpdater.initialize_update", "arch.univariate.recursions_python.VolatilityUpdater.update", "arch.univariate.volatility.VolatilityProcess.backcast", "arch.univariate.volatility.VolatilityProcess.backcast_transform", "arch.univariate.volatility.VolatilityProcess.bounds", "arch.univariate.volatility.VolatilityProcess.compute_variance", "arch.univariate.volatility.VolatilityProcess.constraints", "arch.univariate.volatility.VolatilityProcess.forecast", "arch.univariate.volatility.VolatilityProcess.name", "arch.univariate.volatility.VolatilityProcess.num_params", "arch.univariate.volatility.VolatilityProcess.parameter_names", "arch.univariate.volatility.VolatilityProcess.simulate", "arch.univariate.volatility.VolatilityProcess.start", "arch.univariate.volatility.VolatilityProcess.starting_values", "arch.univariate.volatility.VolatilityProcess.stop", "arch.univariate.volatility.VolatilityProcess.update", "arch.univariate.volatility.VolatilityProcess.updateable", "arch.univariate.volatility.VolatilityProcess.variance_bounds", "arch.univariate.volatility.VolatilityProcess.volatility_updater", "Introduction to ARCH Models", "Mean Models", "Model Results", "Univariate Volatility Models", "Forecasting with Exogenous Regressors", "Using the Fixed Variance process", "Volatility Forecasting", "ARCH Modeling", "Volatility Scenarios", "Utilities", "Volatility Processes"], "terms": {"thi": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 14, 15, 24, 25, 27, 29, 30, 39, 40, 42, 44, 45, 54, 55, 57, 59, 60, 69, 70, 72, 74, 75, 84, 85, 86, 87, 88, 89, 90, 91, 230, 231, 232, 233, 234, 247, 252, 253, 254, 256, 260, 261, 271, 411, 413, 414, 415, 418, 419, 425, 426, 427, 429, 436, 446, 455, 472, 490, 507, 523, 528, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 782, 793, 806, 834, 866, 873, 885, 889, 890, 891, 892, 893], "page": [0, 894], "list": [0, 18, 21, 33, 36, 39, 48, 51, 63, 66, 78, 81, 91, 95, 232, 234, 236, 237, 240, 241, 246, 247, 250, 251, 256, 257, 258, 259, 260, 261, 282, 283, 295, 296, 306, 307, 319, 320, 333, 334, 345, 346, 431, 441, 442, 444, 450, 458, 469, 475, 484, 494, 501, 510, 517, 526, 535, 541, 552, 558, 569, 575, 586, 592, 604, 610, 621, 627, 636, 643, 651, 657, 666, 675, 682, 691, 700, 706, 715, 722, 730, 736, 745, 752, 758, 765, 771, 780, 787, 796, 853, 860, 870, 876, 885], "contain": [0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 14, 15, 17, 22, 23, 25, 27, 29, 30, 32, 37, 38, 40, 42, 44, 45, 47, 48, 52, 53, 55, 57, 59, 60, 62, 67, 68, 70, 72, 74, 75, 77, 82, 83, 85, 87, 89, 90, 91, 109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223, 230, 232, 238, 243, 251, 253, 254, 256, 257, 258, 259, 260, 261, 265, 273, 281, 286, 294, 299, 305, 310, 317, 323, 332, 338, 344, 360, 379, 383, 394, 400, 409, 411, 413, 414, 415, 418, 421, 422, 423, 428, 432, 433, 439, 441, 442, 443, 444, 452, 455, 463, 465, 470, 472, 480, 482, 488, 489, 490, 496, 505, 506, 507, 512, 521, 522, 523, 528, 536, 538, 546, 548, 553, 555, 563, 565, 570, 572, 580, 582, 587, 589, 598, 600, 605, 607, 615, 617, 622, 624, 632, 634, 636, 648, 652, 654, 662, 664, 670, 671, 672, 677, 686, 687, 688, 693, 701, 703, 711, 713, 715, 731, 733, 741, 743, 745, 757, 758, 770, 775, 776, 777, 782, 791, 792, 793, 805, 806, 813, 816, 819, 829, 830, 834, 843, 851, 853, 871, 873, 881, 883, 889, 891, 892, 893], "essenti": [0, 252], "end": [0, 4, 5, 87, 88, 90, 94, 98, 99, 100, 101, 102, 103, 104, 105, 260, 261, 263, 268, 271, 411, 418, 444, 490, 507, 523, 672, 688, 777, 793, 806, 833, 834, 885], "user": [0, 89, 91, 106, 116, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 419, 449, 468, 489, 506, 522, 534, 551, 568, 585, 603, 620, 650, 671, 687, 699, 729, 776, 792, 869, 892], "function": [0, 4, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 87, 88, 89, 91, 253, 256, 259, 262, 421, 434, 446, 459, 476, 542, 559, 576, 593, 611, 628, 637, 640, 645, 658, 707, 716, 724, 737, 746, 749, 754, 759, 762, 767, 854, 862, 866, 877, 885, 890, 891, 892, 893], "class": [0, 3, 5, 6, 7, 8, 9, 12, 15, 25, 27, 30, 40, 42, 45, 55, 57, 60, 70, 72, 75, 85, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 417, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 455, 466, 472, 483, 538, 549, 555, 566, 572, 583, 589, 601, 607, 618, 624, 635, 654, 665, 703, 714, 733, 744, 873, 884, 885, 886, 887, 892, 893, 894, 895], "The": [1, 2, 4, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 25, 27, 28, 29, 30, 31, 33, 40, 42, 43, 44, 45, 46, 48, 55, 57, 58, 59, 60, 61, 63, 70, 72, 73, 74, 75, 76, 78, 85, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 163, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 252, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 276, 277, 280, 285, 289, 290, 293, 298, 301, 302, 304, 309, 312, 313, 315, 316, 322, 326, 327, 331, 335, 337, 340, 341, 343, 348, 349, 350, 351, 353, 355, 356, 357, 358, 362, 363, 364, 365, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 381, 382, 384, 385, 386, 388, 389, 390, 391, 392, 393, 395, 396, 397, 399, 401, 404, 405, 406, 407, 408, 410, 411, 413, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 443, 444, 445, 446, 447, 451, 454, 455, 456, 457, 459, 463, 466, 472, 473, 474, 476, 480, 483, 490, 491, 492, 507, 508, 523, 524, 538, 539, 540, 542, 546, 549, 555, 556, 557, 559, 563, 566, 572, 573, 574, 576, 580, 583, 589, 590, 591, 593, 598, 601, 607, 608, 609, 611, 615, 618, 624, 625, 626, 628, 632, 635, 639, 640, 642, 644, 646, 654, 655, 656, 658, 662, 665, 672, 673, 688, 689, 703, 704, 705, 707, 711, 714, 718, 719, 721, 723, 725, 727, 733, 734, 735, 737, 741, 744, 748, 749, 751, 753, 755, 761, 762, 764, 766, 768, 777, 778, 793, 794, 805, 806, 807, 821, 824, 829, 834, 835, 848, 856, 859, 861, 863, 865, 866, 867, 873, 874, 875, 877, 881, 884, 885, 889, 890, 891, 892, 893, 894, 895], "bootstrap": [1, 4, 86, 88, 230, 253, 254, 256, 257, 259, 274, 276, 287, 289, 300, 301, 311, 312, 325, 326, 339, 340, 443, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 807, 834, 835, 873, 888], "larg": [1, 91, 253, 263, 268, 411, 414, 415, 892], "area": 1, "number": [1, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 17, 21, 22, 25, 26, 27, 29, 30, 32, 36, 37, 40, 41, 42, 44, 45, 47, 51, 52, 55, 56, 57, 59, 60, 62, 66, 67, 70, 71, 72, 74, 75, 77, 81, 82, 85, 89, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 115, 125, 139, 149, 159, 169, 179, 189, 199, 209, 219, 229, 232, 233, 234, 240, 246, 250, 253, 256, 257, 258, 259, 260, 261, 265, 266, 267, 269, 270, 273, 274, 276, 286, 287, 289, 299, 300, 301, 310, 311, 312, 315, 323, 325, 326, 338, 339, 340, 348, 356, 362, 369, 370, 371, 375, 384, 385, 386, 396, 401, 411, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 447, 453, 455, 457, 459, 465, 471, 472, 474, 476, 482, 486, 489, 490, 493, 496, 503, 506, 507, 509, 512, 519, 522, 523, 525, 528, 537, 538, 540, 542, 548, 554, 555, 557, 559, 565, 571, 572, 574, 576, 582, 588, 589, 591, 593, 600, 606, 607, 609, 611, 617, 623, 624, 626, 628, 634, 653, 654, 656, 658, 664, 668, 671, 672, 674, 677, 684, 687, 688, 690, 693, 703, 705, 707, 713, 732, 733, 735, 737, 743, 773, 776, 777, 779, 782, 789, 792, 793, 795, 803, 806, 807, 810, 811, 827, 834, 835, 838, 839, 866, 872, 873, 875, 877, 883, 885, 889, 891, 892, 893], "high": [1, 2, 4, 87, 88, 91, 888, 890], "qualiti": 1, "book": 1, "lead": [1, 253, 265, 266, 362, 366, 367], "includ": [1, 3, 89, 91, 112, 122, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 230, 231, 232, 253, 256, 257, 258, 259, 260, 261, 263, 265, 266, 268, 270, 271, 273, 286, 299, 310, 323, 338, 362, 367, 369, 370, 379, 411, 414, 415, 418, 421, 422, 431, 432, 433, 434, 488, 490, 496, 505, 507, 512, 521, 523, 670, 672, 677, 686, 688, 693, 775, 777, 791, 793, 803, 806, 827, 834, 889, 892], "chernick": 1, "m": [1, 4, 10, 87, 88, 231, 232, 234, 258, 260, 265, 356, 371, 375, 431, 432, 434, 813, 843], "r": [1, 88, 231, 232, 233, 257, 415, 444, 846, 847, 885, 889, 890, 892, 893], "2011": [1, 231, 232, 252, 256, 891], "method": [1, 3, 5, 6, 7, 8, 9, 14, 29, 44, 59, 74, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 360, 379, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 455, 472, 488, 490, 505, 507, 521, 523, 538, 555, 572, 589, 607, 624, 654, 670, 672, 686, 688, 703, 733, 775, 777, 791, 793, 806, 807, 819, 834, 835, 873, 885, 886, 887, 888, 889, 890, 891, 892, 893, 895], "A": [1, 3, 4, 10, 23, 38, 53, 68, 83, 86, 87, 89, 94, 98, 99, 100, 101, 102, 103, 104, 105, 108, 118, 132, 142, 152, 162, 172, 182, 192, 202, 212, 222, 231, 232, 233, 252, 257, 258, 259, 260, 261, 265, 268, 360, 379, 414, 415, 417, 418, 421, 422, 431, 432, 434, 453, 471, 488, 490, 505, 507, 521, 523, 537, 554, 571, 588, 606, 623, 638, 653, 670, 672, 686, 688, 702, 717, 732, 747, 760, 775, 777, 791, 793, 806, 834, 855, 872, 885, 890, 892, 893, 894, 895], "guid": 1, "practition": 1, "research": 1, "vol": [1, 418, 421, 490, 491, 507, 523, 644, 672, 688, 723, 753, 766, 777, 793, 807, 835, 861, 885, 889, 890, 891, 892, 893], "619": [1, 253], "john": [1, 260], "wilei": 1, "son": 1, "davidson": 1, "davison": 1, "c": [1, 91, 256, 257, 258, 259, 260, 261, 263, 265, 267, 268, 269, 270, 271, 411, 414, 415, 446, 640, 749, 891], "1997": [1, 260], "applic": [1, 88, 89, 253, 260, 440, 885, 886, 893], "1": [1, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 25, 29, 30, 40, 44, 45, 55, 59, 60, 70, 74, 75, 85, 87, 88, 89, 94, 98, 99, 100, 101, 102, 103, 104, 105, 112, 114, 122, 124, 136, 138, 146, 148, 156, 158, 166, 168, 176, 178, 186, 188, 196, 198, 206, 208, 216, 218, 226, 228, 232, 233, 234, 241, 243, 253, 257, 258, 259, 260, 263, 265, 268, 271, 335, 356, 362, 375, 383, 392, 400, 411, 414, 415, 418, 419, 420, 421, 422, 425, 426, 427, 429, 431, 432, 434, 436, 437, 455, 472, 488, 490, 496, 505, 507, 512, 521, 523, 528, 538, 555, 572, 589, 607, 624, 640, 644, 645, 648, 654, 670, 672, 677, 686, 688, 693, 702, 703, 719, 723, 724, 733, 749, 753, 754, 762, 766, 767, 775, 777, 782, 791, 793, 805, 806, 807, 829, 834, 835, 848, 861, 862, 867, 873, 885, 886, 889, 890, 891, 892, 893], "cambridg": 1, "univers": [1, 3, 256, 259, 260], "press": [1, 256, 259, 260], "efrontibshirani": 1, "efron": 1, "b": [1, 3, 4, 10, 86, 89, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 253, 258, 259, 268, 418, 437, 453, 471, 486, 503, 519, 537, 554, 571, 588, 606, 623, 638, 653, 668, 684, 702, 717, 732, 747, 749, 760, 773, 789, 855, 872, 893], "tibshirani": 1, "j": [1, 231, 232, 234, 253, 256, 257, 259, 263, 265, 425, 427, 429, 431, 432, 434, 490, 496, 507, 512, 523, 672, 677, 688, 693, 777, 793, 806, 834, 889], "1994": [1, 9, 256, 258, 259, 262, 437], "an": [1, 3, 4, 5, 6, 7, 8, 9, 12, 14, 27, 29, 42, 44, 57, 59, 72, 74, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 120, 134, 144, 154, 164, 174, 184, 194, 204, 214, 224, 232, 233, 234, 251, 252, 253, 257, 258, 260, 261, 265, 270, 271, 348, 362, 396, 413, 414, 415, 417, 418, 422, 430, 431, 434, 435, 437, 438, 441, 442, 443, 444, 452, 470, 489, 490, 496, 506, 507, 512, 522, 523, 528, 536, 553, 570, 587, 605, 622, 652, 671, 672, 677, 687, 688, 693, 701, 731, 776, 777, 782, 792, 793, 806, 807, 813, 834, 835, 843, 871, 885, 890, 891, 892, 893], "introduct": [1, 413, 888, 892], "57": [1, 414, 415, 892], "crc": 1, "politisromanowolf": 1, "politi": [1, 5, 8, 9, 10], "d": [1, 2, 4, 10, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 256, 258, 259, 261, 411, 418, 421, 422, 427, 432, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 647, 654, 672, 688, 703, 726, 733, 756, 769, 777, 793, 806, 807, 813, 834, 835, 843, 864, 873, 889, 890, 892], "n": [1, 3, 10, 256, 259, 260, 263, 265, 268, 270, 271, 414, 418, 432, 641, 644, 720, 723, 750, 753, 763, 766, 858, 861, 889, 892, 893], "romano": [1, 5, 8, 9, 10, 231, 234, 252], "p": [1, 4, 87, 88, 91, 231, 232, 233, 234, 238, 241, 243, 244, 247, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 269, 271, 278, 281, 291, 294, 303, 305, 314, 317, 329, 332, 342, 344, 354, 356, 373, 375, 390, 392, 394, 406, 409, 411, 414, 415, 418, 419, 420, 421, 422, 425, 427, 429, 432, 444, 496, 512, 677, 693, 782, 844, 885, 889, 890, 891, 892, 893, 894], "wolf": [1, 231, 234, 252], "1999": [1, 893], "subsampl": 1, "articl": [1, 231], "us": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 68, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 112, 115, 116, 117, 121, 122, 125, 130, 131, 135, 136, 139, 140, 141, 145, 146, 149, 150, 151, 155, 156, 159, 160, 161, 165, 166, 169, 170, 171, 175, 176, 179, 180, 181, 185, 186, 189, 190, 191, 195, 196, 199, 200, 201, 205, 206, 209, 210, 211, 215, 216, 219, 220, 221, 225, 226, 229, 230, 231, 232, 233, 234, 240, 241, 243, 246, 247, 250, 252, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 282, 284, 287, 288, 289, 295, 297, 300, 301, 306, 308, 311, 312, 315, 319, 321, 324, 325, 326, 328, 330, 333, 336, 339, 340, 345, 347, 348, 349, 351, 352, 362, 363, 365, 368, 371, 385, 386, 395, 396, 398, 410, 411, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 446, 447, 448, 452, 453, 455, 459, 460, 461, 462, 463, 465, 467, 470, 471, 472, 476, 477, 478, 479, 480, 482, 484, 485, 486, 488, 489, 490, 495, 496, 501, 502, 503, 505, 506, 507, 511, 512, 517, 518, 519, 521, 522, 523, 527, 528, 533, 536, 537, 538, 542, 543, 544, 545, 546, 548, 550, 553, 554, 555, 559, 560, 561, 562, 563, 565, 567, 570, 571, 572, 576, 577, 578, 579, 580, 582, 584, 587, 588, 589, 593, 594, 595, 596, 598, 600, 602, 605, 606, 607, 611, 612, 613, 614, 615, 617, 619, 622, 623, 624, 628, 629, 630, 631, 632, 634, 636, 637, 638, 640, 641, 644, 645, 646, 648, 649, 652, 653, 654, 658, 659, 660, 661, 662, 664, 666, 667, 668, 670, 671, 672, 676, 677, 682, 683, 684, 686, 687, 688, 692, 693, 698, 701, 703, 707, 708, 709, 710, 711, 713, 715, 716, 717, 719, 720, 723, 724, 725, 727, 731, 732, 733, 737, 738, 739, 740, 741, 743, 745, 746, 747, 749, 750, 753, 754, 755, 757, 758, 759, 760, 762, 763, 766, 767, 768, 770, 771, 772, 773, 775, 776, 777, 781, 782, 787, 788, 789, 791, 792, 793, 797, 805, 806, 807, 809, 810, 813, 819, 823, 829, 830, 832, 833, 834, 835, 837, 838, 843, 853, 854, 855, 858, 861, 862, 863, 865, 866, 867, 868, 871, 872, 873, 877, 878, 879, 880, 881, 883, 885, 887, 888, 891, 892, 893, 895], "creation": [1, 231], "modul": [1, 2, 91, 230, 231, 254, 261, 413], "carpenterbithel": 1, "carpent": 1, "bithel": 1, "2000": [1, 7, 231, 233, 252, 418, 432, 490, 507, 523, 672, 688, 777, 793, 807, 835, 885], "confid": [1, 2, 3, 14, 29, 44, 59, 74, 89, 91, 231, 232, 235, 830], "interv": [1, 2, 3, 14, 29, 44, 59, 74, 89, 91, 645, 724, 754, 767, 830, 862], "when": [1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 24, 25, 26, 27, 29, 30, 39, 40, 41, 42, 44, 45, 54, 55, 56, 57, 59, 60, 69, 70, 71, 72, 74, 75, 84, 85, 87, 89, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 241, 243, 247, 253, 256, 257, 258, 259, 260, 261, 265, 270, 271, 274, 275, 276, 287, 288, 289, 300, 301, 311, 312, 325, 326, 339, 340, 362, 414, 415, 418, 421, 422, 423, 426, 427, 428, 432, 433, 437, 439, 444, 446, 452, 455, 459, 461, 463, 470, 472, 476, 478, 480, 488, 489, 490, 495, 496, 505, 506, 507, 511, 512, 521, 522, 523, 527, 528, 536, 538, 542, 544, 546, 553, 555, 559, 561, 563, 570, 572, 576, 578, 580, 587, 589, 593, 595, 598, 605, 607, 611, 613, 615, 622, 624, 628, 630, 632, 636, 652, 654, 658, 660, 662, 670, 671, 672, 676, 677, 686, 687, 688, 692, 693, 701, 703, 707, 709, 711, 715, 731, 733, 737, 739, 741, 745, 758, 775, 776, 777, 781, 782, 791, 792, 793, 797, 806, 807, 813, 830, 834, 835, 843, 853, 871, 873, 877, 879, 881, 885, 887, 888, 889, 890, 891, 892, 893], "which": [1, 3, 4, 10, 89, 90, 91, 241, 247, 252, 253, 254, 260, 262, 411, 415, 418, 427, 429, 431, 446, 488, 490, 505, 507, 521, 523, 637, 648, 670, 672, 686, 688, 716, 746, 759, 775, 777, 791, 793, 805, 806, 813, 829, 834, 843, 854, 889, 890, 891, 892, 893], "what": [1, 893], "practic": 1, "medic": 1, "statistician": 1, "statist": [1, 4, 7, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 91, 231, 233, 253, 256, 257, 258, 259, 260, 261, 264, 266, 267, 269, 271, 276, 278, 280, 281, 284, 289, 291, 293, 294, 297, 301, 303, 304, 305, 308, 312, 314, 315, 316, 317, 321, 326, 329, 331, 332, 336, 340, 342, 343, 344, 347, 361, 380, 383, 390, 393, 394, 400, 406, 408, 409, 411, 414, 415, 444, 844, 852, 894], "medicin": 1, "19": [1, 3, 257, 415, 490, 507, 523, 644, 672, 688, 723, 753, 766, 777, 793, 806, 834, 861, 889, 890, 891, 892], "9": [1, 3, 253, 414, 415, 885, 889, 890, 891, 892, 893], "1141": 1, "1164": 1, "davidsonmackinnon": 1, "mackinnon": [1, 256, 259], "g": [1, 3, 4, 10, 86, 91, 256, 257, 258, 259, 261, 418, 421, 885, 891], "2006": [1, 436, 892], "econometr": [1, 10, 256, 258, 260, 263, 265, 268, 271, 434], "palgrav": 1, "handbook": 1, "812": 1, "38": [1, 3, 414, 415, 885], "diciccioefron": 1, "diciccio": 1, "t": [1, 3, 4, 89, 91, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 232, 233, 234, 253, 256, 257, 259, 261, 263, 264, 265, 266, 268, 271, 348, 356, 361, 362, 371, 375, 380, 392, 396, 414, 415, 418, 419, 420, 421, 422, 425, 426, 427, 429, 431, 432, 434, 437, 444, 490, 507, 523, 672, 688, 749, 762, 777, 793, 805, 806, 829, 834, 844, 852, 867, 885, 889, 890, 891, 893], "1996": [1, 257], "scienc": [1, 644, 723, 753, 766, 861], "189": [1, 890], "212": 1, "1987": [1, 259], "better": [1, 252, 253, 414], "journal": [1, 231, 233, 256, 258, 259, 261, 263, 265, 271], "american": 1, "associ": [1, 419, 420, 424, 425, 426, 427, 428, 429, 431, 434, 436, 447, 466, 483, 549, 566, 583, 601, 618, 635, 665, 714, 744, 884], "82": [1, 893], "397": 1, "171": 1, "185": [1, 414], "provid": [2, 3, 5, 6, 8, 9, 11, 14, 20, 26, 29, 35, 41, 44, 50, 56, 59, 65, 71, 74, 80, 89, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 116, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 232, 233, 234, 265, 271, 348, 362, 396, 417, 418, 419, 426, 430, 435, 437, 438, 449, 468, 488, 490, 505, 507, 521, 523, 534, 551, 568, 585, 603, 620, 650, 670, 672, 686, 688, 699, 729, 775, 777, 791, 793, 806, 807, 813, 834, 835, 843, 869, 886, 888, 889, 890, 892, 893, 895], "both": [2, 4, 5, 6, 7, 8, 9, 89, 253, 414, 888, 889, 891, 893], "low": [2, 4, 88, 91, 256, 888], "level": [2, 91, 415, 888], "interfac": 2, "data": [2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 25, 26, 27, 28, 29, 30, 40, 41, 42, 43, 44, 45, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 74, 75, 85, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 118, 132, 142, 152, 162, 172, 182, 192, 202, 212, 222, 230, 231, 232, 233, 234, 243, 253, 256, 257, 258, 259, 260, 261, 262, 263, 268, 271, 276, 284, 289, 297, 301, 308, 312, 321, 326, 336, 340, 347, 348, 362, 396, 411, 413, 414, 415, 418, 421, 422, 423, 428, 432, 433, 434, 439, 441, 444, 459, 476, 490, 496, 507, 512, 523, 528, 542, 559, 576, 593, 611, 628, 640, 658, 672, 677, 688, 693, 707, 719, 737, 749, 762, 777, 782, 793, 805, 806, 807, 810, 813, 829, 834, 835, 838, 843, 848, 857, 877, 885, 892, 893], "numpi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 89, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 253, 256, 257, 258, 259, 261, 263, 265, 268, 270, 271, 414, 415, 421, 422, 423, 430, 432, 433, 435, 437, 438, 439, 445, 455, 472, 490, 496, 507, 512, 523, 528, 538, 555, 572, 589, 607, 624, 639, 646, 654, 672, 677, 688, 693, 703, 718, 725, 733, 748, 755, 761, 768, 777, 782, 793, 806, 834, 856, 863, 873, 889, 890, 891, 892, 893], "arrai": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 25, 26, 30, 40, 41, 45, 55, 56, 60, 70, 71, 75, 85, 87, 88, 89, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 247, 251, 253, 263, 268, 271, 411, 421, 422, 428, 431, 432, 433, 444, 452, 453, 455, 459, 461, 463, 465, 470, 471, 472, 476, 478, 480, 482, 486, 488, 490, 496, 503, 505, 507, 512, 519, 521, 523, 528, 536, 537, 538, 542, 544, 546, 548, 553, 554, 555, 559, 561, 563, 565, 570, 571, 572, 576, 578, 580, 582, 587, 588, 589, 593, 595, 598, 600, 605, 606, 607, 611, 613, 615, 617, 622, 623, 624, 628, 630, 632, 634, 638, 648, 652, 653, 654, 658, 660, 662, 664, 668, 670, 672, 677, 684, 686, 688, 693, 701, 703, 707, 709, 711, 713, 717, 731, 732, 733, 737, 739, 741, 743, 747, 757, 760, 770, 773, 775, 777, 782, 789, 791, 793, 805, 806, 829, 830, 834, 844, 849, 852, 855, 857, 867, 871, 872, 873, 877, 879, 881, 883, 885, 891], "panda": [2, 3, 4, 5, 6, 7, 8, 9, 87, 88, 91, 253, 411, 415, 432, 441, 444, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 889, 891, 892, 893], "seri": [2, 3, 4, 5, 6, 7, 8, 9, 10, 88, 91, 233, 234, 243, 244, 253, 256, 257, 258, 259, 260, 261, 262, 266, 267, 270, 271, 284, 297, 308, 321, 336, 347, 353, 354, 355, 359, 361, 367, 372, 373, 374, 378, 380, 382, 383, 391, 399, 400, 407, 411, 413, 414, 415, 421, 422, 423, 428, 432, 433, 439, 441, 444, 455, 459, 472, 476, 489, 490, 496, 506, 507, 512, 522, 523, 528, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 654, 658, 671, 672, 677, 687, 688, 693, 703, 707, 733, 737, 776, 777, 782, 792, 793, 805, 806, 807, 812, 814, 815, 829, 834, 835, 842, 844, 845, 849, 850, 852, 873, 877, 885, 889, 892], "datafram": [2, 3, 5, 6, 7, 8, 9, 10, 87, 88, 91, 95, 126, 127, 128, 129, 232, 233, 234, 238, 241, 251, 253, 266, 284, 297, 308, 321, 336, 347, 350, 364, 366, 411, 415, 418, 421, 422, 432, 433, 490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 777, 782, 793, 798, 806, 817, 818, 820, 830, 834, 841, 885, 891, 892], "all": [2, 3, 4, 7, 10, 14, 29, 44, 59, 74, 87, 88, 91, 233, 253, 260, 261, 265, 266, 362, 366, 379, 411, 413, 414, 415, 417, 418, 419, 421, 422, 424, 431, 432, 440, 446, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 807, 834, 835, 873, 886, 887, 888, 889, 891, 892, 893, 895], "have": [2, 4, 7, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 86, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 253, 413, 414, 415, 418, 419, 428, 431, 441, 444, 489, 490, 496, 506, 507, 512, 522, 523, 640, 671, 672, 677, 687, 688, 693, 749, 762, 776, 777, 792, 793, 806, 807, 834, 835, 848, 889, 890, 891, 892, 893, 895], "same": [2, 3, 4, 5, 6, 7, 8, 9, 14, 29, 44, 59, 74, 252, 253, 265, 315, 371, 414, 415, 419, 424, 428, 441, 444, 452, 465, 470, 482, 490, 497, 507, 513, 523, 529, 536, 548, 553, 565, 570, 582, 587, 600, 605, 617, 622, 634, 652, 664, 672, 678, 688, 694, 701, 713, 731, 743, 777, 783, 793, 799, 806, 834, 867, 871, 883, 885, 887, 889, 890, 891, 892, 893], "onli": [2, 3, 4, 7, 89, 91, 233, 253, 258, 259, 260, 356, 375, 379, 414, 415, 418, 445, 463, 480, 490, 507, 523, 546, 563, 580, 598, 615, 632, 662, 672, 688, 711, 741, 777, 793, 806, 807, 834, 835, 881, 885, 889, 891, 892, 893], "differ": [2, 3, 13, 14, 28, 29, 43, 44, 58, 59, 73, 74, 86, 89, 91, 233, 252, 253, 257, 263, 265, 268, 270, 271, 411, 415, 418, 421, 422, 423, 432, 433, 439, 885, 891, 892], "name": [2, 3, 12, 15, 25, 27, 30, 40, 42, 45, 55, 57, 60, 70, 72, 75, 85, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 234, 236, 237, 238, 241, 251, 253, 267, 269, 271, 348, 362, 396, 402, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 444, 445, 447, 458, 475, 490, 494, 507, 510, 523, 526, 541, 558, 575, 592, 610, 627, 643, 657, 672, 675, 688, 691, 706, 722, 736, 752, 765, 777, 780, 793, 796, 806, 834, 860, 876, 885, 889, 890, 891, 893, 894], "setup": [2, 3, 253, 414, 889, 891], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 85, 88, 89, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 240, 241, 243, 246, 247, 250, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 348, 349, 350, 352, 353, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 371, 372, 373, 378, 379, 380, 389, 396, 405, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 455, 457, 458, 459, 461, 463, 465, 467, 468, 469, 470, 471, 472, 474, 475, 476, 478, 480, 482, 484, 485, 486, 488, 489, 490, 493, 494, 495, 496, 501, 502, 503, 505, 506, 507, 509, 510, 511, 512, 517, 518, 519, 521, 522, 523, 525, 526, 527, 528, 533, 534, 535, 536, 537, 538, 540, 541, 542, 544, 546, 548, 550, 551, 552, 553, 554, 555, 557, 558, 559, 561, 563, 565, 567, 568, 569, 570, 571, 572, 574, 575, 576, 578, 580, 582, 584, 585, 586, 587, 588, 589, 591, 592, 593, 595, 598, 600, 602, 603, 604, 605, 606, 607, 609, 610, 611, 613, 615, 617, 619, 620, 621, 622, 623, 624, 626, 627, 628, 630, 632, 634, 636, 637, 638, 640, 641, 643, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 656, 657, 658, 660, 662, 664, 666, 667, 668, 670, 671, 672, 674, 675, 676, 677, 682, 683, 684, 686, 687, 688, 690, 691, 692, 693, 698, 699, 700, 701, 702, 703, 705, 706, 707, 709, 711, 713, 715, 716, 717, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 735, 736, 737, 739, 741, 743, 745, 746, 747, 749, 750, 752, 753, 754, 756, 757, 758, 759, 760, 762, 763, 765, 766, 767, 769, 770, 771, 772, 773, 775, 776, 777, 779, 780, 781, 782, 787, 788, 789, 791, 792, 793, 795, 796, 797, 803, 806, 807, 811, 812, 813, 827, 830, 832, 833, 834, 835, 839, 841, 842, 843, 848, 849, 853, 854, 855, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 875, 876, 877, 879, 881, 883, 885, 887, 889, 890, 891, 893, 894, 895], "intern": [2, 87, 247, 437, 893], "gener": [2, 3, 5, 6, 8, 9, 12, 13, 15, 17, 19, 21, 22, 23, 25, 27, 28, 30, 32, 34, 36, 37, 38, 40, 42, 43, 45, 47, 49, 51, 52, 53, 55, 57, 58, 60, 62, 64, 66, 67, 68, 70, 72, 73, 75, 77, 79, 81, 82, 83, 85, 89, 91, 232, 233, 234, 240, 246, 250, 253, 258, 418, 430, 431, 435, 437, 438, 445, 455, 459, 472, 476, 488, 489, 490, 505, 506, 507, 521, 522, 523, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 640, 646, 654, 658, 670, 671, 672, 686, 687, 688, 703, 707, 725, 733, 737, 755, 768, 775, 776, 777, 791, 792, 793, 806, 807, 834, 835, 863, 873, 877, 885, 889, 892], "sampl": [2, 4, 7, 10, 14, 15, 25, 29, 30, 40, 44, 45, 55, 59, 60, 70, 74, 75, 85, 88, 89, 90, 91, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 257, 258, 267, 418, 421, 422, 423, 432, 433, 439, 444, 455, 472, 485, 490, 502, 507, 518, 523, 538, 555, 572, 589, 607, 624, 654, 667, 672, 683, 688, 703, 733, 772, 777, 788, 793, 806, 832, 833, 834, 866, 873, 885, 891, 893], "scheme": [2, 418], "exampl": [2, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 88, 89, 91, 230, 253, 254, 256, 257, 258, 259, 260, 413, 415, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 436, 439, 446, 490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 777, 782, 793, 806, 807, 813, 834, 835, 843, 885, 888, 889, 890, 891, 892, 893, 895], "construct": [2, 3, 4, 5, 6, 8, 9, 89, 91, 253, 418, 427, 448, 453, 465, 467, 471, 482, 484, 486, 488, 489, 490, 501, 503, 505, 506, 507, 517, 519, 521, 522, 523, 533, 537, 548, 550, 554, 565, 567, 571, 582, 584, 588, 600, 602, 606, 617, 619, 623, 634, 638, 648, 649, 653, 664, 666, 668, 670, 671, 672, 682, 684, 686, 687, 688, 698, 713, 717, 727, 728, 732, 743, 747, 757, 760, 770, 771, 773, 775, 776, 777, 787, 789, 791, 792, 793, 806, 816, 830, 834, 851, 855, 865, 868, 872, 883, 885, 889, 892, 893], "covari": [2, 3, 4, 14, 15, 25, 29, 30, 40, 44, 45, 55, 59, 60, 70, 74, 75, 85, 91, 230, 258, 259, 263, 264, 266, 268, 269, 271, 315, 348, 349, 350, 351, 352, 362, 363, 364, 365, 366, 368, 371, 396, 398, 402, 414, 415, 444, 485, 488, 502, 505, 518, 521, 667, 670, 683, 686, 772, 775, 788, 791, 841, 885, 889, 890, 892, 893], "estim": [2, 4, 5, 8, 9, 10, 14, 15, 25, 29, 30, 40, 44, 45, 55, 59, 60, 70, 74, 75, 85, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 113, 114, 115, 116, 118, 119, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 137, 138, 139, 140, 142, 143, 147, 148, 149, 150, 152, 153, 157, 158, 159, 160, 162, 163, 167, 168, 169, 170, 172, 173, 177, 178, 179, 180, 182, 183, 187, 188, 189, 190, 192, 193, 197, 198, 199, 200, 202, 203, 207, 208, 209, 210, 212, 213, 217, 218, 219, 220, 222, 223, 227, 228, 229, 230, 244, 253, 256, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 279, 287, 292, 300, 311, 325, 328, 330, 339, 348, 349, 350, 351, 352, 353, 356, 360, 362, 363, 364, 365, 368, 371, 372, 375, 379, 382, 392, 396, 398, 399, 402, 413, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 427, 428, 429, 432, 433, 437, 439, 441, 444, 446, 447, 451, 453, 454, 465, 471, 482, 484, 488, 490, 501, 505, 507, 517, 521, 523, 537, 548, 554, 565, 571, 582, 588, 600, 606, 617, 623, 634, 648, 653, 664, 666, 670, 672, 682, 686, 688, 713, 727, 732, 743, 757, 770, 771, 775, 777, 787, 791, 793, 803, 805, 806, 807, 810, 827, 829, 832, 833, 834, 835, 838, 848, 865, 872, 883, 885, 887, 889, 891, 892, 893, 895], "semiparametr": [2, 4], "parametr": [2, 14, 15, 25, 29, 30, 40, 44, 45, 55, 59, 60, 70, 74, 75, 85, 432], "independ": [2, 3, 7, 91, 418, 889], "ident": [2, 4, 14, 29, 44, 59, 74, 253, 257, 271, 414, 418, 431, 437, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 891, 892, 893], "distribut": [2, 4, 5, 8, 9, 10, 89, 90, 91, 233, 256, 259, 267, 271, 414, 418, 421, 422, 423, 430, 432, 433, 435, 437, 438, 439, 440, 489, 496, 506, 512, 522, 528, 637, 639, 640, 641, 642, 643, 644, 645, 646, 647, 671, 677, 687, 693, 716, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 746, 748, 749, 750, 751, 752, 753, 754, 755, 756, 759, 761, 762, 763, 764, 765, 766, 767, 768, 769, 776, 782, 792, 885, 888, 889, 890, 891, 893], "i": [2, 7, 10, 252, 253, 265, 362, 392, 414, 418, 419, 420, 421, 422, 425, 427, 429, 431, 432, 434, 645, 647, 724, 726, 754, 756, 767, 769, 862, 864, 889, 890, 891, 892, 893], "time": [2, 3, 4, 10, 91, 253, 256, 257, 258, 259, 260, 261, 270, 271, 411, 413, 414, 415, 418, 490, 507, 523, 672, 688, 777, 793, 805, 806, 807, 829, 834, 835, 867, 885, 889, 890, 892, 893, 895], "background": [2, 254, 888], "refer": [2, 10, 232, 233, 234, 254, 256, 257, 258, 259, 260, 261, 263, 265, 268, 271, 434, 437, 644, 723, 753, 766, 861, 888], "code": [3, 91, 253, 414, 415, 418, 890, 891, 892], "requir": [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 89, 91, 233, 234, 253, 256, 260, 414, 415, 418, 455, 459, 472, 476, 490, 496, 507, 512, 523, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 654, 658, 672, 677, 688, 693, 703, 707, 733, 737, 777, 793, 806, 834, 873, 877, 890, 891, 892], "run": [3, 14, 29, 44, 59, 74, 91, 95, 126, 129, 230, 247, 253, 257, 258, 259, 261, 263, 264, 266, 268, 269, 271, 274, 287, 300, 311, 325, 339, 348, 352, 356, 362, 371, 375, 396, 398, 402, 414, 415, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 807, 834, 835, 873, 889, 890, 891, 892, 893], "ipython": [3, 91, 253, 414, 415, 890, 891, 892], "notebook": [3, 91, 253, 414, 415, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 890, 891, 892], "matplotlib": [3, 253, 389, 405, 414, 415, 889, 890, 891, 892, 893], "inlin": [3, 91, 253, 414, 415, 889, 890, 891, 892, 893], "import": [3, 4, 5, 6, 7, 8, 9, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 88, 89, 91, 253, 256, 257, 258, 259, 260, 411, 414, 415, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 436, 439, 490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 777, 782, 793, 807, 813, 835, 843, 885, 886, 889, 890, 891, 892, 893], "pyplot": [3, 253, 414, 415, 889, 890, 891, 892, 893], "plt": [3, 253, 389, 405, 414, 415, 889, 890, 891, 892, 893], "seaborn": [3, 87, 253, 414, 415, 889, 890, 891, 892, 893], "set_styl": [3, 253, 414, 415, 889, 890, 891, 892, 893], "darkgrid": [3, 253, 414, 415, 889, 890, 891, 892, 893], "rc": [3, 253, 414, 415, 889, 890, 891, 892, 893], "figur": [3, 253, 389, 405, 414, 415, 807, 813, 835, 843, 889, 890, 891, 892, 893], "figsiz": [3, 253, 414, 415, 889, 890, 891, 892, 893], "16": [3, 253, 414, 415, 885, 889, 890, 891, 892, 893], "6": [3, 4, 102, 253, 414, 415, 432, 885, 889, 890, 891, 892, 893], "savefig": [3, 253, 414, 415, 889, 890, 891, 892, 893], "dpi": [3, 253, 414, 415, 889, 890, 891, 892, 893], "90": [3, 253, 414, 415, 889, 890, 891, 892, 893], "font": [3, 253, 414, 415, 889, 890, 891, 892, 893], "famili": [3, 234, 253, 414, 415, 889, 890, 891, 892, 893], "san": [3, 253, 414, 415, 889, 890, 891, 892, 893], "serif": [3, 253, 414, 415, 889, 890, 891, 892, 893], "size": [3, 4, 5, 8, 9, 10, 14, 29, 44, 59, 74, 86, 88, 91, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 232, 234, 238, 252, 253, 254, 256, 257, 258, 259, 261, 267, 414, 415, 452, 470, 490, 507, 523, 536, 553, 570, 587, 605, 622, 647, 652, 672, 688, 701, 726, 727, 731, 756, 769, 777, 793, 806, 830, 834, 864, 865, 871, 890, 891, 892, 893, 894], "14": [3, 88, 253, 414, 415, 436, 885, 889, 890, 891, 892, 893], "measur": [3, 253, 414, 488, 505, 521, 670, 686, 775, 791], "return": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 88, 89, 91, 95, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 247, 248, 249, 251, 252, 256, 257, 258, 259, 260, 261, 262, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 415, 418, 421, 422, 423, 432, 433, 439, 440, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 796, 797, 798, 799, 800, 801, 803, 805, 806, 807, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 829, 830, 834, 835, 840, 843, 851, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 887, 889, 891, 892, 893, 894], "per": [3, 261, 866], "unit": [3, 230, 256, 257, 258, 259, 260, 261, 270, 271, 280, 293, 304, 316, 331, 343, 411, 414, 428, 749, 762, 890, 892, 893], "risk": [3, 888], "show": [3, 12, 27, 42, 57, 72, 411, 414, 889, 890, 891, 892, 893], "how": [3, 87, 414, 418, 446, 893], "varianc": [3, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 89, 91, 115, 125, 139, 149, 159, 169, 179, 189, 199, 209, 219, 229, 233, 234, 259, 260, 264, 266, 271, 274, 287, 300, 311, 324, 325, 328, 330, 335, 339, 352, 356, 362, 371, 375, 413, 414, 418, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 434, 436, 442, 443, 444, 447, 452, 455, 459, 460, 462, 463, 465, 470, 472, 476, 477, 479, 480, 482, 488, 490, 491, 505, 507, 521, 523, 536, 538, 542, 543, 545, 546, 548, 553, 555, 559, 560, 562, 563, 565, 570, 572, 576, 577, 579, 580, 582, 587, 589, 593, 594, 596, 598, 600, 605, 607, 611, 612, 614, 615, 617, 622, 624, 628, 629, 631, 632, 634, 640, 652, 654, 658, 659, 661, 662, 664, 670, 672, 686, 688, 701, 703, 707, 708, 710, 711, 713, 719, 731, 733, 737, 738, 740, 741, 743, 749, 762, 775, 777, 791, 793, 805, 806, 807, 813, 818, 822, 829, 834, 835, 843, 857, 867, 871, 873, 877, 878, 880, 881, 883, 886, 888, 889, 891, 892, 893], "long": [3, 91, 95, 126, 230, 256, 258, 259, 260, 263, 264, 266, 268, 269, 271, 274, 287, 300, 311, 325, 328, 335, 339, 348, 352, 362, 371, 396, 398, 402, 414, 415, 436, 889], "u": [3, 4, 271, 414], "s": [3, 4, 5, 8, 10, 17, 21, 22, 23, 32, 36, 37, 38, 47, 51, 52, 53, 62, 66, 67, 68, 77, 81, 82, 83, 87, 88, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 113, 123, 137, 147, 157, 167, 177, 187, 197, 207, 217, 227, 239, 240, 246, 249, 250, 253, 256, 257, 259, 267, 270, 271, 348, 362, 396, 414, 415, 418, 437, 438, 488, 505, 521, 670, 686, 749, 762, 775, 791, 866, 885, 890, 891, 894], "equiti": 3, "2": [3, 4, 5, 6, 8, 9, 10, 11, 14, 26, 29, 41, 44, 48, 56, 59, 71, 74, 87, 98, 99, 101, 102, 104, 231, 232, 233, 253, 256, 257, 258, 260, 265, 267, 268, 269, 271, 356, 375, 414, 415, 418, 420, 421, 425, 426, 427, 429, 431, 432, 433, 434, 436, 455, 465, 472, 482, 484, 490, 496, 501, 507, 512, 517, 523, 538, 548, 555, 565, 572, 582, 589, 600, 607, 617, 624, 634, 640, 654, 664, 666, 672, 677, 682, 688, 693, 703, 713, 719, 733, 743, 749, 762, 771, 777, 787, 793, 802, 804, 806, 807, 826, 828, 834, 835, 867, 873, 883, 885, 886, 889, 890, 891, 892, 893], "arch": [3, 4, 87, 88, 89, 91, 230, 253, 411, 414, 415, 417, 418, 888, 889, 890, 891, 893, 894], "frenchdata": [3, 415], "np": [3, 4, 5, 6, 8, 9, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 88, 89, 253, 256, 257, 258, 259, 260, 414, 415, 421, 422, 423, 430, 432, 433, 435, 437, 438, 439, 496, 512, 528, 677, 693, 782, 885, 889, 890, 891, 892, 893], "pd": [3, 4, 10, 87, 88, 253, 415, 490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 777, 782, 793, 798, 805, 807, 814, 815, 829, 835, 845, 850, 889, 891, 892, 893], "ff": [3, 415], "load": [3, 256, 257, 258, 259, 414, 415, 421, 453, 471, 486, 503, 519, 537, 554, 571, 588, 606, 623, 638, 653, 668, 684, 717, 732, 747, 760, 773, 789, 855, 872, 890, 891, 892, 893], "set": [3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 19, 20, 22, 23, 26, 29, 31, 34, 35, 37, 38, 41, 44, 46, 49, 50, 52, 53, 56, 59, 61, 64, 65, 67, 68, 71, 74, 76, 79, 80, 82, 83, 86, 91, 231, 232, 235, 241, 247, 248, 254, 256, 257, 258, 259, 260, 261, 266, 267, 269, 270, 271, 274, 275, 282, 287, 288, 295, 300, 306, 311, 318, 319, 324, 325, 328, 330, 333, 339, 345, 348, 362, 367, 387, 396, 403, 411, 414, 418, 421, 422, 423, 426, 428, 430, 432, 433, 435, 437, 438, 439, 440, 487, 488, 490, 496, 498, 504, 505, 507, 512, 514, 520, 521, 523, 530, 669, 670, 672, 677, 679, 685, 686, 688, 693, 695, 774, 775, 777, 784, 790, 791, 793, 800, 806, 807, 834, 835, 891, 892, 893], "fama": 3, "french": [3, 415], "factor": [3, 253], "excess": [3, 415], "market": [3, 260, 415, 891, 892], "3": [3, 4, 10, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 87, 88, 89, 98, 102, 230, 253, 256, 258, 411, 414, 415, 418, 419, 437, 490, 496, 507, 512, 523, 640, 644, 672, 677, 688, 693, 723, 749, 753, 766, 777, 793, 806, 807, 834, 835, 861, 885, 886, 889, 890, 891, 892, 893], "excess_market": [3, 415], "iloc": [3, 253, 415, 889, 891, 893], "0": [3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 87, 88, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 122, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 232, 234, 241, 243, 253, 256, 257, 258, 259, 260, 261, 263, 268, 269, 271, 348, 362, 396, 411, 414, 415, 418, 419, 421, 422, 425, 426, 427, 429, 430, 432, 434, 435, 437, 438, 443, 444, 449, 453, 465, 468, 471, 482, 486, 488, 490, 496, 503, 505, 507, 512, 519, 521, 523, 528, 534, 537, 548, 551, 554, 565, 568, 571, 582, 585, 588, 600, 603, 606, 617, 620, 623, 634, 638, 644, 645, 646, 650, 653, 664, 668, 670, 672, 677, 684, 686, 688, 693, 699, 702, 713, 717, 723, 724, 725, 729, 732, 743, 747, 753, 754, 755, 760, 766, 767, 768, 773, 775, 777, 782, 789, 791, 793, 807, 813, 821, 830, 835, 843, 848, 852, 855, 861, 862, 863, 867, 869, 872, 883, 885, 889, 890, 891, 892, 893], "print": [3, 253, 256, 257, 258, 259, 260, 411, 415, 418, 432, 488, 505, 521, 670, 686, 775, 791, 885, 889, 890, 891, 892, 893], "describ": [3, 10, 256, 415, 418, 421, 422, 423, 432, 433, 439, 444], "mkt": [3, 415], "rf": [3, 415], "smb": [3, 415], "hml": [3, 415], "count": [3, 415, 885, 890, 891, 892], "1109": [3, 415], "000000": [3, 414, 415, 891], "mean": [3, 4, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 87, 88, 91, 253, 260, 414, 415, 418, 421, 423, 428, 439, 440, 442, 447, 452, 470, 489, 490, 491, 494, 496, 497, 506, 507, 510, 512, 513, 522, 523, 526, 528, 529, 536, 553, 570, 587, 605, 622, 652, 671, 672, 675, 677, 678, 687, 688, 691, 693, 694, 701, 731, 776, 777, 780, 782, 783, 792, 793, 796, 799, 806, 807, 834, 835, 871, 885, 888, 889, 891, 893, 895], "659946": [3, 415], "206555": [3, 415], "368864": [3, 415], "274220": [3, 415], "std": [3, 360, 379, 415, 885, 889, 890, 892, 893], "5": [3, 4, 5, 6, 8, 9, 10, 102, 231, 233, 253, 383, 400, 411, 414, 415, 418, 420, 422, 425, 430, 431, 432, 435, 437, 438, 490, 496, 507, 512, 523, 646, 648, 672, 677, 688, 693, 702, 725, 755, 768, 777, 793, 807, 835, 863, 885, 889, 890, 891, 892, 893], "327524": [3, 415], "191132": [3, 415], "482352": [3, 415], "253377": [3, 415], "min": [3, 4, 10, 87, 88, 414, 415, 891, 892], "29": [3, 91, 415, 418, 891], "130000": [3, 415], "870000": [3, 415], "13": [3, 230, 253, 411, 414, 415, 889, 891, 892], "280000": [3, 415], "060000": [3, 415], "25": [3, 415, 427, 429, 890, 891, 892], "970000": [3, 415], "560000": [3, 415], "320000": [3, 415], "030000": [3, 415], "50": [3, 253, 415, 890, 892], "020000": [3, 415], "070000": [3, 415], "140000": [3, 415], "230000": [3, 415], "75": [3, 259, 415, 891, 893], "610000": [3, 415], "730000": [3, 415], "740000": [3, 415], "430000": [3, 415], "max": [3, 4, 10, 87, 88, 91, 232, 414, 415, 496, 512, 677, 693, 889, 892], "850000": [3, 415], "36": [3, 414, 415, 890], "700000": [3, 415], "35": [3, 415, 437, 890, 891, 892], "460000": [3, 415], "350000": [3, 415], "next": [3, 24, 39, 54, 69, 84, 253, 432, 889, 891, 892, 893], "step": [3, 12, 27, 42, 57, 72, 89, 91, 257, 413, 414, 418, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 889, 890, 891], "comput": [3, 4, 10, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 87, 88, 89, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 233, 234, 241, 243, 247, 253, 256, 257, 258, 259, 260, 261, 271, 276, 289, 301, 312, 326, 340, 415, 418, 444, 452, 455, 461, 463, 465, 470, 472, 478, 480, 482, 485, 488, 490, 495, 502, 505, 507, 511, 518, 521, 523, 527, 536, 538, 544, 546, 548, 553, 555, 561, 563, 565, 570, 572, 578, 580, 582, 587, 589, 595, 598, 600, 605, 607, 613, 615, 617, 622, 624, 630, 632, 634, 636, 640, 648, 652, 654, 660, 662, 664, 667, 670, 672, 676, 683, 686, 688, 692, 701, 703, 709, 711, 713, 715, 719, 727, 731, 733, 739, 741, 743, 745, 749, 757, 758, 762, 770, 772, 775, 777, 781, 788, 791, 793, 797, 805, 806, 807, 829, 834, 835, 853, 865, 866, 871, 873, 879, 881, 883, 889, 891, 892, 893], "also": [3, 89, 90, 91, 233, 252, 253, 258, 261, 415, 889, 891, 892], "annual": [3, 4, 87, 813, 843, 892, 893], "standard": [3, 4, 14, 29, 44, 59, 74, 86, 87, 88, 91, 256, 264, 266, 359, 378, 415, 418, 419, 425, 427, 429, 432, 435, 437, 438, 441, 444, 465, 482, 485, 502, 518, 548, 565, 582, 600, 617, 634, 648, 664, 667, 683, 713, 719, 727, 743, 749, 757, 762, 770, 772, 788, 803, 813, 815, 827, 843, 849, 850, 865, 883, 885, 889, 891, 892, 893], "deviat": [3, 4, 87, 88, 253, 803, 827, 889, 893], "allow": [3, 4, 7, 14, 15, 25, 29, 30, 40, 44, 45, 55, 59, 60, 70, 74, 75, 85, 91, 252, 253, 254, 256, 260, 415, 428, 447, 489, 506, 522, 671, 687, 776, 792, 886, 889, 892, 893, 895], "matrix": [3, 258, 259, 263, 268, 315, 414, 415, 444, 488, 505, 521, 670, 686, 775, 791], "4": [3, 10, 89, 109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223, 230, 231, 233, 234, 253, 256, 258, 259, 271, 414, 415, 418, 419, 436, 490, 496, 507, 512, 523, 672, 677, 688, 693, 749, 777, 793, 806, 807, 834, 835, 885, 889, 890, 891, 892, 893], "def": [3, 4, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 87, 88, 89, 889, 893], "sharpe_ratio": [3, 4, 87, 88], "x": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 253, 263, 265, 268, 270, 271, 421, 422, 423, 432, 433, 439, 490, 496, 507, 512, 523, 528, 640, 644, 672, 677, 688, 693, 719, 723, 749, 753, 762, 766, 777, 782, 793, 798, 806, 834, 861, 885, 891, 893], "mu": [3, 4, 88, 418, 421, 422, 423, 432, 433, 528, 885, 891, 892, 893], "sigma": [3, 4, 10, 88, 263, 265, 271, 356, 362, 375, 418, 421, 488, 505, 521, 640, 670, 686, 719, 749, 762, 775, 791, 885, 892], "12": [3, 4, 9, 87, 88, 253, 256, 257, 258, 259, 260, 263, 268, 414, 415, 418, 813, 843, 885, 889, 890, 891, 892, 893], "sqrt": [3, 4, 10, 87, 88, 89, 232, 233, 234, 271, 418, 425, 436, 749, 891, 893], "var": [3, 14, 15, 29, 30, 44, 45, 59, 60, 74, 75, 87, 88, 271, 421, 491], "valu": [3, 5, 6, 8, 9, 10, 11, 13, 14, 16, 21, 23, 26, 28, 29, 31, 36, 38, 41, 43, 44, 46, 51, 53, 56, 58, 59, 61, 66, 68, 71, 73, 74, 76, 81, 83, 89, 91, 107, 111, 117, 121, 131, 135, 141, 145, 151, 155, 161, 165, 171, 175, 181, 185, 191, 195, 201, 205, 211, 215, 221, 225, 232, 233, 234, 238, 240, 241, 243, 244, 246, 247, 250, 252, 253, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 269, 270, 271, 273, 278, 281, 286, 291, 294, 299, 303, 305, 310, 314, 317, 318, 323, 329, 332, 338, 342, 344, 354, 373, 383, 390, 392, 394, 400, 406, 409, 411, 414, 415, 418, 419, 421, 422, 423, 431, 432, 433, 439, 441, 442, 443, 444, 446, 448, 449, 451, 452, 453, 454, 455, 459, 461, 463, 465, 467, 468, 470, 471, 472, 476, 478, 480, 482, 485, 488, 490, 495, 496, 497, 499, 502, 505, 507, 511, 512, 513, 515, 518, 521, 523, 527, 528, 529, 531, 533, 534, 536, 537, 538, 542, 544, 546, 548, 550, 551, 553, 554, 555, 559, 561, 563, 565, 567, 568, 570, 571, 572, 576, 578, 580, 582, 584, 585, 587, 588, 589, 593, 595, 598, 600, 602, 603, 605, 606, 607, 611, 613, 615, 617, 619, 620, 622, 623, 624, 628, 630, 632, 634, 637, 638, 645, 648, 649, 650, 652, 653, 654, 658, 660, 662, 664, 667, 670, 672, 676, 677, 678, 680, 683, 686, 688, 692, 693, 694, 696, 698, 699, 701, 703, 707, 709, 711, 713, 716, 717, 724, 727, 728, 729, 731, 732, 733, 737, 739, 741, 743, 746, 747, 754, 757, 759, 760, 767, 770, 772, 775, 777, 781, 782, 783, 785, 788, 791, 793, 797, 799, 805, 806, 813, 817, 818, 820, 823, 825, 829, 834, 843, 844, 854, 855, 862, 865, 866, 867, 868, 869, 871, 872, 873, 877, 879, 881, 883, 885, 888, 890, 892, 893, 894], "squeez": [3, 411], "index": [3, 4, 87, 88, 238, 253, 414, 415, 418, 419, 420, 424, 425, 426, 427, 428, 429, 431, 432, 434, 436, 442, 443, 444, 447, 455, 460, 462, 463, 472, 477, 479, 480, 490, 507, 523, 538, 543, 545, 546, 555, 560, 562, 563, 572, 577, 579, 580, 589, 594, 596, 598, 607, 612, 614, 615, 624, 629, 631, 632, 654, 659, 661, 662, 672, 688, 703, 708, 710, 711, 733, 738, 740, 741, 777, 793, 806, 807, 834, 835, 867, 873, 878, 880, 881, 889, 890, 891, 892, 893], "sr": [3, 4, 87, 88], "can": [3, 4, 5, 6, 7, 8, 9, 87, 88, 89, 91, 233, 234, 253, 261, 411, 414, 415, 418, 427, 429, 446, 452, 470, 490, 507, 523, 536, 553, 570, 587, 605, 622, 652, 672, 688, 701, 731, 777, 793, 806, 807, 834, 835, 866, 871, 885, 888, 889, 890, 891, 892, 893, 895], "call": [3, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 89, 91, 242, 252, 418, 444, 866, 867, 890, 891, 892, 895], "full": [3, 379], "param": [3, 4, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 88, 89, 253, 264, 266, 418, 441, 444, 485, 489, 490, 495, 496, 502, 506, 507, 511, 512, 518, 522, 523, 527, 528, 667, 671, 672, 676, 677, 683, 687, 688, 692, 693, 772, 776, 777, 781, 782, 788, 792, 793, 797, 798, 806, 807, 834, 835, 889, 891, 892], "7": [3, 8, 253, 258, 261, 414, 415, 885, 889, 890, 891, 892, 893], "919351": 3, "18": [3, 230, 415, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 891, 892], "455084": 3, "429115": 3, "dtype": [3, 88, 253, 414, 889, 891, 892, 893], "float64": [3, 88, 253, 414, 889, 891, 892, 893], "accept": [3, 89, 91, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889], "keyword": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 25, 26, 27, 28, 29, 30, 40, 41, 42, 43, 44, 45, 48, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 74, 75, 85, 87, 88, 89, 91, 891], "argument": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 25, 26, 27, 28, 29, 30, 40, 41, 42, 43, 44, 45, 48, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 74, 75, 85, 87, 88, 89, 91, 232, 233, 234, 430, 435, 437, 438, 647, 726, 756, 769, 864, 891, 892], "seed": [3, 5, 6, 7, 8, 9, 13, 16, 20, 28, 31, 35, 43, 46, 50, 58, 61, 65, 73, 76, 80, 91, 232, 233, 234, 253, 430, 435, 437, 438, 445, 893], "randomst": [3, 5, 6, 7, 8, 9, 16, 19, 23, 31, 34, 38, 46, 49, 53, 61, 64, 68, 76, 79, 83, 89, 91, 232, 233, 234, 430, 432, 435, 437, 438, 445, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 639, 646, 654, 672, 688, 703, 718, 725, 733, 748, 755, 761, 768, 777, 793, 806, 834, 856, 863, 873, 889, 892, 893], "int": [3, 5, 6, 8, 9, 11, 12, 14, 15, 21, 25, 26, 27, 29, 30, 36, 40, 41, 42, 44, 45, 51, 55, 56, 57, 59, 60, 66, 70, 71, 72, 74, 75, 81, 85, 94, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 240, 246, 250, 256, 257, 258, 259, 260, 261, 265, 266, 267, 270, 271, 274, 275, 276, 287, 288, 289, 300, 301, 311, 312, 325, 326, 339, 340, 348, 362, 369, 370, 384, 385, 386, 396, 401, 419, 420, 421, 422, 423, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 444, 455, 457, 459, 460, 462, 463, 472, 474, 476, 477, 479, 480, 488, 489, 490, 491, 493, 496, 505, 506, 507, 509, 512, 521, 522, 523, 525, 528, 538, 540, 542, 543, 545, 546, 555, 557, 559, 560, 562, 563, 572, 574, 576, 577, 579, 580, 589, 591, 593, 594, 596, 597, 598, 607, 609, 611, 612, 614, 615, 624, 626, 628, 629, 631, 632, 641, 644, 647, 654, 656, 658, 659, 661, 662, 670, 671, 672, 674, 677, 686, 687, 688, 690, 693, 703, 705, 707, 708, 710, 711, 720, 723, 726, 733, 735, 737, 738, 740, 741, 750, 753, 756, 763, 766, 769, 775, 776, 777, 779, 782, 791, 792, 793, 795, 803, 806, 807, 810, 811, 827, 831, 832, 833, 834, 835, 838, 839, 858, 861, 864, 866, 867, 873, 875, 877, 878, 880, 881, 885, 889, 890, 892, 893, 894], "pass": [3, 5, 6, 7, 8, 9, 12, 13, 15, 25, 27, 28, 30, 40, 42, 43, 45, 55, 57, 58, 60, 70, 72, 73, 75, 85, 87, 89, 91, 430, 435, 437, 438, 488, 490, 505, 507, 521, 523, 670, 672, 686, 688, 775, 777, 791, 793, 806, 834, 889, 891, 892], "random": [3, 5, 6, 7, 8, 9, 11, 12, 14, 15, 16, 17, 19, 21, 22, 25, 26, 27, 29, 30, 31, 32, 34, 36, 37, 40, 41, 42, 44, 45, 46, 47, 49, 51, 52, 55, 56, 57, 59, 60, 61, 62, 64, 66, 67, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 85, 87, 89, 91, 240, 246, 250, 253, 260, 415, 418, 422, 423, 430, 432, 433, 435, 437, 438, 439, 455, 459, 472, 476, 490, 496, 507, 512, 523, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 654, 658, 672, 677, 688, 693, 703, 707, 733, 737, 777, 793, 806, 834, 873, 877, 889, 892], "default_rng": [3, 5, 6, 8, 9, 91, 232, 233, 234, 253, 430, 435, 437, 438], "creat": [3, 5, 6, 7, 8, 9, 24, 39, 54, 69, 84, 91, 232, 233, 234, 892], "core": [3, 418, 892], "pseudo": [3, 16, 31, 46, 61, 76, 89], "across": [3, 7, 14, 29, 44, 59, 74, 253, 415, 418], "multipl": [3, 14, 29, 44, 59, 74, 87, 91, 230, 231, 234, 260, 413, 415, 452, 470, 536, 553, 570, 587, 605, 622, 652, 701, 731, 871], "chosen": [3, 4, 10, 232, 233, 234, 265], "must": [3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 24, 25, 26, 29, 30, 39, 40, 41, 44, 45, 54, 55, 56, 59, 60, 69, 70, 71, 74, 75, 84, 85, 89, 94, 98, 99, 100, 101, 102, 103, 104, 105, 242, 260, 263, 265, 268, 417, 419, 421, 446, 455, 472, 487, 489, 490, 498, 504, 506, 507, 514, 520, 522, 523, 530, 538, 555, 572, 589, 607, 624, 654, 669, 671, 672, 679, 685, 687, 688, 695, 703, 733, 774, 776, 777, 784, 790, 792, 793, 800, 806, 807, 834, 835, 873, 886, 889, 895], "appropri": [3, 4, 7, 14, 29, 44, 59, 74, 86, 232, 233, 234, 449, 468, 534, 551, 568, 585, 603, 620, 650, 699, 729, 869], "squar": [3, 4, 253, 362, 415, 418, 421, 433, 444, 465, 482, 490, 507, 523, 548, 565, 582, 600, 617, 634, 664, 672, 688, 713, 743, 777, 793, 805, 806, 807, 829, 834, 835, 846, 847, 883, 885, 889, 890, 892, 893], "ar": [3, 4, 7, 10, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 118, 132, 142, 152, 162, 172, 182, 192, 202, 212, 222, 230, 232, 233, 234, 236, 237, 241, 252, 253, 254, 256, 257, 259, 260, 261, 263, 265, 268, 270, 271, 315, 318, 348, 362, 396, 411, 413, 414, 415, 418, 419, 421, 422, 425, 427, 429, 431, 432, 436, 440, 444, 446, 447, 453, 455, 465, 471, 472, 482, 488, 489, 490, 496, 505, 506, 507, 512, 521, 522, 523, 537, 538, 548, 554, 555, 565, 571, 572, 582, 588, 589, 600, 606, 607, 617, 623, 624, 634, 640, 653, 654, 664, 670, 671, 672, 677, 686, 687, 688, 693, 702, 703, 713, 719, 732, 733, 743, 749, 762, 775, 776, 777, 782, 791, 792, 793, 805, 806, 807, 813, 829, 834, 835, 843, 852, 857, 872, 873, 883, 885, 886, 887, 889, 890, 891, 892, 893, 895], "serial": [3, 4, 86, 259, 260, 261], "correl": [3, 4, 253, 259, 260, 261], "so": [3, 7, 12, 15, 25, 27, 30, 40, 42, 45, 55, 57, 60, 70, 72, 75, 85, 89, 90, 91, 252, 253, 263, 268, 271, 414, 415, 418, 421, 428, 432, 434, 490, 507, 523, 672, 688, 777, 793, 805, 806, 829, 834, 889, 890, 891, 892, 893, 895], "initi": [3, 5, 6, 7, 8, 9, 11, 20, 26, 35, 41, 50, 56, 65, 71, 80, 89, 91, 239, 241, 245, 249, 257, 271, 415, 452, 455, 459, 463, 470, 472, 476, 480, 496, 512, 528, 536, 538, 542, 546, 553, 555, 559, 563, 570, 572, 576, 580, 587, 589, 593, 598, 605, 607, 611, 615, 622, 624, 628, 632, 652, 654, 658, 662, 677, 693, 701, 703, 707, 711, 731, 733, 737, 741, 782, 866, 871, 873, 877, 881, 885, 889, 891, 892], "ani": [3, 5, 6, 7, 8, 9, 12, 17, 23, 27, 32, 38, 42, 47, 53, 57, 62, 68, 72, 77, 83, 253, 259, 265, 271, 348, 356, 362, 375, 396, 411, 415, 418, 440, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 891, 892, 893], "specif": [3, 89, 91, 256, 257, 258, 259, 260, 261, 265, 267, 271, 273, 286, 299, 310, 315, 323, 338, 418, 446, 488, 489, 505, 506, 521, 522, 670, 671, 686, 687, 775, 776, 791, 792, 885, 886, 891, 893], "here": [3, 4, 253, 414, 415, 889, 893], "averag": [3, 9, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 88, 253, 418, 426, 432, 436, 892, 893], "window": [3, 10, 91, 232, 233, 234], "stationari": [3, 10, 88, 90, 232, 233, 234, 258, 411, 413, 414, 415], "input": [3, 4, 5, 6, 7, 8, 9, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 87, 89, 91, 253, 411, 418, 441, 444, 455, 459, 472, 476, 490, 507, 523, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 654, 658, 672, 688, 703, 707, 733, 737, 777, 793, 805, 806, 807, 829, 834, 835, 857, 873, 877, 885, 891, 892], "from": [3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 88, 89, 91, 95, 232, 236, 252, 253, 256, 257, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 279, 292, 348, 362, 371, 391, 392, 396, 407, 411, 414, 415, 417, 418, 419, 420, 421, 422, 423, 425, 426, 427, 429, 431, 432, 433, 434, 436, 439, 441, 442, 443, 444, 446, 447, 455, 459, 472, 476, 489, 490, 496, 497, 506, 507, 512, 513, 522, 523, 528, 529, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 644, 647, 654, 658, 671, 672, 677, 678, 687, 688, 693, 694, 703, 707, 723, 726, 733, 737, 753, 756, 766, 769, 776, 777, 782, 783, 792, 793, 799, 806, 807, 813, 816, 834, 835, 840, 843, 851, 861, 864, 873, 877, 885, 886, 889, 890, 891, 893, 895], "stationarybootstrap": [3, 5, 8, 10, 88, 90, 91], "entropi": [3, 5, 6, 8, 9, 430, 435, 437, 438], "org": [3, 230, 256, 259], "877788388": 3, "418255226": 3, "989657335": 3, "69307515": 3, "bs": [3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 25, 26, 27, 28, 29, 30, 40, 41, 42, 43, 44, 45, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 74, 75, 85, 87, 88, 89, 893], "result": [3, 5, 6, 8, 9, 11, 14, 26, 29, 41, 44, 56, 59, 71, 74, 91, 256, 257, 259, 261, 266, 267, 270, 271, 279, 292, 315, 348, 362, 396, 411, 414, 415, 418, 421, 422, 423, 432, 433, 439, 441, 442, 444, 488, 489, 505, 506, 521, 522, 670, 671, 686, 687, 775, 776, 791, 792, 803, 816, 819, 827, 831, 840, 851, 885, 888, 889, 890, 891, 892, 893], "appli": [3, 87, 91, 262, 444, 449, 468, 488, 505, 521, 534, 551, 568, 585, 603, 620, 650, 670, 686, 699, 729, 775, 791, 848, 869], "2500": [3, 253], "column": [3, 10, 14, 29, 44, 59, 74, 87, 88, 95, 234, 236, 237, 238, 241, 247, 251, 253, 415, 418, 432, 452, 455, 463, 465, 470, 472, 480, 482, 490, 496, 507, 512, 523, 528, 536, 538, 546, 548, 553, 555, 563, 565, 570, 572, 580, 582, 587, 589, 598, 600, 605, 607, 615, 617, 622, 624, 632, 634, 652, 654, 662, 664, 672, 677, 688, 693, 701, 703, 711, 713, 731, 733, 741, 743, 777, 782, 793, 806, 834, 871, 873, 881, 883, 891, 892, 893], "fig": [3, 253, 414, 415, 490, 507, 523, 672, 688, 777, 793, 807, 813, 835, 843, 891, 892, 893], "hist": [3, 87], "bin": [3, 87], "40": [3, 253, 891], "cov": [3, 14, 29, 44, 59, 74, 88, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 264, 266], "1000": [3, 4, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 89, 91, 232, 233, 234, 253, 427, 455, 472, 490, 496, 507, 512, 523, 528, 538, 555, 572, 589, 607, 624, 654, 672, 677, 688, 693, 703, 733, 777, 782, 793, 806, 807, 834, 835, 873, 889, 892], "se": 3, "diag": [3, 4], "error": [3, 4, 14, 29, 44, 59, 74, 91, 234, 252, 253, 254, 259, 264, 266, 359, 360, 362, 378, 379, 415, 421, 422, 423, 430, 432, 433, 439, 440, 444, 485, 487, 490, 496, 502, 504, 507, 512, 518, 520, 523, 528, 640, 667, 669, 672, 677, 683, 685, 688, 693, 772, 774, 777, 782, 788, 790, 793, 805, 806, 829, 834, 849, 885, 889], "837196": 3, "638431": 3, "224722": 3, "019569": 3, "105762": 3, "014915": 3, "958876": 3, "737691": 3, "122126": 3, "8": [3, 88, 253, 259, 265, 268, 414, 415, 782, 885, 889, 890, 891, 892, 893], "ci": [3, 4, 14, 29, 44, 59, 74, 89, 830], "conf_int": [3, 4, 89, 91], "basic": [3, 14, 29, 44, 59, 74, 253, 415, 490, 507, 523, 528, 672, 688, 777, 782, 793, 806, 834, 885], "lower": [3, 4, 14, 29, 44, 59, 74, 91, 233, 241, 243, 244, 253, 415, 450, 452, 455, 463, 465, 469, 470, 472, 480, 482, 486, 503, 519, 535, 536, 538, 546, 548, 552, 553, 555, 563, 565, 569, 570, 572, 580, 582, 586, 587, 589, 598, 600, 604, 605, 607, 615, 617, 621, 622, 624, 632, 634, 636, 644, 651, 652, 654, 662, 664, 668, 684, 700, 701, 703, 711, 713, 715, 723, 730, 731, 733, 741, 743, 745, 753, 758, 766, 773, 789, 853, 861, 867, 870, 871, 873, 881, 883, 892], "upper": [3, 4, 14, 29, 44, 59, 74, 233, 241, 243, 244, 253, 256, 450, 452, 455, 463, 465, 469, 470, 472, 480, 482, 535, 536, 538, 546, 548, 552, 553, 555, 563, 565, 569, 570, 572, 580, 582, 586, 587, 589, 598, 600, 604, 605, 607, 615, 617, 621, 622, 624, 632, 634, 636, 644, 651, 652, 654, 662, 664, 700, 701, 703, 711, 713, 715, 723, 730, 731, 733, 741, 743, 745, 753, 758, 766, 853, 861, 867, 870, 871, 873, 881, 883], "367662": 3, "780547": 3, "166759": 3, "11": [3, 253, 263, 268, 271, 414, 415, 885, 889, 891, 892, 893], "958503": 3, "21": [3, 268, 271, 411, 415, 891], "735752": 3, "659350": 3, "altern": [3, 14, 29, 44, 59, 74, 88, 91, 93, 96, 97, 233, 234, 252, 256, 257, 258, 259, 260, 261, 267, 269, 272, 285, 298, 309, 322, 337, 381, 397, 411, 413, 414, 415, 432, 490, 495, 507, 511, 523, 527, 672, 676, 688, 692, 777, 781, 793, 797, 806, 807, 834, 835, 885, 889, 892, 894], "varieti": [3, 90], "reus": [3, 14, 29, 44, 59, 74], "true": [3, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 233, 234, 253, 260, 270, 348, 356, 362, 371, 375, 379, 396, 419, 421, 422, 423, 428, 432, 433, 434, 439, 485, 488, 502, 505, 518, 521, 640, 667, 670, 683, 686, 719, 749, 762, 772, 775, 788, 791, 857, 885, 886, 890, 891, 892], "previou": [3, 89, 415, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 890], "percentil": [3, 14, 29, 44, 59, 74, 89], "880198": 3, "15": [3, 259, 261, 414, 415, 889, 891, 892], "174416": 3, "198880": 3, "471040": 3, "22": [3, 263, 268, 271, 415, 422, 431, 432, 434, 490, 496, 507, 512, 523, 672, 677, 688, 693, 777, 793, 807, 835, 885, 889, 890, 891, 893], "129620": 3, "691471": 3, "optimal_block_length": [3, 5, 8, 9], "circular": [3, 8, 9, 10, 90, 232, 233, 234], "we": [3, 271, 414, 415, 889, 890, 891, 892], "sinc": [3, 4, 5, 6, 8, 9, 10, 89, 233, 234, 253, 414, 415, 418, 426, 430, 435, 436, 437, 438, 446, 488, 490, 505, 507, 521, 523, 646, 670, 672, 686, 688, 719, 725, 755, 768, 775, 777, 791, 793, 806, 834, 863, 889, 890, 892, 893], "depend": [3, 7, 10, 12, 27, 42, 57, 72, 86, 88, 91, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 243, 252, 258, 259, 415, 421, 422, 423, 432, 433, 439, 440, 441, 444, 496, 500, 512, 516, 528, 532, 677, 681, 693, 697, 727, 782, 786, 801, 865, 885, 889, 891], "autocorrel": [3, 10, 258, 259, 356, 362, 375, 415], "stronger": 3, "than": [3, 4, 10, 89, 91, 233, 241, 252, 253, 256, 257, 261, 271, 418, 421, 422, 423, 427, 429, 432, 433, 439, 648, 885, 891, 892, 893], "10": [3, 10, 87, 230, 253, 261, 383, 400, 411, 414, 415, 418, 432, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 885, 889, 891, 892, 893], "opt": [3, 10], "47": [3, 414], "766787": 3, "54": [3, 103, 258], "679322": 3, "repeat": [3, 91, 253, 889, 890], "analysi": [3, 230, 256, 259], "abov": [3, 89, 253, 256, 257, 258, 259, 271, 414, 893], "see": [3, 4, 5, 6, 7, 8, 9, 11, 14, 26, 29, 41, 44, 56, 59, 71, 74, 91, 232, 233, 234, 253, 258, 263, 265, 268, 271, 282, 295, 306, 319, 333, 345, 414, 446, 490, 507, 523, 644, 672, 688, 723, 753, 766, 777, 793, 806, 834, 861, 888, 889, 891, 892, 895], "extrem": 3, "appear": [3, 91, 256, 257, 258, 259, 263, 268, 413, 414, 415, 421, 892], "slightli": [3, 261, 271, 891], "more": [3, 4, 89, 91, 253, 256, 257, 261, 271, 418, 431, 644, 723, 753, 766, 861, 892, 893], "reiniti": 3, "rs": [3, 5, 7, 8, 9, 892], "loc": [3, 253, 891, 893], "second": [3, 5, 6, 7, 8, 9, 87, 89, 253], "make": [3, 4, 14, 29, 44, 59, 74, 87, 89, 253, 415, 418, 889, 891, 892, 893], "demo": 3, "admiss": 3, "binari": 3, "variabl": [3, 5, 6, 7, 8, 9, 86, 91, 253, 259, 263, 265, 268, 270, 271, 411, 414, 415, 421, 422, 423, 432, 433, 439, 440, 441, 444, 458, 475, 490, 494, 496, 500, 507, 510, 512, 516, 523, 526, 532, 541, 558, 575, 592, 610, 627, 657, 672, 675, 677, 681, 688, 691, 693, 697, 706, 736, 777, 780, 786, 793, 796, 801, 806, 834, 876, 885, 888, 890, 892, 893], "being": [3, 91, 241, 252, 270, 414, 418, 490, 507, 523, 672, 688, 777, 793, 806, 834], "admit": 3, "gre": 3, "score": [3, 362], "gpa": 3, "quartil": 3, "rank": [3, 91], "download": [3, 4, 415, 892], "internet": 3, "dropna": [3, 4, 87, 88, 418, 421, 885, 890, 891, 892, 893], "400": [3, 253], "00000": 3, "317500": 3, "587": 3, "389900": 3, "48500": 3, "466087": 3, "115": 3, "516536": 3, "380567": 3, "94446": 3, "220": [3, 253], "260000": 3, "520": 3, "580": 3, "395000": 3, "660": 3, "670000": 3, "800": [3, 890], "first": [3, 5, 6, 7, 8, 9, 10, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 87, 89, 253, 271, 411, 413, 414, 415, 418, 432, 444, 455, 472, 488, 489, 490, 505, 506, 507, 521, 522, 523, 538, 555, 572, 589, 607, 624, 654, 670, 671, 672, 686, 687, 688, 703, 733, 775, 776, 777, 791, 792, 793, 806, 807, 834, 835, 873, 889, 890, 891, 892, 893], "build": [3, 91, 885, 893], "regressor": [3, 89, 91, 348, 356, 362, 371, 375, 396, 414, 421, 422, 423, 432, 433, 439, 490, 495, 496, 499, 507, 511, 512, 515, 523, 527, 531, 672, 676, 677, 680, 688, 692, 693, 696, 777, 781, 785, 793, 797, 806, 834, 885, 892], "Then": 3, "api": [3, 253, 256, 257, 258, 259, 415], "sm": [3, 253, 256, 257, 258, 259, 415], "endog": 3, "exog": [3, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889], "const": [3, 414, 415, 889, 890, 892], "ones": 3, "shape": [3, 4, 89, 428, 432, 437, 441, 444, 453, 455, 471, 472, 490, 507, 523, 537, 538, 554, 555, 571, 572, 588, 589, 606, 607, 623, 624, 640, 643, 648, 653, 654, 672, 688, 703, 719, 722, 727, 732, 733, 749, 752, 757, 762, 765, 770, 777, 793, 806, 807, 834, 835, 857, 860, 865, 867, 872, 873, 889, 890, 893], "mod": [3, 432, 889, 890, 893], "disp": [3, 422, 488, 505, 521, 670, 686, 775, 791, 813, 843, 889, 890, 891, 892, 893], "003536": 3, "001643": 3, "454575": 3, "most": [3, 89, 411, 415, 418, 490, 507, 523, 672, 688, 777, 793, 806, 813, 834, 843, 885, 889, 892, 893], "implement": [3, 4, 10, 89, 232, 234, 256, 270, 415, 446, 890, 891, 893], "explicit": 3, "other": [3, 4, 89, 91, 252, 253, 271, 414, 415, 419, 426, 427, 429, 889, 892, 893, 894], "quantiti": [3, 414, 807, 835, 892], "These": [3, 89, 254, 271, 414, 415, 418, 465, 482, 548, 565, 582, 600, 617, 634, 664, 713, 743, 883, 889, 890, 891, 892, 893], "cannot": [3, 5, 6, 8, 9, 91, 256, 257, 258, 259, 414], "howev": [3, 892, 893], "simpl": [3, 4, 257, 259, 265, 414, 415, 432, 885, 889, 892], "written": [3, 91, 446], "take": [3, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 253, 437, 455, 459, 472, 476, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 647, 654, 658, 703, 707, 726, 733, 737, 756, 769, 864, 873, 877, 892], "probit_wrap": 3, "should": [3, 4, 12, 15, 25, 27, 30, 40, 42, 45, 55, 57, 60, 70, 72, 75, 85, 89, 94, 98, 99, 100, 101, 102, 103, 104, 105, 230, 232, 233, 234, 253, 256, 259, 265, 421, 422, 427, 428, 429, 432, 433, 440, 488, 505, 521, 670, 686, 775, 791, 813, 843, 886, 889, 890, 893], "iidbootstrap": [3, 4, 7, 11, 12, 13, 14, 15, 25, 41, 42, 43, 44, 45, 55, 56, 57, 58, 59, 60, 70, 71, 72, 73, 74, 75, 85, 86, 87, 89, 91], "397473": 3, "641971e": 3, "05": [3, 232, 234, 241, 243, 415, 418, 419, 782, 830, 889, 891, 892, 893], "102525": 3, "000066": 3, "467596e": 3, "07": [3, 496, 512, 528, 677, 693, 813, 843, 889, 891, 892, 893], "000058": 3, "815162e": 3, "039859": 3, "17": [3, 5, 414, 415, 889, 890, 891, 892, 893], "stat": [3, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 256, 257, 258, 259, 260, 261, 267, 269, 318, 411, 414, 892, 894], "630455": 3, "000668": 3, "199647": 3, "764077": 3, "457413": 3, "276894": 3, "214157": 3, "000360": 3, "005706": 3, "622607": 3, "002906": 3, "871725": 3, "start": [3, 4, 5, 87, 88, 90, 260, 411, 413, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 439, 444, 447, 448, 455, 461, 467, 472, 478, 488, 490, 497, 505, 507, 513, 521, 523, 529, 533, 538, 544, 550, 555, 561, 567, 572, 578, 584, 589, 595, 602, 607, 613, 619, 624, 630, 648, 649, 654, 660, 670, 672, 678, 686, 688, 694, 698, 703, 709, 727, 728, 733, 739, 757, 770, 775, 777, 783, 791, 793, 799, 806, 807, 832, 834, 835, 865, 868, 873, 879, 885, 886, 889, 891, 893], "save": [3, 253, 892], "find": [3, 253, 488, 505, 521, 670, 686, 775, 791, 893], "close": [3, 4, 13, 28, 43, 58, 73, 87, 88, 252, 256, 259, 414, 418, 421, 885, 890, 891, 892, 893], "origin": [3, 4, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 88, 89, 91, 253, 261, 418, 441, 442, 444, 490, 507, 523, 672, 688, 777, 793, 806, 834, 848, 889, 890], "reason": [3, 90, 253, 415, 893], "extra_kwarg": [3, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 91], "dictionari": [3, 5, 6, 7, 8, 9, 12, 15, 17, 22, 23, 25, 27, 30, 32, 37, 38, 40, 42, 45, 47, 48, 52, 53, 55, 57, 60, 62, 67, 68, 70, 72, 75, 77, 82, 83, 85, 87, 256, 257, 258, 259, 260, 261, 273, 286, 299, 310, 323, 338, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889], "modifi": [3, 4, 253, 263, 268, 413, 414, 446], "probit_wrap_start_param": 3, "start_param": 3, "none": [3, 5, 6, 7, 8, 9, 11, 13, 14, 15, 20, 22, 25, 26, 28, 29, 30, 35, 37, 40, 41, 43, 44, 45, 50, 52, 55, 56, 58, 59, 60, 65, 67, 70, 71, 73, 74, 75, 80, 82, 85, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 235, 239, 242, 245, 247, 248, 249, 256, 257, 258, 259, 261, 263, 265, 267, 268, 269, 270, 271, 275, 288, 348, 362, 386, 389, 396, 405, 411, 419, 421, 422, 423, 426, 430, 432, 433, 435, 437, 438, 439, 440, 442, 444, 445, 455, 459, 472, 476, 485, 488, 489, 490, 495, 496, 499, 500, 502, 505, 506, 507, 511, 512, 515, 516, 518, 521, 522, 523, 527, 528, 531, 532, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 637, 641, 644, 645, 654, 658, 667, 670, 671, 672, 676, 677, 680, 681, 683, 686, 687, 688, 692, 693, 696, 697, 703, 707, 716, 720, 723, 724, 733, 737, 746, 750, 753, 754, 759, 763, 766, 767, 772, 775, 776, 777, 781, 782, 785, 786, 788, 791, 792, 793, 797, 798, 801, 803, 806, 807, 813, 822, 823, 824, 825, 827, 834, 835, 843, 854, 858, 861, 862, 866, 867, 873, 877, 885, 889, 891, 892], "20": [3, 87, 253, 414, 415, 891, 892, 893], "reset": [3, 892, 893], "state": [3, 17, 19, 20, 22, 32, 34, 35, 37, 47, 49, 50, 52, 62, 64, 65, 67, 77, 79, 80, 82, 89, 91, 239, 245, 249, 892, 893], "compar": [3, 14, 29, 44, 59, 74, 89, 254, 415, 421, 422, 423, 432, 433, 439, 885], "common": [3, 7, 10, 91, 253, 265, 271, 348, 362, 396, 411, 415, 418, 419, 421, 422, 423, 431, 432, 433, 439, 885, 894], "experi": [3, 7], "e": [3, 86, 89, 91, 252, 253, 261, 263, 268, 362, 418, 427, 429, 437, 885, 891], "test": [3, 86, 91, 230, 231, 232, 233, 234, 254, 256, 257, 258, 259, 260, 261, 265, 267, 269, 270, 271, 273, 276, 278, 280, 281, 282, 284, 286, 289, 291, 293, 294, 295, 297, 299, 301, 303, 304, 305, 306, 308, 310, 312, 314, 315, 316, 317, 318, 319, 321, 323, 326, 329, 331, 332, 333, 336, 338, 340, 342, 343, 344, 345, 347, 362, 383, 387, 390, 392, 393, 394, 400, 403, 406, 408, 409, 411, 444, 803, 827, 852], "websit": [3, 86], "arbitrari": [3, 429], "within": [3, 270, 271], "observ": [3, 7, 90, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 253, 256, 257, 258, 259, 260, 261, 271, 273, 276, 286, 289, 299, 301, 310, 312, 323, 326, 338, 340, 415, 418, 421, 422, 423, 432, 433, 439, 444, 455, 459, 463, 472, 476, 480, 485, 488, 489, 490, 502, 505, 506, 507, 518, 521, 522, 523, 538, 542, 546, 555, 559, 563, 572, 576, 580, 589, 593, 598, 607, 611, 615, 624, 628, 632, 654, 658, 662, 667, 670, 671, 672, 683, 686, 687, 688, 703, 707, 711, 733, 737, 741, 772, 775, 776, 777, 788, 791, 792, 793, 806, 807, 834, 835, 866, 873, 877, 881, 885, 889, 890, 891, 892, 893], "natur": [3, 86, 889], "independentsamplesbootstrap": [3, 6, 86, 91], "dataset": [3, 256, 257, 258, 259], "exploit": [3, 418], "separ": [3, 91, 447, 892], "each": [3, 4, 7, 11, 14, 26, 29, 41, 44, 48, 56, 59, 71, 74, 86, 253, 261, 418, 446, 450, 453, 469, 471, 490, 507, 523, 535, 537, 552, 554, 569, 571, 586, 588, 604, 606, 621, 623, 651, 653, 672, 688, 700, 728, 730, 732, 777, 793, 806, 834, 866, 867, 870, 872, 889], "compon": [3, 256, 257, 258, 259, 261, 417, 436, 452, 470, 488, 505, 521, 536, 553, 570, 587, 605, 622, 652, 670, 686, 701, 728, 731, 775, 791, 871, 885, 893], "below": [3, 5, 6, 7, 8, 9, 253, 414, 891, 892], "two": [3, 4, 5, 6, 7, 8, 9, 10, 14, 29, 44, 59, 74, 87, 263, 268, 414, 415, 437, 886, 889, 890, 891, 892, 893], "group": 3, "mean_diff": 3, "y": [3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 87, 89, 253, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 270, 271, 415, 421, 422, 423, 432, 433, 439, 440, 490, 495, 507, 511, 523, 527, 672, 676, 688, 692, 777, 781, 793, 797, 806, 834, 848, 885, 889], "treatment": 3, "standard_norm": [3, 5, 6, 7, 8, 9, 89, 889, 893], "200": [3, 7, 253, 496, 512, 677, 693, 892], "control": [3, 115, 125, 139, 149, 159, 169, 179, 189, 199, 209, 219, 229, 234, 252, 253, 254, 437, 892], "student": [3, 14, 29, 44, 59, 74, 91, 233, 234, 253, 418, 437, 438, 749, 762, 885], "19450863": 3, "49723719": 3, "three": [4, 90, 91, 233, 244, 253, 383, 400, 415, 418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 885, 891, 892], "resampl": [4, 6, 7, 260], "residu": [4, 89, 91, 263, 264, 266, 267, 268, 269, 270, 271, 348, 355, 356, 371, 374, 375, 389, 391, 396, 405, 407, 414, 415, 418, 441, 442, 443, 444, 448, 450, 452, 455, 459, 461, 463, 465, 467, 469, 470, 472, 476, 478, 480, 482, 495, 511, 527, 533, 535, 536, 538, 542, 544, 546, 548, 550, 552, 553, 555, 559, 561, 563, 565, 567, 569, 570, 572, 576, 578, 580, 582, 584, 586, 587, 589, 593, 595, 598, 600, 602, 604, 605, 607, 611, 613, 615, 617, 619, 621, 622, 624, 628, 630, 632, 634, 636, 640, 648, 649, 651, 652, 654, 658, 660, 662, 664, 676, 692, 698, 700, 701, 703, 707, 709, 711, 713, 715, 719, 727, 728, 730, 731, 733, 737, 739, 741, 743, 745, 749, 757, 758, 762, 770, 781, 797, 803, 813, 814, 815, 818, 822, 827, 843, 845, 850, 853, 857, 865, 867, 868, 870, 871, 873, 877, 879, 881, 883, 885, 888, 889, 890, 891, 892, 893], "simul": [4, 14, 15, 25, 29, 30, 40, 44, 45, 55, 59, 60, 70, 74, 75, 85, 87, 89, 91, 253, 258, 268, 271, 421, 422, 423, 432, 433, 439, 442, 443, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 807, 813, 821, 822, 823, 825, 834, 835, 843, 873, 888, 893], "one": [4, 10, 91, 95, 127, 128, 253, 259, 263, 268, 271, 415, 418, 453, 471, 528, 537, 554, 571, 588, 606, 623, 653, 732, 872, 891, 892, 893], "sharp": [4, 87, 88], "ratio": [4, 87, 88, 91, 260, 271, 324, 335, 413, 414], "500": [4, 5, 6, 7, 8, 9, 87, 88, 253, 418, 459, 476, 496, 512, 528, 542, 559, 576, 593, 611, 628, 658, 677, 693, 707, 737, 782, 798, 877, 889, 891], "yahoo": [4, 87, 88, 885, 891, 892], "datetim": [4, 87, 88, 411, 418, 488, 489, 490, 505, 506, 507, 521, 522, 523, 670, 671, 672, 686, 687, 688, 775, 776, 777, 791, 792, 793, 806, 807, 834, 835, 885, 890, 891, 892], "dt": [4, 87, 88, 411, 418, 885, 890, 891, 892], "pandas_dataread": [4, 87, 88, 260, 411, 418, 885], "web": [4, 87, 88, 411, 418, 885], "1951": [4, 87, 88], "2014": [4, 87, 88, 411, 418, 885], "sp500": [4, 87, 88, 418, 421, 885, 891, 892], "dataread": [4, 87, 88, 411, 885], "gspc": [4, 87, 88, 418, 885], "monthly_d": [4, 87, 88], "date_rang": [4, 87, 88, 432, 490, 507, 523, 672, 688, 777, 793, 807, 835], "freq": [4, 87, 88, 432], "monthli": [4, 87, 88, 813, 843], "reindex": [4, 87, 88, 91, 442, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 891, 893], "ffill": [4, 87, 88], "100": [4, 5, 6, 7, 8, 9, 11, 12, 26, 27, 41, 42, 56, 57, 71, 72, 87, 88, 89, 91, 253, 258, 259, 418, 421, 422, 423, 432, 433, 439, 490, 496, 507, 512, 523, 672, 677, 688, 693, 777, 793, 806, 834, 885, 889, 890, 891, 892, 893], "adj": [4, 87, 88, 415, 418, 421, 885, 889, 890, 891, 892, 893], "pct_chang": [4, 87, 88, 418, 421, 885, 891, 892, 893], "main": [4, 891], "element": [4, 5, 6, 7, 8, 9, 48, 87, 94, 98, 99, 100, 101, 102, 103, 104, 105, 233, 234, 253, 411, 421, 422, 423, 432, 433, 439, 450, 465, 469, 482, 490, 507, 523, 535, 548, 552, 565, 569, 582, 586, 600, 604, 617, 621, 634, 651, 664, 672, 688, 700, 713, 730, 743, 777, 793, 805, 806, 829, 834, 867, 870, 883], "simplest": [4, 885, 892], "non": [4, 89, 91, 258, 260, 415, 418, 432, 484, 486, 488, 501, 503, 505, 517, 519, 521, 666, 668, 670, 682, 684, 686, 771, 773, 775, 782, 787, 789, 791, 807, 835, 892], "well": [4, 253, 415, 892, 893, 894], "mix": [4, 434], "limit": [4, 253, 893], "form": [4, 89, 90, 253, 263, 265, 268, 418, 421, 432, 453, 471, 537, 554, 571, 588, 606, 623, 653, 732, 872, 891, 892], "usual": [4, 252, 253, 415, 427, 429, 813, 843, 892, 893], "final": [4, 253, 271, 413, 415, 417, 418, 432, 488, 490, 505, 507, 521, 523, 670, 672, 686, 688, 775, 777, 791, 793, 806, 834, 889, 891, 892, 893], "exact": [4, 89, 260, 414, 415], "conceptu": 4, "mani": [4, 253, 413, 418, 889, 892], "replic": [4, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 232, 233, 234, 253, 258], "order": [4, 5, 6, 7, 8, 9, 87, 265, 267, 269, 414, 419, 420, 425, 427, 429, 496, 512, 528, 641, 644, 677, 693, 720, 723, 750, 753, 763, 766, 782, 858, 861, 885, 889], "empir": [4, 891], "while": [4, 252, 253, 254, 260, 414, 418, 885, 889, 891, 893], "littl": [4, 415], "highli": [4, 413, 415, 892], "persist": [4, 413, 415], "iid": [4, 893], "good": [4, 253, 415, 893], "choic": [4, 271, 348, 362, 396, 418, 489, 506, 522, 671, 687, 776, 792, 892], "instead": [4, 5, 6, 8, 9, 91, 415, 430, 435, 437, 438, 646, 725, 755, 768, 863, 889, 893], "block": [4, 5, 8, 9, 10, 88, 90, 232, 233, 234, 253, 260, 263, 268, 335, 415, 885, 893], "side": [4, 95, 127, 128, 263, 265, 268, 270, 271, 415], "95": [4, 14, 29, 44, 59, 74, 414, 885, 889, 890, 892, 893], "default": [4, 11, 14, 15, 20, 25, 26, 29, 30, 35, 40, 41, 44, 45, 50, 55, 56, 59, 60, 65, 70, 71, 74, 75, 80, 85, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 253, 256, 257, 258, 259, 260, 261, 262, 263, 265, 268, 270, 271, 348, 362, 379, 389, 396, 405, 411, 415, 418, 419, 426, 427, 429, 436, 455, 465, 472, 482, 490, 507, 523, 538, 548, 555, 565, 572, 582, 589, 600, 607, 617, 624, 634, 648, 654, 664, 672, 688, 703, 713, 733, 743, 777, 793, 806, 807, 834, 835, 873, 883, 885, 889, 891, 892, 893, 894], "hat": [4, 10, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 263, 265, 268, 271, 356, 362, 375, 392, 418], "theta": [4, 268, 434, 702], "_b": 4, "star": [4, 268], "left": [4, 10, 94, 98, 102, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 263, 265, 268, 270, 271, 418, 419, 425, 429, 431, 434, 640, 719, 749, 762, 892], "_": [4, 263, 265, 268, 271, 356, 362, 375, 418, 432, 889], "right": [4, 10, 94, 98, 102, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 263, 265, 268, 270, 271, 418, 419, 425, 429, 431, 434, 640, 719, 749, 762, 892], "l": [4, 427], "where": [4, 7, 10, 11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 86, 87, 88, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 238, 252, 253, 263, 265, 268, 270, 271, 348, 356, 362, 371, 375, 396, 414, 418, 421, 425, 427, 431, 432, 434, 436, 440, 450, 469, 490, 496, 507, 512, 523, 535, 552, 569, 586, 604, 621, 640, 651, 672, 677, 688, 693, 700, 730, 749, 762, 777, 793, 806, 830, 834, 857, 870, 889, 890, 891, 892, 893], "alpha": [4, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 271, 414, 418, 434, 702, 830, 885, 889, 890, 891, 892, 893], "quantil": [4, 891], "vector": [4, 14, 29, 44, 59, 74, 89, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 112, 122, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 263, 264, 265, 266, 267, 268, 269, 271, 348, 350, 353, 354, 359, 361, 362, 364, 372, 373, 378, 379, 380, 382, 396, 399, 413, 414, 421, 422, 423, 432, 433, 439, 448, 450, 452, 459, 467, 469, 470, 476, 490, 507, 523, 533, 535, 536, 542, 550, 552, 553, 559, 567, 569, 570, 576, 584, 586, 587, 593, 602, 604, 605, 611, 619, 621, 622, 628, 640, 649, 651, 652, 658, 672, 688, 698, 700, 701, 707, 719, 728, 730, 731, 737, 749, 762, 777, 793, 806, 834, 857, 868, 870, 871, 877], "directli": [4, 5, 6, 7, 8, 9, 87, 89, 415, 803, 827, 885, 890], "cdf": [4, 645, 724, 754, 767, 862], "defin": [4, 91, 95, 253, 263, 268, 271, 356, 375, 411], "combin": [4, 89, 94, 98, 99, 100, 101, 102, 103, 104, 105, 414], "phi": [4, 271, 427], "mai": [4, 86, 89, 91, 270, 271, 415, 418, 889, 890, 892, 893, 895], "accur": [4, 889], "some": [4, 7, 10, 252, 253, 260, 415, 418, 887, 889, 892, 893, 895], "either": [4, 14, 20, 29, 35, 44, 50, 59, 65, 74, 80, 86, 232, 263, 268, 362, 455, 472, 488, 490, 496, 505, 507, 512, 521, 523, 538, 555, 572, 589, 607, 624, 654, 670, 672, 677, 686, 688, 693, 703, 733, 775, 777, 791, 793, 806, 807, 834, 835, 873, 885, 888, 889, 891, 892, 893], "analyt": [4, 14, 29, 44, 59, 74, 88, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 807, 834, 835, 873, 888, 893], "nest": [4, 14, 29, 44, 59, 74, 233, 234], "version": [4, 5, 6, 8, 9, 11, 14, 26, 29, 41, 44, 56, 59, 71, 74, 89, 230, 252, 260, 415, 430, 435, 437, 438, 490, 507, 523, 646, 672, 688, 725, 755, 768, 777, 793, 806, 834, 863, 891, 892], "produc": [4, 12, 16, 27, 31, 42, 46, 57, 61, 72, 76, 89, 91, 252, 253, 271, 348, 362, 396, 418, 421, 422, 423, 427, 429, 432, 433, 439, 441, 443, 444, 446, 455, 465, 472, 482, 490, 507, 523, 538, 548, 555, 565, 572, 582, 589, 600, 607, 617, 624, 634, 654, 664, 672, 688, 703, 713, 733, 743, 757, 770, 777, 793, 806, 807, 809, 813, 823, 834, 835, 837, 843, 873, 883, 885, 887, 888, 891, 892, 893], "higher": [4, 87, 253, 265, 889], "refin": 4, "circumst": [4, 89, 892, 893], "although": [4, 89, 253, 414, 415, 418, 427, 429, 889, 892], "slow": [4, 233, 234], "inner": [4, 14, 29, 44, 59, 74, 94, 98, 99, 100, 101, 102, 103, 104, 105, 271], "outer": 4, "In": [4, 89, 232, 233, 234, 253, 411, 414, 418, 419, 425, 427, 429, 431, 434, 488, 490, 505, 507, 521, 523, 670, 672, 686, 688, 775, 777, 791, 793, 806, 807, 834, 835, 885, 886, 889, 890, 891, 892, 893], "necessari": [4, 89, 889], "done": 4, "moment": [4, 91, 644, 723, 753, 757, 766, 770, 861], "delta": [4, 263, 265, 268, 392, 414, 419, 451], "detail": [4, 232, 233, 234, 253, 263, 265, 268, 271, 442, 644, 723, 753, 766, 819, 861, 891], "descript": [4, 267, 421, 422, 432], "mathemat": 4, "formula": 4, "beyond": [4, 893], "intent": [4, 415], "document": [4, 230, 418], "sharpe_ratio_s": 4, "e1": 4, "e2": 4, "vstack": 4, "vcv": 4, "dot": [4, 89, 253, 453, 471, 486, 503, 519, 537, 554, 571, 588, 606, 623, 638, 653, 668, 684, 702, 717, 732, 747, 760, 773, 789, 855, 872], "avar": 4, "std_err_func": [4, 14, 29, 44, 59, 74], "match": [4, 10, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889], "patter": 4, "arg": [4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 25, 26, 28, 29, 30, 40, 41, 43, 44, 45, 55, 56, 58, 59, 60, 70, 71, 73, 74, 75, 85], "kwarg": [4, 5, 6, 7, 8, 9, 11, 13, 14, 15, 25, 26, 28, 29, 30, 40, 41, 43, 44, 45, 55, 56, 58, 59, 60, 70, 71, 73, 74, 75, 85], "improv": [4, 91, 252, 257, 415, 446, 892], "jackknif": [4, 91], "term": [4, 256, 257, 258, 259, 260, 261, 263, 265, 268, 270, 271, 273, 282, 283, 286, 295, 296, 299, 306, 307, 310, 319, 320, 323, 333, 334, 338, 345, 346, 362, 414, 418, 419, 434, 892], "offer": [4, 892], "accuraci": 4, "condit": [4, 91, 260, 415, 418, 419, 421, 425, 427, 429, 437, 439, 440, 441, 442, 444, 447, 452, 465, 470, 482, 491, 496, 512, 528, 536, 548, 553, 565, 570, 582, 587, 600, 605, 617, 622, 634, 640, 652, 664, 677, 693, 701, 713, 719, 731, 743, 749, 762, 782, 803, 805, 813, 815, 817, 818, 820, 827, 829, 843, 850, 857, 867, 871, 883, 886, 889, 891, 892], "satisfi": [4, 260, 419, 486, 503, 519, 638, 668, 684, 717, 747, 760, 773, 789, 855], "special": [4, 431, 895], "case": [4, 89, 94, 98, 99, 100, 101, 102, 103, 104, 105, 253, 414, 431, 885], "base": [4, 89, 91, 254, 258, 259, 261, 271, 276, 289, 301, 312, 326, 340, 348, 362, 396, 414, 418, 446, 447, 490, 507, 523, 672, 688, 757, 770, 777, 888, 891, 893], "frac": [4, 10, 94, 98, 99, 100, 101, 102, 103, 104, 105, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 265, 271, 418, 427, 431, 640, 719, 749, 762], "z_": [4, 271, 414], "skew": [4, 91, 415, 437, 749, 885, 892], "like": [4, 10, 88, 89, 252, 414, 418, 421, 422, 423, 432, 433, 439, 490, 507, 523, 672, 688, 777, 793, 806, 834, 885, 890, 892, 893], "leav": [4, 91], "out": [4, 91, 418, 886, 891, 893], "block_siz": [5, 8, 9, 232, 233, 234], "random_st": [5, 6, 7, 8, 9, 91, 430, 435, 437, 438, 445, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 834, 873, 892, 893], "sourc": [5, 6, 7, 8, 9, 10, 24, 26, 27, 28, 29, 30, 32, 35, 36, 37, 39, 40, 50, 54, 69, 84, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 126, 127, 128, 129, 232, 233, 234, 235, 241, 242, 243, 245, 247, 248, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 348, 362, 379, 394, 396, 409, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 450, 452, 453, 458, 459, 461, 478, 490, 493, 495, 497, 525, 526, 527, 528, 533, 534, 535, 536, 537, 541, 542, 544, 550, 551, 552, 553, 554, 558, 559, 561, 565, 569, 570, 571, 575, 576, 578, 584, 585, 586, 587, 588, 592, 593, 595, 600, 602, 604, 605, 606, 610, 611, 613, 619, 620, 621, 622, 623, 627, 628, 630, 634, 636, 637, 638, 640, 641, 643, 644, 645, 647, 648, 651, 652, 653, 657, 658, 660, 672, 674, 675, 676, 677, 700, 701, 702, 706, 707, 709, 715, 716, 717, 719, 720, 722, 723, 724, 726, 727, 728, 729, 730, 731, 732, 736, 737, 739, 743, 745, 746, 747, 749, 750, 752, 753, 754, 756, 757, 758, 759, 760, 762, 763, 765, 766, 767, 769, 770, 779, 780, 781, 782, 787, 788, 789, 791, 792, 793, 795, 796, 797, 798, 799, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 830, 831, 832, 833, 841, 844, 846, 847, 848, 849, 851, 852, 853, 854, 855, 857, 858, 860, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 876, 877, 879, 881, 883, 885, 894], "length": [5, 7, 8, 9, 10, 90, 91, 232, 233, 234, 256, 257, 259, 261, 265, 267, 270, 275, 288, 386, 414, 415, 418, 421, 422, 423, 431, 432, 433, 434, 436, 439, 490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 777, 782, 793, 806, 834, 885, 891], "wrap": [5, 8, 9, 10, 90], "around": [5, 8, 9, 10, 90, 252, 414], "posit": [5, 6, 7, 8, 9, 12, 13, 27, 28, 42, 43, 48, 57, 58, 72, 73, 87, 112, 122, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 253, 259, 260, 415, 418, 427, 429, 490, 507, 523, 672, 688, 777, 793, 805, 806, 829, 834, 889], "option": [5, 6, 8, 9, 16, 31, 46, 61, 76, 89, 91, 232, 233, 234, 241, 243, 253, 256, 257, 258, 259, 260, 261, 271, 415, 419, 421, 422, 423, 426, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 442, 455, 459, 465, 472, 476, 482, 485, 488, 490, 495, 496, 502, 505, 507, 511, 512, 518, 521, 523, 527, 528, 538, 542, 548, 555, 559, 565, 572, 576, 582, 589, 593, 600, 607, 611, 617, 624, 628, 634, 640, 641, 644, 645, 654, 658, 664, 667, 670, 672, 676, 677, 683, 686, 688, 692, 693, 703, 707, 713, 719, 720, 723, 724, 733, 737, 743, 749, 750, 753, 754, 762, 763, 766, 767, 772, 775, 777, 781, 782, 788, 791, 793, 797, 803, 806, 807, 813, 827, 830, 834, 835, 843, 857, 858, 861, 862, 873, 877, 883, 885, 886, 892, 895], "ensur": [5, 6, 7, 8, 9, 89, 271, 430, 435, 437, 438, 465, 482, 548, 565, 582, 600, 617, 634, 664, 713, 743, 883], "reproduc": [5, 6, 7, 8, 9, 89, 91, 253, 430, 435, 437, 438, 892], "If": [5, 6, 7, 8, 9, 20, 23, 35, 38, 50, 53, 65, 68, 80, 83, 91, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 256, 257, 258, 259, 260, 261, 265, 271, 348, 356, 362, 371, 375, 396, 418, 419, 421, 422, 423, 428, 430, 432, 433, 435, 437, 438, 439, 444, 455, 466, 472, 483, 488, 490, 496, 505, 507, 512, 521, 523, 538, 549, 555, 566, 572, 583, 589, 601, 607, 618, 624, 635, 654, 665, 670, 672, 677, 686, 688, 693, 703, 714, 733, 744, 775, 777, 791, 793, 803, 806, 807, 813, 827, 834, 835, 843, 848, 873, 884, 885, 889, 891], "fresh": [5, 6, 8, 9, 13, 28, 43, 58, 73], "system": [5, 6, 8, 9, 265, 430, 435, 437, 438], "deprec": [5, 6, 8, 9, 91, 430, 435, 437, 438, 646, 725, 755, 768, 863], "ha": [5, 6, 7, 8, 9, 20, 35, 50, 65, 80, 91, 253, 261, 413, 415, 418, 424, 426, 436, 719, 867, 889, 891, 892, 893], "been": [5, 6, 7, 8, 9, 20, 35, 50, 65, 80, 91, 261, 415, 431, 848, 867, 889, 893], "optim": [5, 8, 9, 10, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 121, 124, 125, 130, 131, 135, 138, 139, 140, 141, 145, 148, 149, 150, 151, 155, 158, 159, 160, 161, 165, 168, 169, 170, 171, 175, 178, 179, 180, 181, 185, 188, 189, 190, 191, 195, 198, 199, 200, 201, 205, 208, 209, 210, 211, 215, 218, 219, 220, 221, 225, 228, 229, 262, 265, 271, 348, 362, 396, 444, 484, 486, 488, 501, 503, 505, 517, 519, 521, 636, 638, 648, 666, 668, 670, 682, 684, 686, 715, 717, 727, 745, 747, 757, 758, 760, 770, 771, 773, 775, 787, 789, 791, 831, 840, 853, 855, 865, 885, 890, 891, 892, 893], "exp": [5, 8, 10], "note": [5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 232, 233, 234, 241, 242, 252, 256, 257, 258, 259, 260, 261, 263, 265, 268, 270, 271, 356, 362, 375, 392, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 439, 446, 453, 455, 471, 472, 486, 488, 489, 490, 503, 505, 506, 507, 519, 521, 522, 523, 537, 538, 554, 555, 571, 572, 588, 589, 606, 607, 623, 624, 638, 640, 644, 648, 653, 654, 668, 670, 671, 672, 684, 686, 687, 688, 702, 703, 717, 719, 723, 727, 732, 733, 747, 749, 753, 757, 760, 762, 766, 770, 773, 775, 776, 777, 789, 791, 792, 793, 806, 834, 855, 857, 861, 865, 866, 867, 872, 873, 885, 889, 891, 893], "support": [5, 6, 7, 8, 9, 91, 271, 282, 295, 306, 319, 333, 345, 360, 379, 411, 418, 419, 420, 424, 425, 426, 427, 428, 429, 431, 434, 436, 447, 455, 464, 472, 481, 488, 490, 505, 507, 521, 523, 538, 547, 555, 564, 572, 581, 589, 599, 607, 616, 624, 633, 654, 663, 670, 672, 686, 688, 703, 712, 733, 742, 775, 777, 791, 793, 806, 807, 813, 834, 835, 843, 873, 882, 885, 886, 889, 893], "type": [5, 6, 7, 8, 9, 10, 13, 14, 16, 17, 18, 19, 20, 22, 23, 24, 28, 29, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 46, 47, 48, 49, 50, 52, 53, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 73, 74, 76, 77, 78, 79, 80, 82, 83, 84, 86, 91, 106, 108, 110, 113, 116, 118, 120, 123, 130, 132, 134, 137, 140, 142, 144, 147, 150, 152, 154, 157, 160, 162, 164, 167, 170, 172, 174, 177, 180, 182, 184, 187, 190, 192, 194, 197, 200, 202, 204, 207, 210, 212, 214, 217, 220, 222, 224, 227, 235, 238, 239, 242, 243, 244, 245, 247, 248, 249, 259, 262, 266, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 355, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 415, 418, 448, 449, 451, 452, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 487, 488, 489, 490, 491, 492, 495, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 511, 512, 513, 514, 515, 516, 518, 520, 521, 522, 523, 524, 527, 528, 529, 530, 531, 532, 533, 534, 536, 538, 539, 540, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 555, 556, 557, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 570, 572, 573, 574, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 587, 589, 590, 591, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 605, 607, 608, 609, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 624, 625, 626, 628, 629, 630, 631, 632, 633, 634, 635, 637, 639, 640, 641, 642, 644, 645, 646, 647, 648, 649, 650, 652, 654, 655, 656, 658, 659, 660, 661, 662, 663, 664, 665, 667, 669, 670, 671, 672, 673, 676, 677, 678, 679, 680, 681, 683, 685, 686, 687, 688, 689, 692, 693, 694, 695, 696, 697, 698, 699, 701, 703, 704, 705, 707, 708, 709, 710, 711, 712, 713, 714, 716, 718, 719, 720, 721, 723, 724, 725, 726, 727, 728, 729, 731, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 744, 746, 748, 749, 750, 751, 753, 754, 755, 756, 757, 759, 761, 762, 763, 764, 766, 767, 768, 769, 770, 772, 774, 775, 776, 777, 778, 781, 782, 783, 784, 785, 786, 788, 790, 791, 792, 793, 794, 797, 798, 799, 800, 801, 803, 806, 807, 813, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 827, 830, 834, 835, 840, 843, 851, 854, 856, 857, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 871, 873, 874, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 891, 893, 894], "date": [5, 6, 7, 8, 9, 415, 418, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 885, 889, 890, 891, 892, 893], "enter": [5, 6, 7, 8, 9, 12, 27, 42, 57, 72, 886], "access": [5, 6, 7, 8, 9, 242, 253, 415, 892], "attribut": [5, 6, 7, 8, 9, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 232, 233, 234, 256, 257, 258, 259, 260, 261, 264, 266, 267, 269, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 891, 893, 894], "To": [5, 6, 7, 8, 9, 414, 416], "you": [5, 6, 7, 8, 9, 889, 891, 893], "after": [5, 6, 7, 8, 9, 91, 418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 891], "reserv": [5, 6, 7, 8, 9, 892], "instanc": [5, 7, 8, 9, 13, 16, 19, 28, 31, 34, 43, 46, 49, 58, 61, 64, 73, 76, 79, 87, 89, 91, 109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223, 266, 267, 348, 360, 379, 389, 396, 405, 430, 435, 437, 438, 441, 444, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 809, 816, 834, 837, 851, 873, 892], "wai": [5, 6, 7, 8, 9, 892], "retain": [5, 6, 7, 8, 9], "wa": [5, 6, 7, 8, 9, 91, 415, 441, 444, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889], "avail": [5, 6, 7, 8, 9, 253, 256, 259, 415, 418, 446, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 834, 873, 891, 892, 893], "syntax": [5, 6, 7, 8, 9, 490, 507, 523, 672, 688, 777, 793, 806, 834], "kw_data": [5, 6, 7, 8, 9], "z": [5, 6, 7, 8, 9, 87, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 257, 271, 362, 415, 644, 723, 753, 766, 861], "bs_x": [5, 6, 7, 8, 9], "bs_y": [5, 6, 7, 8, 9], "bs_z": [5, 6, 7, 8, 9], "1234": [5, 6, 7, 8, 9, 432], "tupl": [5, 6, 7, 8, 9, 12, 18, 22, 23, 27, 33, 37, 38, 39, 42, 48, 52, 53, 57, 63, 67, 68, 72, 78, 82, 83, 87, 450, 459, 469, 476, 484, 490, 501, 507, 517, 523, 535, 542, 552, 559, 569, 576, 586, 593, 604, 611, 621, 628, 636, 647, 651, 658, 666, 672, 682, 688, 700, 707, 715, 726, 730, 737, 745, 756, 758, 769, 771, 777, 787, 793, 806, 834, 853, 864, 870, 877], "pos_data": [5, 6, 7, 8, 9], "dict": [5, 6, 7, 8, 9, 11, 14, 15, 17, 18, 22, 23, 25, 26, 29, 30, 32, 33, 37, 38, 39, 40, 41, 44, 45, 47, 48, 52, 53, 55, 56, 59, 60, 62, 63, 67, 68, 70, 71, 74, 75, 77, 78, 82, 83, 85, 273, 338, 488, 490, 505, 507, 521, 523, 670, 672, 686, 688, 775, 777, 791, 793, 806, 834, 894], "properti": [5, 6, 7, 8, 9, 16, 18, 19, 23, 31, 33, 34, 38, 46, 48, 49, 53, 61, 63, 64, 68, 76, 78, 79, 83, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 238, 244, 251, 256, 257, 258, 259, 260, 261, 264, 266, 267, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 361, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 410, 414, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 451, 454, 456, 457, 460, 462, 464, 466, 473, 474, 477, 479, 481, 483, 487, 490, 491, 492, 493, 498, 499, 500, 504, 507, 508, 509, 514, 515, 516, 520, 523, 524, 525, 530, 531, 532, 539, 540, 543, 545, 547, 549, 556, 557, 560, 562, 564, 566, 573, 574, 577, 579, 581, 583, 590, 591, 594, 596, 597, 599, 601, 608, 609, 612, 614, 616, 618, 625, 626, 629, 631, 633, 635, 639, 642, 646, 655, 656, 659, 661, 663, 665, 669, 672, 673, 674, 679, 680, 681, 685, 688, 689, 690, 695, 696, 697, 704, 705, 708, 710, 712, 714, 718, 721, 725, 734, 735, 738, 740, 742, 744, 748, 751, 755, 761, 764, 768, 774, 777, 778, 779, 784, 785, 786, 790, 793, 794, 795, 800, 801, 802, 804, 805, 806, 808, 809, 810, 811, 812, 814, 815, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 828, 829, 831, 832, 833, 834, 836, 837, 838, 839, 840, 841, 842, 844, 845, 846, 847, 848, 849, 850, 852, 856, 859, 863, 874, 875, 878, 880, 882, 884, 886, 887, 892, 894], "uniform": 6, "integ": [6, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 120, 134, 144, 154, 164, 174, 184, 194, 204, 214, 224, 232, 233, 234, 240, 246, 250, 253, 271, 348, 362, 396, 415, 418, 444, 459, 476, 490, 507, 523, 542, 559, 576, 593, 611, 628, 658, 672, 688, 707, 737, 777, 793, 806, 807, 834, 835, 877, 885], "equival": [6, 253, 362, 421, 432, 490, 507, 523, 672, 688, 777, 793, 806, 834, 885, 893], "structur": [7, 89, 261, 411, 414, 415, 418, 421, 422, 432, 889], "unequ": 7, "cross": [7, 267, 270, 271, 362, 414], "section": [7, 267, 270, 271, 362, 414], "relat": [7, 91, 252, 427, 429, 885, 892], "inappropri": 7, "without": [8, 14, 29, 44, 59, 74, 89, 421, 422, 423, 432, 433, 439, 885, 891], "circularblockbootstrap": [8, 9, 10, 90], "expon": 9, "array_lik": [10, 94, 98, 99, 100, 101, 102, 103, 104, 105, 261, 263, 265, 268, 270, 271, 490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 777, 793, 806, 834], "dimension": [10, 15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 89, 889, 890], "oper": [10, 427], "b_sb": 10, "b_cb": 10, "algorithm": [10, 256, 261, 895], "its": [10, 20, 35, 50, 65, 80, 245, 252, 253, 362, 414, 415, 892], "correct": [10, 14, 29, 44, 59, 74, 253, 489, 506, 522, 671, 687, 776, 792], "tune": 10, "k_n": 10, "consecut": 10, "insid": [10, 889], "conserv": 10, "band": 10, "pm": 10, "log_": 10, "maximum": [10, 256, 257, 261, 265, 267, 270, 275, 288, 386, 418, 434, 885, 889, 890, 892, 893], "lceil": 10, "rceil": 10, "_i": 10, "2g": 10, "d_": [10, 263, 268], "sum_": [10, 263, 265, 268, 271, 392, 418, 419, 420, 421, 422, 425, 427, 429, 431, 432, 434], "k": [10, 232, 233, 234, 253, 258, 259, 261, 265, 348, 362, 396, 419, 421, 422, 425, 429, 432, 433, 496, 512, 677, 693, 893], "h": [10, 91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 231, 233, 256, 257, 258, 263, 265, 268, 418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 891, 893], "gamma_": [10, 419, 425, 429], "c_": 10, "x_k": 10, "bar": [10, 415, 432], "x_": [10, 91, 265, 889], "remain": [10, 889], "constant": [10, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 114, 121, 124, 135, 138, 145, 148, 155, 158, 165, 168, 175, 178, 185, 188, 195, 198, 205, 208, 215, 218, 225, 228, 256, 257, 258, 259, 261, 263, 265, 268, 270, 271, 411, 414, 415, 418, 421, 422, 423, 424, 432, 433, 490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 749, 777, 782, 793, 807, 835, 885, 890, 893], "c_i": 10, "taken": 10, "andrew": [10, 91, 102, 258, 260, 261, 262, 413], "patton": 10, "matlab": 10, "program": 10, "do": [10, 12, 27, 42, 57, 72, 263, 268, 418, 432, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 866, 891, 894], "autocovari": [10, 271], "rather": [10, 91, 252, 253, 257, 261, 418, 891, 892], "dimitri": 10, "halbert": 10, "white": [10, 231, 233, 252, 271, 348, 362, 396, 415, 890, 892], "2004": [10, 258, 261], "automat": [10, 91, 256, 257, 258, 259, 261, 262, 270, 275, 288, 411, 413, 415, 421, 422, 423, 432, 433, 439, 885], "select": [10, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 115, 125, 139, 149, 159, 169, 179, 189, 199, 209, 219, 229, 234, 256, 257, 258, 261, 262, 265, 267, 270, 275, 288, 386, 411, 413, 415, 419, 420, 424, 425, 426, 427, 428, 429, 431, 434, 436, 447, 460, 462, 477, 479, 543, 545, 560, 562, 577, 579, 594, 596, 612, 614, 629, 631, 659, 661, 708, 710, 738, 740, 878, 880], "review": [10, 258, 437], "23": [10, 231, 233, 415, 890], "53": [10, 414, 890], "70": [10, 253], "doi": [10, 230], "1081": 10, "etc": [10, 418, 892], "120028836": 10, "2009": [10, 414, 418, 891], "28": [10, 415, 418, 885, 889, 890, 891], "372": 10, "375": 10, "1080": 10, "07474930802459016": 10, "func": [11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 885, 890, 891, 892], "rep": [11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 232, 233, 234, 253], "callabl": [11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 91, 252, 446, 455, 459, 472, 476, 490, 507, 523, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 647, 654, 658, 672, 688, 703, 707, 726, 733, 737, 756, 769, 777, 793, 806, 834, 864, 873, 877], "extra": [11, 14, 15, 25, 26, 29, 30, 40, 41, 44, 45, 55, 56, 59, 60, 70, 71, 74, 75, 85, 233, 234], "conflict": [11, 26, 41, 56, 71], "ndarrai": [11, 14, 15, 18, 21, 24, 25, 26, 29, 30, 33, 36, 39, 40, 41, 44, 45, 48, 51, 55, 56, 59, 60, 63, 66, 69, 70, 71, 74, 75, 78, 81, 84, 85, 91, 95, 112, 122, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 232, 233, 234, 240, 246, 247, 250, 256, 257, 258, 259, 260, 262, 284, 297, 308, 321, 336, 347, 421, 422, 423, 432, 433, 439, 441, 442, 444, 448, 449, 450, 452, 453, 455, 459, 461, 463, 465, 467, 468, 469, 470, 471, 472, 476, 478, 480, 482, 485, 486, 488, 489, 490, 495, 496, 497, 502, 503, 505, 506, 507, 511, 512, 513, 518, 519, 521, 522, 523, 527, 528, 529, 533, 534, 535, 536, 537, 538, 542, 544, 546, 548, 550, 551, 552, 553, 554, 555, 559, 561, 563, 565, 567, 568, 569, 570, 571, 572, 576, 578, 580, 582, 584, 585, 586, 587, 588, 589, 593, 595, 598, 600, 602, 603, 604, 605, 606, 607, 611, 613, 615, 617, 619, 620, 621, 622, 623, 624, 628, 630, 632, 634, 636, 637, 638, 640, 641, 644, 645, 647, 648, 649, 650, 651, 652, 653, 654, 658, 660, 662, 664, 667, 668, 670, 671, 672, 676, 677, 678, 683, 684, 686, 687, 688, 692, 693, 694, 698, 699, 700, 701, 703, 707, 709, 711, 713, 715, 716, 717, 719, 720, 723, 724, 726, 727, 728, 729, 730, 731, 732, 733, 737, 739, 741, 743, 745, 746, 747, 749, 750, 753, 754, 756, 757, 758, 759, 760, 762, 763, 766, 767, 769, 770, 772, 773, 775, 776, 777, 781, 782, 783, 788, 789, 791, 792, 793, 797, 799, 805, 806, 807, 829, 834, 835, 853, 854, 855, 857, 858, 861, 862, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 877, 879, 881, 883, 885, 889], "nparam": [11, 26, 41, 56, 71], "row": [11, 14, 26, 29, 41, 44, 56, 59, 71, 74, 418, 490, 507, 523, 672, 688, 777, 793, 806, 830, 834, 889], "correspond": [11, 14, 26, 29, 41, 44, 56, 59, 71, 74, 233, 244, 253, 465, 482, 488, 490, 505, 507, 521, 523, 548, 565, 582, 600, 617, 634, 664, 670, 672, 686, 688, 713, 743, 775, 777, 791, 793, 806, 834, 883, 891, 892], "iter": [11, 12, 24, 26, 27, 39, 41, 42, 54, 56, 57, 69, 71, 72, 84, 91, 446, 488, 505, 521, 670, 686, 775, 791, 885, 890, 891, 892], "up": [11, 14, 26, 29, 41, 44, 56, 59, 71, 74, 261, 415, 418, 431, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 891, 893], "append": [11, 14, 26, 29, 41, 44, 56, 59, 71, 74, 253, 889, 891], "befor": [11, 14, 26, 29, 41, 44, 56, 59, 71, 74, 94, 98, 99, 100, 101, 102, 103, 104, 105, 242, 257, 415, 444, 488, 505, 521, 670, 686, 775, 791, 848, 891, 893], "randn": [11, 12, 14, 15, 25, 26, 27, 29, 30, 40, 41, 42, 44, 45, 55, 56, 57, 59, 60, 70, 71, 72, 74, 75, 85, 87, 89, 253, 422, 423, 432, 433, 439, 496, 512, 677, 693], "over": [12, 27, 42, 57, 72, 91, 893], "calcul": [12, 27, 42, 57, 72, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 111, 112, 117, 121, 122, 131, 135, 136, 141, 145, 146, 151, 155, 156, 161, 165, 166, 171, 175, 176, 181, 185, 186, 191, 195, 196, 201, 205, 206, 211, 215, 216, 221, 225, 226, 258, 261, 640, 641, 719, 720, 749, 750, 762, 763, 858], "kei": [12, 27, 42, 57, 72, 383, 400, 411, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889], "problem": [12, 27, 42, 57, 72, 89, 91, 415], "doe": [12, 27, 42, 57, 72, 90, 253, 271, 356, 375, 415, 465, 482, 488, 505, 521, 548, 565, 582, 600, 617, 634, 664, 670, 686, 713, 743, 775, 791, 867, 883, 885, 891], "output": [12, 27, 42, 57, 72, 88, 253, 488, 505, 521, 647, 670, 686, 726, 756, 769, 775, 791, 864, 885, 891, 892], "arang": [12, 27, 42, 57, 72, 89, 889, 891, 893], "posdata": [12, 27, 42, 57, 72], "kwdata": [12, 27, 42, 57, 72], "someth": [12, 27, 42, 57, 72], "prng": [13, 16, 28, 31, 43, 46, 58, 61, 73, 76], "tail": [14, 29, 44, 59, 74, 418, 437, 648, 889, 892], "fals": [14, 15, 20, 25, 29, 30, 35, 40, 44, 45, 50, 55, 59, 60, 65, 70, 74, 75, 80, 85, 88, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 233, 234, 260, 265, 271, 348, 362, 379, 396, 415, 419, 421, 422, 423, 428, 432, 433, 434, 439, 442, 485, 488, 502, 505, 518, 521, 640, 667, 670, 683, 686, 719, 749, 762, 772, 775, 788, 791, 803, 827, 857, 885, 889, 891, 893], "nonparametr": [14, 29, 44, 59, 74, 89], "studentize_rep": [14, 29, 44, 59, 74], "str": [14, 17, 18, 23, 29, 32, 33, 38, 39, 44, 47, 48, 53, 59, 62, 63, 68, 74, 77, 78, 83, 95, 113, 123, 137, 147, 157, 167, 177, 187, 197, 207, 217, 227, 232, 233, 234, 241, 253, 262, 266, 267, 271, 272, 273, 277, 282, 283, 285, 290, 296, 298, 302, 306, 307, 309, 313, 318, 319, 320, 322, 327, 333, 334, 337, 338, 341, 345, 346, 348, 351, 362, 365, 368, 381, 387, 388, 389, 395, 396, 397, 402, 403, 404, 405, 410, 441, 444, 456, 458, 473, 475, 488, 489, 490, 492, 494, 505, 506, 507, 508, 510, 521, 522, 523, 524, 526, 539, 541, 556, 558, 573, 575, 590, 592, 608, 610, 625, 627, 642, 643, 655, 657, 670, 671, 672, 673, 675, 686, 687, 688, 689, 691, 704, 706, 721, 722, 734, 736, 751, 752, 764, 765, 775, 776, 777, 778, 780, 791, 792, 793, 794, 796, 806, 807, 813, 834, 835, 843, 859, 860, 874, 876, 885, 894], "One": [14, 29, 44, 59, 74, 415, 418], "norm": [14, 29, 44, 59, 74], "bc": [14, 29, 44, 59, 74, 749], "debias": [14, 29, 44, 59, 74, 260, 271], "bia": [14, 29, 44, 59, 74, 268, 414], "bca": [14, 29, 44, 59, 74, 91], "float": [14, 29, 44, 59, 74, 94, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 121, 124, 125, 130, 131, 135, 138, 139, 140, 141, 145, 148, 149, 150, 151, 155, 158, 159, 160, 161, 165, 168, 169, 170, 171, 175, 178, 179, 180, 181, 185, 188, 189, 190, 191, 195, 198, 199, 200, 201, 205, 208, 209, 210, 211, 215, 218, 219, 220, 221, 225, 228, 229, 232, 234, 241, 243, 261, 262, 267, 273, 278, 280, 291, 293, 303, 304, 314, 316, 329, 331, 335, 338, 342, 343, 349, 352, 356, 357, 358, 363, 371, 375, 376, 377, 390, 392, 393, 398, 406, 408, 419, 421, 426, 427, 429, 436, 441, 444, 448, 449, 450, 452, 454, 455, 459, 463, 465, 467, 468, 469, 470, 472, 476, 480, 482, 484, 485, 488, 491, 496, 501, 502, 505, 512, 517, 518, 521, 528, 533, 534, 535, 536, 538, 542, 546, 548, 550, 551, 552, 553, 555, 559, 563, 565, 567, 568, 569, 570, 572, 576, 580, 582, 584, 585, 586, 587, 589, 593, 598, 600, 602, 603, 604, 605, 607, 611, 615, 617, 619, 620, 621, 622, 624, 628, 632, 634, 640, 641, 644, 645, 649, 650, 651, 652, 654, 658, 662, 664, 666, 667, 670, 677, 682, 683, 686, 693, 698, 699, 700, 701, 703, 707, 711, 713, 719, 720, 723, 724, 728, 729, 730, 731, 733, 737, 741, 743, 749, 750, 753, 754, 762, 763, 766, 767, 771, 772, 775, 782, 787, 788, 791, 802, 804, 808, 813, 826, 828, 830, 836, 843, 846, 847, 848, 857, 858, 861, 862, 866, 868, 869, 870, 871, 873, 877, 881, 883, 885, 889, 894], "coverag": [14, 29, 44, 59, 74], "bool": [14, 15, 20, 25, 29, 30, 35, 40, 44, 45, 50, 55, 59, 60, 65, 70, 74, 75, 80, 85, 94, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 118, 120, 132, 134, 142, 144, 152, 154, 162, 164, 172, 174, 182, 184, 192, 194, 202, 204, 212, 214, 222, 224, 233, 234, 256, 260, 265, 266, 271, 324, 328, 330, 348, 362, 379, 396, 419, 421, 422, 423, 428, 432, 433, 434, 439, 441, 444, 451, 464, 481, 485, 488, 490, 502, 505, 507, 518, 521, 523, 547, 564, 581, 599, 616, 633, 640, 663, 667, 670, 672, 683, 686, 688, 712, 719, 742, 749, 762, 772, 775, 777, 788, 791, 793, 803, 806, 827, 834, 857, 882, 885], "flag": [14, 20, 29, 35, 44, 50, 59, 65, 74, 80, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 118, 120, 132, 134, 142, 144, 152, 154, 162, 164, 172, 174, 182, 184, 192, 194, 202, 204, 212, 214, 222, 224, 233, 234, 256, 265, 379, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 439, 444, 447, 464, 481, 485, 488, 502, 505, 518, 521, 547, 564, 581, 599, 616, 633, 640, 663, 667, 670, 683, 686, 712, 719, 742, 749, 762, 772, 775, 788, 791, 803, 827, 831, 857, 882, 885], "indic": [14, 20, 24, 29, 35, 39, 44, 48, 50, 54, 59, 65, 69, 74, 80, 84, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 118, 120, 132, 134, 142, 144, 152, 154, 162, 164, 172, 174, 182, 184, 192, 194, 202, 204, 212, 214, 222, 224, 232, 233, 234, 236, 237, 241, 247, 251, 253, 256, 260, 265, 324, 328, 330, 379, 414, 415, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 439, 447, 464, 481, 485, 488, 490, 496, 502, 505, 507, 512, 518, 521, 523, 547, 564, 581, 599, 616, 633, 640, 663, 667, 670, 672, 677, 683, 686, 688, 693, 712, 719, 742, 749, 762, 772, 775, 777, 788, 791, 793, 803, 806, 807, 813, 827, 834, 835, 843, 857, 882, 885, 892], "whether": [14, 15, 20, 25, 29, 30, 35, 40, 44, 45, 50, 55, 59, 60, 65, 70, 74, 75, 80, 85, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 110, 118, 120, 132, 134, 142, 144, 152, 154, 162, 164, 172, 174, 182, 184, 192, 194, 202, 204, 212, 214, 222, 224, 252, 253, 256, 259, 260, 266, 271, 348, 362, 379, 396, 411, 413, 415, 421, 422, 423, 428, 432, 433, 434, 439, 441, 444, 485, 488, 490, 502, 505, 507, 518, 521, 523, 640, 667, 670, 672, 683, 686, 688, 719, 749, 762, 772, 775, 777, 788, 791, 793, 806, 834, 857, 885, 892], "previous": [14, 29, 44, 59, 74, 91, 890, 892, 893], "rerun": [14, 29, 44, 59, 74, 414], "ignor": [14, 29, 44, 59, 74, 415, 813, 843, 885, 889], "chang": [14, 29, 44, 59, 74, 253, 271, 414, 415, 446, 490, 507, 523, 672, 688, 777, 793, 806, 834, 866, 890, 892, 893], "semi": [14, 29, 44, 59, 74, 89], "about": [14, 29, 44, 59, 74, 444, 490, 507, 523, 672, 688, 777, 793, 806, 834, 840, 891, 892], "elimin": [14, 29, 44, 59, 74, 232], "need": [14, 29, 44, 59, 74, 89, 271, 414, 889, 891, 893], "bound": [14, 29, 44, 59, 74, 233, 244, 452, 455, 463, 465, 470, 472, 480, 482, 486, 503, 519, 536, 538, 546, 548, 553, 555, 563, 565, 570, 572, 580, 582, 587, 589, 598, 600, 605, 607, 615, 617, 622, 624, 632, 634, 644, 652, 654, 662, 664, 668, 684, 701, 703, 711, 713, 723, 731, 733, 741, 743, 753, 766, 773, 789, 861, 867, 871, 873, 881, 883], "inf": [14, 29, 44, 59, 74, 644, 723, 753, 766, 861], "similarli": [14, 29, 44, 59, 74], "between": [14, 29, 44, 59, 74, 91, 252, 253, 411, 415, 421, 422, 432, 757, 770, 807, 835, 892, 893], "direct": [14, 29, 44, 59, 74, 434, 892], "normal": [14, 29, 44, 59, 74, 89, 91, 253, 418, 434, 648, 885, 889, 890, 891, 892, 893], "approxim": [14, 29, 44, 59, 74, 256, 259, 261, 265, 427, 448, 449, 450, 461, 465, 467, 468, 469, 478, 482, 533, 534, 535, 544, 548, 550, 551, 552, 561, 565, 567, 568, 569, 578, 582, 584, 585, 586, 595, 597, 600, 602, 603, 604, 613, 617, 619, 620, 621, 630, 634, 649, 650, 651, 660, 664, 698, 699, 700, 709, 713, 728, 729, 730, 739, 743, 868, 869, 870, 879, 883], "scale": [14, 29, 44, 59, 74, 91, 253, 421, 422, 423, 428, 432, 433, 436, 439, 444, 449, 468, 534, 551, 568, 585, 603, 620, 650, 699, 729, 813, 843, 869, 885, 890, 892, 893], "acceler": [14, 29, 44, 59, 74], "ad": [14, 29, 44, 59, 74, 91, 892, 895], "recent": [15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 88, 230, 233, 271], "interest": [15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 892], "center": [15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 88, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 233, 253, 259, 892], "signatur": [15, 25, 30, 40, 45, 55, 60, 70, 75, 85], "axi": [15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 490, 507, 523, 672, 688, 777, 793, 806, 834, 893], "addit": [15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 230, 259, 415, 459, 476, 542, 559, 576, 593, 611, 628, 658, 707, 737, 877, 891, 892], "elif": [15, 25, 30, 40, 45, 55, 60, 70, 75, 85, 891], "get": [16, 17, 19, 23, 31, 32, 34, 38, 46, 47, 49, 53, 61, 62, 64, 68, 76, 77, 79, 83, 256, 257, 258, 259, 260, 261, 267, 269, 274, 275, 282, 287, 288, 295, 300, 306, 311, 318, 319, 324, 325, 328, 330, 333, 339, 345, 387, 403, 411, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 439, 440, 447, 466, 483, 487, 498, 499, 504, 514, 515, 520, 530, 531, 549, 566, 583, 601, 618, 635, 665, 669, 679, 680, 685, 695, 696, 714, 744, 774, 784, 785, 790, 800, 884], "randomstatest": [17, 23, 32, 38, 47, 53, 62, 68, 77, 83], "map": [17, 23, 32, 38, 47, 53, 62, 68, 77, 83], "union": [18, 33, 39, 48, 63, 78, 284, 297, 308, 321, 336, 347], "current": [18, 33, 48, 63, 78, 91, 259, 867, 885, 890, 891, 892], "use_se": [20, 35, 50, 65, 80], "last": [20, 35, 50, 65, 80, 260, 263, 268, 418, 444, 488, 489, 505, 506, 521, 522, 670, 671, 686, 687, 775, 776, 791, 792, 889], "rese": [21, 36, 51, 66, 81], "otherwis": [23, 38, 53, 68, 83, 848], "updat": [24, 39, 54, 69, 84, 91, 256, 259, 419, 420, 421, 424, 425, 426, 427, 428, 429, 431, 434, 436, 446, 447, 466, 483, 488, 505, 521, 549, 566, 583, 601, 618, 635, 665, 670, 686, 714, 744, 775, 791, 866, 884, 886], "overridden": [24, 39, 54, 69, 84, 415, 440], "new": [24, 39, 54, 69, 84, 91, 256, 421, 422, 423, 432, 433, 439, 490, 507, 523, 672, 688, 777, 793, 806, 834, 885], "least": [86, 260, 263, 268, 362, 415, 433], "total": 86, "aris": 86, "experiment": 86, "divid": [87, 94, 98, 99, 100, 101, 102, 103, 104, 105, 803, 827, 885, 892], "sharp_ratio": 87, "lowest": 87, "demonstr": [87, 490, 507, 523, 672, 688, 777, 793, 806, 834, 885], "rand": 87, "po": 87, "kw": 87, "xstar": 87, "alwai": [87, 241, 253, 415, 418, 893], "even": [87, 241, 414, 447, 892], "singleton": 87, "ystar": [87, 89], "zstar": 87, "challeng": 88, "simpli": [88, 91, 890], "tradit": 88, "financ": [88, 892], "choos": 88, "captur": [88, 446, 892, 895], "param_cov": [88, 444], "148534": 88, "508540": 88, "561637": 88, "729435": 88, "442891": 88, "273945": 88, "495087": 88, "049454": 88, "020830": 88, "those": [89, 252, 891, 893], "At": 89, "minimum": [89, 256, 257, 261, 271], "thei": [89, 252, 253, 257, 418, 432, 891, 893, 895], "perform": [89, 91, 252, 253, 261, 267, 446], "For": [89, 230, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 892, 893], "simplic": 89, "consid": [89, 252, 265, 270, 889], "ol": [89, 91, 253, 256, 257, 259, 265, 266, 267, 268, 271, 279, 292, 315, 348, 362, 396, 413, 415], "regress": [89, 91, 253, 256, 257, 259, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 274, 276, 287, 289, 300, 301, 311, 312, 325, 326, 339, 340, 348, 356, 362, 371, 375, 385, 391, 392, 395, 396, 407, 410, 413, 414, 496, 512, 677, 693], "regressand": 89, "x_orig": 89, "linalg": 89, "pinv": 89, "ravel": 89, "resid": [89, 264, 266, 267, 269, 415, 441, 444, 448, 450, 452, 455, 459, 461, 463, 465, 467, 469, 470, 472, 476, 478, 480, 482, 533, 535, 536, 538, 542, 544, 546, 548, 550, 552, 553, 555, 559, 561, 563, 565, 567, 569, 570, 572, 576, 578, 580, 582, 584, 586, 587, 589, 593, 595, 598, 600, 602, 604, 605, 607, 611, 613, 615, 617, 619, 621, 622, 624, 628, 630, 632, 634, 636, 637, 640, 649, 651, 652, 654, 658, 660, 662, 664, 698, 700, 701, 703, 707, 709, 711, 713, 715, 716, 719, 728, 730, 731, 733, 737, 739, 741, 743, 745, 746, 749, 758, 759, 762, 853, 854, 857, 867, 868, 870, 871, 873, 877, 879, 881, 883, 889, 890, 892, 893], "y_star": 89, "1d": [89, 893], "functool": 89, "wrapper": [89, 252], "fix": [89, 90, 91, 415, 418, 419, 426, 428, 436, 441, 887, 888, 895], "ols_parti": 89, "effect": [89, 893], "conduct": 89, "account": [89, 252, 259, 276, 289, 301, 312, 326, 340, 348, 356, 362, 375, 396, 889], "ols_semi_v2": 89, "ultim": 89, "meaningfulli": 89, "simpler": 89, "rel": [89, 436], "expens": [89, 866], "rare": 89, "encount": 89, "actual": [89, 253, 418, 891], "cousin": 89, "fulli": [89, 268, 413], "model": [89, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 247, 248, 251, 254, 256, 257, 258, 259, 260, 261, 264, 265, 266, 267, 268, 270, 274, 279, 287, 292, 300, 311, 325, 339, 348, 355, 356, 357, 360, 362, 366, 369, 370, 371, 374, 375, 376, 379, 396, 411, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 446, 447, 449, 451, 452, 454, 455, 457, 458, 459, 461, 463, 465, 468, 470, 472, 474, 475, 476, 478, 480, 482, 485, 488, 489, 490, 492, 494, 495, 496, 497, 499, 502, 505, 506, 507, 508, 510, 511, 512, 513, 515, 518, 521, 522, 523, 524, 526, 527, 528, 529, 531, 534, 536, 538, 540, 541, 542, 544, 546, 548, 551, 553, 555, 557, 558, 559, 561, 563, 565, 568, 570, 572, 574, 575, 576, 578, 580, 582, 585, 587, 589, 591, 592, 593, 595, 598, 600, 603, 605, 607, 609, 610, 611, 613, 615, 617, 620, 622, 624, 626, 627, 628, 630, 632, 634, 650, 652, 654, 656, 657, 658, 660, 662, 664, 667, 670, 671, 672, 673, 675, 676, 677, 678, 680, 683, 686, 687, 688, 689, 691, 692, 693, 694, 696, 699, 701, 703, 705, 706, 707, 709, 711, 713, 729, 731, 733, 735, 736, 737, 739, 741, 743, 772, 775, 776, 777, 778, 780, 781, 782, 783, 785, 788, 791, 792, 793, 794, 795, 796, 797, 799, 803, 806, 807, 808, 810, 811, 812, 814, 816, 827, 834, 835, 836, 838, 839, 842, 845, 848, 851, 857, 866, 867, 869, 871, 873, 875, 876, 877, 879, 881, 883, 891, 893, 895], "through": [89, 256, 259, 414], "integr": [89, 91, 265, 644, 645, 723, 724, 753, 754, 766, 767, 861, 862], "asymptot": [89, 256, 259, 271], "desir": [89, 893], "present": 89, "rng": [89, 455, 459, 472, 476, 490, 507, 523, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 654, 658, 672, 688, 703, 707, 733, 737, 777, 793, 806, 834, 873, 877, 889, 893], "facilit": [89, 816, 851], "manner": 89, "continu": [89, 230], "assum": [89, 91, 270, 414, 415, 418, 488, 505, 521, 640, 670, 686, 719, 749, 762, 775, 791, 867, 889, 891, 892, 893], "mle": [89, 485, 502, 518, 667, 683, 772, 788], "ols_para": 89, "beta": [89, 253, 263, 265, 268, 270, 271, 414, 418, 427, 885, 889, 890, 892, 893], "sigma2": [89, 449, 452, 463, 468, 470, 480, 534, 536, 546, 551, 553, 563, 568, 570, 580, 585, 587, 598, 603, 605, 615, 620, 622, 632, 640, 650, 652, 662, 699, 701, 711, 719, 729, 731, 741, 749, 762, 857, 867, 869, 871, 881, 890, 892], "r_": [89, 891], "plain": 89, "specifi": [89, 91, 414, 415, 418, 421, 427, 429, 432, 440, 441, 447, 489, 506, 522, 671, 687, 776, 792, 803, 827, 885, 886, 888, 889, 891, 893], "complet": [89, 253, 266, 271, 367, 416, 885, 893], "come": [90, 414], "packag": [90, 91, 230, 890], "exponenti": [90, 425, 426, 892], "move": [90, 91, 232, 233, 234, 426, 892], "movingblockbootstrap": 90, "systemat": [90, 892], "under": [90, 267, 269, 271, 384, 401, 414], "It": [90, 91, 252, 253, 356, 375, 415, 432, 889, 893], "recommend": [90, 440, 446], "bug": 91, "arch_model": [91, 418, 490, 507, 523, 672, 688, 777, 793, 807, 813, 835, 843, 885, 888, 889, 891, 892, 893], "power": [91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 117, 131, 141, 151, 161, 171, 181, 191, 201, 211, 221, 261, 415, 419, 427, 429, 465, 482, 548, 565, 582, 600, 617, 634, 664, 713, 743, 883, 885, 889, 891, 892], "figarch": [91, 885], "constructor": [91, 892], "gh572": 91, "affect": [91, 263, 268, 271, 414, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835], "downstream": 91, "project": 91, "due": [91, 276, 289, 301, 312, 326, 340, 414, 418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 890, 893], "overli": 91, "assert": 91, "gh569": 91, "std_resid": [91, 441, 444, 648, 727, 757, 770, 865, 892], "would": [91, 253, 893], "rais": [91, 440, 455, 466, 472, 483, 488, 490, 505, 507, 521, 523, 538, 549, 555, 566, 572, 583, 589, 601, 607, 618, 624, 635, 654, 665, 670, 672, 686, 688, 703, 714, 733, 744, 775, 777, 791, 793, 806, 834, 873, 884], "except": [91, 252, 415, 418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 891, 892, 893], "gh565": 91, "forecast": [91, 252, 253, 442, 443, 807, 817, 818, 820, 835, 888, 893], "multi": [91, 260, 415, 418], "usign": 91, "exogen": [91, 421, 422, 423, 432, 433, 439, 490, 496, 499, 507, 512, 515, 523, 531, 672, 677, 680, 688, 693, 696, 777, 785, 793, 806, 834, 885, 888, 892], "gh551": 91, "lag": [91, 115, 125, 139, 149, 159, 169, 179, 189, 199, 209, 219, 229, 256, 257, 258, 259, 260, 261, 265, 266, 267, 270, 275, 276, 288, 289, 301, 312, 315, 326, 335, 340, 362, 366, 367, 386, 411, 414, 419, 421, 422, 423, 425, 427, 429, 431, 432, 433, 434, 439, 490, 496, 507, 512, 523, 597, 672, 677, 688, 693, 777, 793, 803, 807, 827, 835, 885, 889, 890, 892], "dfgl": [91, 413, 415], "gl": [91, 257, 413, 428, 890], "detrend": [91, 257, 271, 415], "studi": [91, 258, 261, 268], "perron": [91, 257, 259, 270, 271, 413, 414], "qu": [91, 257], "2007": [91, 257], "now": [91, 490, 507, 523, 672, 688, 777, 793, 806, 834], "immut": 91, "trend": [91, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 283, 286, 296, 299, 307, 310, 320, 323, 334, 338, 346, 384, 401, 411, 414, 415], "legaci": [91, 891], "replac": [91, 414, 418, 427, 893], "favor": [91, 414], "get_stat": [91, 892], "set_stat": [91, 892], "studentst": [91, 885, 892], "archinmean": [91, 895], "process": [91, 260, 261, 271, 411, 413, 414, 415, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 439, 440, 442, 443, 447, 456, 464, 466, 473, 481, 483, 496, 498, 512, 514, 528, 530, 539, 547, 549, 556, 564, 566, 573, 581, 583, 590, 599, 601, 608, 616, 618, 625, 633, 635, 655, 663, 665, 677, 679, 693, 695, 704, 712, 714, 734, 742, 744, 782, 784, 800, 817, 820, 824, 874, 882, 884, 885, 886, 888, 889, 891], "extend": [91, 413], "volatilityprocess": [91, 421, 422, 423, 432, 433, 439, 498, 514, 530, 679, 695, 784, 800, 895], "volatility_updat": [91, 419, 420, 424, 425, 426, 427, 428, 429, 431, 434, 436, 447], "volatilityupdat": [91, 466, 483, 549, 566, 583, 601, 618, 635, 665, 714, 744, 884, 895], "environment": 91, "disabl": [91, 488, 505, 521, 670, 686, 775, 791], "extens": [91, 258], "compil": 91, "linux": 91, "osx": 91, "export": [91, 360, 379, 816, 851], "arch_no_binari": 91, "powershel": 91, "env": 91, "cmd": 91, "minim": [91, 265, 415, 418, 444, 488, 505, 521, 670, 686, 775, 791, 831, 891], "preserv": 91, "behavior": [91, 891], "futur": [91, 230, 490, 507, 523, 672, 688, 777, 793, 806, 834], "often": [91, 497, 513, 529, 678, 694, 783, 799, 892], "substanti": [91, 892], "memori": [91, 256], "especi": [91, 891], "__future__": [91, 889, 891], "handl": [91, 807, 813, 835, 843], "possibl": [91, 260, 271, 414, 415, 889], "e_t": [91, 418, 885, 891, 892], "fit": [91, 253, 266, 418, 421, 422, 423, 426, 432, 433, 439, 441, 444, 490, 497, 507, 513, 523, 529, 672, 678, 688, 694, 777, 783, 793, 799, 806, 807, 809, 813, 816, 834, 835, 837, 843, 851, 885, 890, 891, 892, 893, 894], "typing_extens": 91, "subtli": 91, "introduc": 91, "incorrect": 91, "ewma": [91, 426, 436, 728, 892], "gh458": 91, "aparch": [91, 885], "volatilti": [91, 419, 420, 424, 425, 426, 427, 428, 429, 431, 434, 436, 447, 456, 473, 539, 556, 573, 590, 608, 625, 655, 704, 734, 874], "gh443": 91, "python": [91, 446, 891], "pyproject": 91, "toml": 91, "gh438": 91, "degre": [91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 264, 266, 358, 377, 444, 757, 770, 847, 892, 894], "freedom": [91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 264, 266, 358, 377, 444, 757, 770, 847, 892, 894], "gh437": 91, "harx": [91, 496, 512, 693, 885, 890, 892], "gh417": 91, "minor": 91, "doc": [91, 230], "small": [91, 252, 253, 890], "notabl": 91, "featur": [91, 889, 892], "part": 91, "gh395": 91, "kernel": [91, 262, 264, 266, 269, 271, 348, 362, 371, 396, 414], "bartlett": [91, 97, 262, 271, 348, 362, 396, 414], "parzen": [91, 96, 99, 100, 101, 105, 262, 271, 348, 362, 396], "suppos": [91, 893], "bandwidth": [91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 110, 111, 114, 115, 117, 120, 121, 124, 125, 131, 134, 135, 138, 139, 141, 144, 145, 148, 149, 151, 154, 155, 158, 159, 161, 164, 165, 168, 169, 171, 174, 175, 178, 179, 181, 184, 185, 188, 189, 191, 194, 195, 198, 199, 201, 204, 205, 208, 209, 211, 214, 215, 218, 219, 221, 224, 225, 228, 229, 262, 264, 266, 269, 271, 348, 362, 396, 413, 414], "adf": [91, 257, 258, 259, 261, 267, 270, 271, 292, 392, 411, 413, 414, 415], "kpss": [91, 413], "phillipsperron": [91, 270, 271, 413, 415], "varianceratio": [91, 413, 415], "zivotandrew": [91, 413, 415], "infeas": 91, "too": [91, 253], "short": [91, 95, 129, 356, 375, 436], "reduc": 91, "gh364": 91, "gh366": 91, "phillip": [91, 258, 259, 268, 270, 271, 413], "ouliari": [91, 270, 271, 413], "phillips_ouliari": [91, 270, 413, 414], "cointegr": [91, 230, 256, 259], "gh360": 91, "canonicalcointegratingreg": [91, 413], "dynamicol": [91, 413], "fullymodifiedol": [91, 413], "gh356": 91, "gh359": 91, "engl": [91, 267, 270, 271, 362, 413, 414], "granger": [91, 267, 270, 271, 362, 413, 414], "engle_grang": [91, 271, 362, 413, 414], "gh354": 91, "issu": [91, 421, 422, 423, 432, 433, 439, 885, 890], "warn": [91, 415, 488, 490, 505, 507, 521, 523, 670, 672, 686, 688, 775, 777, 791, 793, 806, 834, 889, 891], "mutat": 91, "Will": 91, "univari": [91, 230, 261, 414, 885, 886, 889, 890, 892, 893], "skewstud": [91, 885, 892], "did": 91, "prevent": 91, "gh353": 91, "restor": [91, 415, 892], "vendor": 91, "copi": [91, 415, 889, 891], "property_cach": 91, "conda": 91, "gh338": 91, "gh341": 91, "gh342": 91, "gh343": 91, "gh345": 91, "gh346": 91, "caus": 91, "fail": [91, 891], "scipi": [91, 444, 488, 505, 521, 670, 686, 775, 791, 831], "gh339": 91, "drop": [91, 415, 891], "nep": 91, "gh334": 91, "partial": [91, 644, 723, 753, 766, 861], "partial_mo": 91, "gh329": 91, "overflowerror": 91, "gh331": 91, "gh326": 91, "gh315": 91, "check": [91, 231, 233, 253, 415, 489, 506, 522, 671, 687, 776, 792, 867], "zero": [91, 253, 260, 414, 439, 452, 470, 536, 553, 570, 587, 605, 622, 652, 701, 731, 782, 871, 885, 889, 890, 892], "gh322": 91, "arch_lm_test": 91, "gh313": 91, "certain": 91, "environ": 91, "reload": 91, "gh317": 91, "remov": [91, 94, 98, 99, 100, 101, 102, 103, 104, 105, 496, 512, 528, 677, 693, 782], "auto_bandwidth": [91, 413], "gh303": 91, "michael": 91, "rabba": 91, "rescal": [91, 356, 371, 375, 421, 422, 423, 432, 433, 439, 440, 848, 885], "help": [91, 889, 893], "report": [91, 271, 421, 422, 423, 432, 433, 439, 885], "poorli": 91, "wrong": 91, "gh288": 91, "optimization_result": [91, 444], "simplifi": [91, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889], "converg": [91, 414, 421, 422, 423, 432, 433, 439, 488, 505, 521, 670, 686, 775, 791, 885, 890, 892, 893], "numer": [91, 260, 414, 415, 463, 480, 485, 502, 518, 546, 563, 580, 598, 615, 632, 662, 667, 683, 711, 741, 772, 788, 840, 881, 890], "gh292": 91, "object": [91, 411, 418, 441, 444, 488, 489, 505, 506, 521, 522, 670, 671, 686, 687, 775, 776, 791, 792, 816, 851, 887, 890, 891, 892, 893], "gh290": 91, "nonrobust": [91, 415], "infer": [91, 260, 268, 892], "overlap": [91, 260, 415, 432], "gh286": 91, "correctli": [91, 415, 892], "zivot": [91, 261, 413], "jim": 91, "varanelli": 91, "uneven": 91, "gh260": 91, "lm": [91, 803, 827], "gh261": 91, "veri": [91, 256, 414, 891], "gh262": 91, "abil": [91, 231, 233], "gh259": 91, "fraction": [91, 427], "garch": [91, 418, 421, 422, 496, 512, 528, 677, 693, 782, 885, 886, 889, 890, 891, 893], "enabl": 91, "backcast": [91, 449, 452, 455, 463, 468, 470, 472, 480, 485, 488, 502, 505, 518, 521, 534, 536, 538, 546, 551, 553, 555, 563, 568, 570, 572, 580, 585, 587, 589, 598, 603, 605, 607, 615, 620, 622, 624, 632, 650, 652, 654, 662, 667, 670, 683, 686, 699, 701, 703, 711, 729, 731, 733, 741, 772, 775, 788, 791, 866, 869, 871, 873, 881], "place": 91, "big": 91, "less": [91, 257, 892], "incorrectli": 91, "gh248": 91, "mida": [91, 434], "hyperbol": [91, 434], "weight": [91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 112, 122, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226, 426, 427, 436, 890, 892], "midashyperbol": 91, "gh233": 91, "gh225": 91, "dickei": [91, 256, 257, 267, 270, 271, 385, 392, 411, 413, 414], "fuller": [91, 256, 257, 267, 270, 271, 385, 392, 411, 413, 414], "mc": [91, 253], "fixedvari": 91, "pre": [91, 414, 418, 429, 485, 502, 518, 667, 683, 772, 788, 866], "zig": [91, 895], "zag": [91, 895], "zeromean": [91, 889, 890, 892], "gh156": 91, "first_ob": [91, 488, 489, 505, 506, 521, 522, 670, 671, 686, 687, 775, 776, 791, 792, 891], "last_ob": [91, 418, 488, 489, 505, 506, 521, 522, 670, 671, 686, 687, 775, 776, 791, 792, 889, 891], "mimic": 91, "jointli": [91, 419, 426, 447], "smooth": [91, 426, 436], "gh195": 91, "hedgehog": [91, 893], "plot": [91, 253, 414, 415, 418, 807, 835, 890, 891, 892, 893], "hansen": [91, 231, 232, 233, 252, 268, 437], "stanislav": 91, "khrapov": 91, "latest": [91, 230], "typo": 91, "give": 91, "pvalu": [91, 232, 233, 241, 242, 243, 253, 256, 257, 258, 259, 260, 261, 264, 266, 267, 269, 411, 444], "best": [91, 252, 253, 261], "nan": [91, 253, 418, 441, 444, 451, 454, 465, 482, 490, 507, 523, 548, 565, 582, 600, 617, 634, 664, 672, 688, 713, 743, 777, 793, 806, 834, 883, 891, 892], "hold_back": [91, 421, 422, 423, 432, 433, 439, 440, 885], "roll": 91, "redefin": 91, "held": 91, "back": [91, 432], "irrespect": 91, "comparison": [91, 230, 232, 233, 234, 252, 415, 890], "procedur": [91, 230, 233, 234, 252, 253], "typograph": 91, "add": [91, 253, 892], "augment": [91, 256, 267, 270, 271, 385, 411, 413, 414], "locat": [91, 230, 441, 444, 463, 480, 490, 507, 523, 546, 563, 580, 598, 615, 632, 662, 672, 688, 711, 741, 777, 793, 806, 834, 867, 881, 885], "refactor": 91, "routin": [91, 230, 413], "old": [91, 258], "numba": 91, "jit": 91, "recurs": [91, 418, 427, 446, 448, 452, 455, 463, 467, 470, 472, 480, 488, 505, 521, 533, 536, 538, 546, 550, 553, 555, 563, 567, 570, 572, 580, 584, 587, 589, 598, 602, 605, 607, 615, 619, 622, 624, 632, 649, 652, 654, 662, 670, 686, 698, 701, 703, 711, 728, 731, 733, 741, 775, 791, 866, 867, 868, 871, 873, 881, 889], "framework": [91, 415], "purpos": [91, 889, 895], "via": 91, "df_adjust": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 264, 266, 348, 356, 362, 371, 375, 396], "force_int": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 271, 348, 362, 396], "quadraticspectr": 93, "bandwidth_scal": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "demean": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 108, 118, 132, 142, 152, 162, 172, 182, 192, 202, 212, 222, 893], "restrict": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 120, 134, 144, 154, 164, 174, 184, 194, 204, 214, 224, 265, 419, 431, 889], "kernel_const": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "kernel_weight": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "opt_bandwidth": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105], "rate": [93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 234, 252, 253, 254, 414, 415], "newei": [94, 258, 259, 262, 271, 315, 348, 362, 396, 415], "west": [94, 258, 259, 262, 271, 315, 348, 362, 396, 414, 415, 892], "adjust": [94, 98, 99, 100, 101, 102, 103, 104, 105, 264, 266, 348, 358, 362, 377, 396, 444, 847], "minu": [94, 98, 99, 100, 101, 102, 103, 104, 105, 260, 418], "product": [94, 98, 99, 100, 101, 102, 103, 104, 105, 271], "1s": [94, 98, 99, 100, 101, 102, 103, 104, 105], "nvar": [94, 98, 99, 100, 101, 102, 103, 104, 105], "forc": [94, 98, 99, 100, 101, 102, 103, 104, 105, 271, 348, 362, 396], "w": [94, 98, 99, 100, 101, 102, 103, 104, 105, 256, 258, 259, 260, 261, 265, 813, 843], "begin": [94, 98, 99, 100, 101, 102, 103, 104, 105, 261, 263, 268, 271, 418, 885, 889], "leq1": [94, 98, 99, 100, 101, 103, 104, 105], "ldot": [94, 98, 99, 100, 101, 102, 103, 104, 105, 418], "short_run": [95, 109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223], "one_sided_strict": [95, 109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223], "long_run": [95, 109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223], "one_sid": [95, 109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223], "strict": [95, 128, 271], "label": [95, 490, 507, 523, 672, 688, 777, 793, 806, 834, 891, 893], "gamma_0": 95, "lambda_1": [95, 427], "omega": [95, 263, 268, 271, 418, 419, 420, 425, 427, 429, 431, 434, 702, 885, 889, 890, 892, 893], "prime": [95, 268], "lambda_0": [95, 263, 268], "6z": 98, "leq": [98, 253], "cauchi": 99, "geometr": 100, "reisz": 101, "quadrat": [102, 256, 262, 263, 265, 268, 270, 271, 348, 362, 396, 411, 414], "spectral": [102, 262, 271, 348, 362, 396], "sin": 102, "co": [102, 103, 104, 105], "pi": [102, 103, 104, 105, 425, 719, 749, 762], "tukei": [103, 104, 105], "ham": 103, "46": [103, 414, 415, 892], "han": 104, "436": 105, "564": 105, "covarianceestim": [109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223, 266], "_t": [114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 263, 268, 271, 356, 375, 418], "c_k": [114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228], "q": [114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228, 265, 356, 375, 418, 419, 425, 427, 429, 782, 885, 890, 891, 892, 893], "2q": [114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228], "determin": [114, 115, 124, 125, 138, 139, 148, 149, 158, 159, 168, 169, 178, 179, 188, 189, 198, 199, 208, 209, 218, 219, 228, 229, 253, 261, 270, 413, 436, 644, 723, 753, 766, 861], "float64arrai": [126, 127, 128, 129, 448, 449, 452, 459, 467, 468, 470, 476, 485, 502, 518, 533, 534, 536, 542, 550, 551, 553, 559, 567, 568, 570, 576, 584, 585, 587, 593, 602, 603, 605, 611, 619, 620, 622, 628, 637, 640, 645, 647, 649, 650, 652, 658, 667, 683, 698, 699, 701, 707, 716, 719, 724, 726, 728, 729, 731, 737, 746, 749, 754, 756, 759, 762, 767, 769, 772, 788, 805, 814, 815, 822, 823, 824, 825, 829, 845, 850, 854, 857, 862, 864, 868, 869, 871, 877], "stabl": 230, "releas": 230, "develop": 230, "devel": 230, "toolbox": 230, "volatil": [230, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 439, 440, 441, 444, 446, 448, 455, 459, 464, 466, 467, 472, 476, 481, 483, 489, 490, 496, 506, 507, 512, 522, 523, 528, 533, 538, 542, 547, 549, 550, 555, 559, 564, 566, 567, 572, 576, 581, 583, 584, 589, 593, 599, 601, 602, 607, 611, 616, 618, 619, 624, 628, 633, 635, 649, 654, 658, 663, 665, 671, 672, 677, 687, 688, 693, 698, 703, 707, 712, 714, 733, 737, 742, 744, 776, 777, 782, 792, 793, 805, 806, 807, 813, 815, 829, 834, 835, 843, 850, 885, 886, 889], "root": [230, 256, 257, 258, 259, 260, 261, 270, 271, 280, 293, 304, 316, 331, 343, 411, 414, 421, 805, 829], "plan": 230, "expand": 230, "relev": [230, 233, 885, 887], "financi": [230, 260, 414, 415, 892, 893], "cite": 230, "zenodo": 230, "kevin": [230, 434], "sheppard": [230, 434], "2021": [230, 415, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 890, 891, 892, 893], "march": 230, "bashtag": 230, "v4": 230, "http": [230, 256, 259, 437], "5281": 230, "593254": 230, "2005": [231, 233, 234, 252, 414], "superior": [231, 233, 234, 241, 248, 251], "predict": [231, 233, 415], "busi": [231, 233, 256, 258, 259, 261], "econom": [231, 233, 256, 257, 258, 259, 261, 437, 892], "hansenlundenason": 231, "lund": [231, 232, 252], "nason": [231, 232, 252], "econometrica": [231, 232, 233, 234, 257, 258, 259, 263, 265, 271], "79": [231, 232, 414, 885, 892], "453": [231, 232], "497": [231, 232], "romanowolf": 231, "stepwis": [231, 234], "formal": [231, 234, 252], "snoop": [231, 233, 234], "73": [231, 234, 885], "1237": [231, 234, 890], "1282": [231, 234], "realiti": [231, 233, 253], "68": [231, 233, 891, 892], "1097": [231, 233], "1126": [231, 233], "loss": [232, 233, 234, 252, 253, 276, 289, 301, 312, 326, 340], "sb": [232, 233, 234], "cbb": [232, 233, 234], "mbb": [232, 233, 234], "exclud": [232, 253, 261, 421, 422, 423, 432, 433, 439, 885], "inclus": [232, 238], "benchmark": [233, 234, 241, 252, 253], "known": [233, 253, 271, 348, 362, 396, 455, 472, 538, 555, 572, 589, 607, 624, 654, 703, 733, 873, 892], "snooper": [233, 253], "differenti": [233, 234], "stepm": [233, 247], "re": [233, 253, 259, 414, 418, 421, 422, 423, 432, 433, 439, 490, 507, 523, 672, 688, 777, 793, 807, 813, 835, 843, 885, 889, 891, 892, 893], "decis": 233, "never": 233, "consist": [233, 234, 241, 243, 244, 253, 258, 259, 362, 414, 889, 890, 892, 893], "closer": [233, 893], "log": [233, 256, 257, 258, 259, 260, 414, 415, 421, 444, 465, 482, 491, 548, 565, 582, 600, 617, 634, 640, 664, 713, 719, 743, 749, 762, 804, 828, 840, 857, 883, 885, 889, 890, 892, 893], "wors": [233, 241, 252, 253], "365": 233, "380": [233, 253, 890], "spa": 234, "wise": 234, "fwer": 234, "superior_model": [234, 253], "smallest": 238, "pvalue_typ": 241, "reject": [241, 253, 256, 257, 258, 259, 260, 414, 415], "equal": [241, 253, 265, 488, 505, 521, 670, 686, 775, 791], "string": [241, 271, 348, 362, 396, 418, 421, 444, 490, 507, 523, 672, 688, 777, 793, 806, 807, 813, 834, 835, 843], "critic": [241, 243, 256, 257, 258, 259, 260, 261, 267, 269, 270, 271, 273, 281, 286, 294, 299, 305, 310, 317, 323, 332, 338, 344, 383, 394, 400, 409, 411, 414, 415, 894], "respect": [241, 813, 843], "subset": 241, "crit_val": [243, 267, 269], "methodolog": [243, 362, 892], "pval": [244, 894], "selector": 247, "activ": 247, "primarili": 247, "boolean": [247, 488, 505, 521, 670, 686, 775, 791], "smaller": [252, 253], "null": [252, 253, 256, 257, 258, 259, 260, 261, 267, 269, 270, 271, 277, 290, 302, 313, 327, 341, 384, 388, 401, 404, 411, 413, 414, 415, 444, 852, 894], "h_0": [252, 253], "max_i": [252, 253], "l_i": [252, 253], "geq": [252, 253, 418, 419], "l_": [252, 253, 421, 422, 431, 432], "bm": [252, 253], "h_1": 252, "min_i": 252, "fact": 252, "potenti": 252, "realitycheck": [252, 253], "modif": [252, 257], "attempt": [252, 261, 455, 472, 538, 555, 572, 589, 607, 624, 654, 703, 733, 873, 891], "identifi": [252, 253], "expect": [252, 253, 411, 889, 891], "probabl": [252, 253, 645, 724, 754, 767, 862], "mcp": 252, "familywis": [252, 253, 254], "gen": 253, "23456": 253, "throughout": 253, "31": [253, 260, 418, 885, 889, 891, 892], "examin": 253, "aspect": 253, "There": [253, 415, 528, 782, 886, 889, 892], "outperform": 253, "sequenti": 253, "indistinguish": 253, "That": [253, 891], "prefer": 253, "larger": [253, 418, 427, 429, 455, 472, 538, 555, 572, 589, 607, 624, 654, 703, 733, 873, 889, 891, 893], "evalu": [253, 490, 507, 523, 637, 672, 688, 716, 746, 759, 777, 793, 806, 834, 854, 857, 866, 885, 890, 891, 892], "increas": [253, 892, 893], "absolut": [253, 892], "mse": 253, "mad": 253, "hypothesi": [253, 256, 257, 258, 259, 260, 261, 267, 269, 270, 272, 277, 285, 290, 298, 302, 309, 313, 322, 327, 337, 341, 381, 384, 388, 397, 401, 404, 411, 414, 415, 894], "compet": 253, "technic": 253, "trade": [253, 261, 813, 843], "rule": [253, 891], "serv": 253, "predictor": 253, "statsmodel": [253, 256, 257, 258, 259, 266, 362, 415], "contamin": 253, "nois": [253, 415], "made": [253, 261, 418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 893], "bm_factor": 253, "half": 253, "bm_beta": 253, "bm_loss": 253, "model_factor": 253, "model_loss": 253, "rang": [253, 261, 415, 889, 890, 891, 893], "model_beta": 253, "su": 253, "variou": 253, "regard": 253, "real": 253, "work": [253, 256, 259], "given": [253, 436, 489, 506, 522, 671, 687, 749, 776, 792, 892], "realiz": [253, 490, 507, 523, 672, 688, 777, 793, 806, 834], "paper": [253, 256, 259, 261, 437], "005": 253, "amount": [253, 418], "250": [253, 490, 507, 523, 672, 688, 777, 793, 807, 835, 889, 890, 893], "30": [253, 418, 892], "60": [253, 415, 885, 892], "80": 253, "ideal": 253, "45": [253, 414, 885, 890, 892], "o": [253, 418, 419, 425, 429, 782, 885, 890, 891, 892, 893], "line": [253, 263, 268, 891], "col": 253, "sort": 253, "linspac": 253, "995": [253, 889], "violat": [253, 891], "039": 253, "049": 253, "050": 253, "clearli": [253, 414, 415], "avg_model_loss": 253, "style": 253, "similar": [253, 254, 414, 415, 418, 437, 891, 893], "primari": 253, "just": 253, "ask": 253, "question": 253, "split": 253, "39": [253, 414, 885, 890, 892], "379": [253, 892], "466": 253, "475": 253, "better_model": 253, "concat": [253, 892, 893], "isin": 253, "logical_not": 253, "rot": 253, "270": [253, 261], "easili": [253, 418, 891, 893], "001": [253, 415, 885, 889, 890, 892], "003": [253, 890], "120": [253, 259], "140": [253, 890], "011": 253, "074": 253, "101": [253, 415], "160": 253, "118": 253, "216": 253, "300": [253, 782], "287": 253, "443": 253, "180": 253, "460": 253, "506": 253, "340": 253, "536": 253, "240": [253, 889], "740": 253, "360": [253, 813, 843], "840": [253, 414, 890], "320": [253, 890], "260": [253, 890, 892], "420": 253, "280": [253, 415], "440": 253, "480": 253, "000": [253, 258, 271, 414, 415, 885, 889, 890, 892, 893], "statu": 253, "design": 254, "max_lag": [256, 257, 261, 265, 267, 270, 415], "aic": [256, 257, 261, 265, 270, 415, 441, 444, 885, 889, 890, 892, 893], "low_memori": [256, 257], "omit": [256, 257, 258, 259, 261, 496, 512, 677, 693], "ct": [256, 257, 258, 259, 261, 263, 265, 268, 270, 271, 411, 414, 415], "ctt": [256, 263, 265, 268, 270, 271, 411, 414, 415], "No": [256, 259, 261, 263, 265, 267, 268, 269, 270, 271, 411, 414, 415, 644, 723, 753, 766, 861, 885, 889, 890, 891, 892, 893], "linear": [256, 257, 258, 259, 261, 263, 265, 268, 270, 271, 411, 415, 418, 453, 471, 484, 486, 488, 496, 501, 503, 505, 512, 517, 519, 521, 537, 554, 571, 588, 606, 623, 653, 666, 668, 670, 677, 682, 684, 686, 693, 732, 771, 773, 775, 787, 789, 791, 872], "bic": [256, 257, 261, 265, 270, 415, 441, 444, 885, 889, 890, 892, 893], "akaik": [256, 257, 261, 265, 441, 444, 802, 826], "ic": [256, 257, 261], "schwarz": [256, 257, 261, 441, 444, 804, 828], "bayesian": [256, 257, 261, 265, 441, 444, 804, 828], "slower": 256, "obtain": [256, 259], "surfac": [256, 259], "2010": [256, 259, 260, 418, 891], "tabl": [256, 259, 411, 816, 851, 889], "signific": [256, 259, 261, 892], "judg": [256, 259], "autolag": [256, 261], "maxlag": 256, "green": 256, "prentic": 256, "hall": 256, "saddl": 256, "river": 256, "jersei": 256, "hamilton": [256, 259], "princeton": [256, 259, 260], "167": [256, 259], "76": [256, 259, 414, 885, 892], "queen": [256, 259], "dept": [256, 259], "idea": [256, 259, 893], "repec": [256, 259], "qed": [256, 259], "wpaper": [256, 259], "1227": [256, 259], "html": [256, 259, 816, 851], "macrodata": [256, 257, 258, 259], "inflat": [256, 257, 258, 259, 892], "diff": [256, 257, 258, 259, 348, 396, 411, 415], "cpi": [256, 257, 258, 259, 892], "4f": [256, 257, 258, 259, 260], "format": [256, 257, 258, 259, 260, 411, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889], "0931": 256, "0271": 256, "2111": 256, "0822": 256, "alternative_hypothesi": [256, 257, 258, 259, 260, 261, 267, 269], "critical_valu": [256, 257, 258, 259, 260, 261, 267, 269, 894], "determinist": [256, 257, 258, 259, 260, 261, 263, 265, 268, 270, 271, 273, 282, 286, 295, 299, 306, 310, 319, 323, 333, 338, 345, 362, 414, 889], "nob": [256, 257, 258, 259, 260, 261, 421, 422, 423, 432, 433, 439, 441, 444, 459, 476, 490, 496, 507, 512, 523, 528, 542, 559, 576, 593, 611, 628, 658, 672, 677, 688, 693, 707, 737, 777, 782, 793, 798, 804, 805, 806, 828, 829, 834, 857, 866, 867, 877, 889, 892], "null_hypothesi": [256, 257, 258, 259, 260, 261, 267, 269], "valid_trend": [256, 257, 258, 259, 260, 261, 282, 295, 306, 319, 333, 345], "valid": [256, 257, 258, 259, 260, 261, 283, 296, 307, 318, 320, 334, 346, 488, 490, 505, 507, 521, 523, 670, 672, 686, 688, 775, 777, 791, 793, 806, 834], "elliott": 257, "rothenberg": 257, "stock": [257, 265], "effici": 257, "autoregress": [257, 265, 422, 432, 437, 892], "64": [257, 415, 892], "813": 257, "836": 257, "finit": 257, "ng": 257, "letter": 257, "94": [257, 426, 892], "7611": 257, "0059": 257, "9036": 257, "0447": 257, "kwiatkowski": 258, "schmidt": 258, "shin": 258, "stationar": [258, 415], "hobijn": 258, "et": [258, 644, 723, 753, 766, 861], "al": [258, 644, 723, 753, 766, 861], "1998": 258, "1991": [258, 262], "schwert": [258, 261], "1989": [258, 261, 268], "weakli": [258, 411, 414, 415], "were": [258, 271, 490, 507, 523, 672, 688, 777, 793, 806, 834, 893], "heteroskedast": [258, 259, 260, 330, 362, 803, 827, 890, 892], "59": [258, 415, 890], "817": 258, "858": [258, 415, 890, 892], "franc": 258, "oom": 258, "statistica": 258, "neerlandica": 258, "52": [258, 414, 813, 843, 885], "483": 258, "502": 258, "1992": [258, 261, 263, 265], "against": [258, 489, 506, 522, 671, 687, 776, 792], "159": [258, 261], "178": 258, "61": [258, 890, 892], "631": [258, 889], "653": [258, 890], "mont": [258, 261, 888], "carlo": [258, 261, 888], "investig": [258, 261, 414], "147": [258, 261, 890], "2870": 258, "1473": 258, "2075": 258, "0128": 258, "test_typ": [259, 269, 271, 414, 415], "tau": [259, 271, 318, 415], "rho": [259, 267, 269, 318, 414, 415, 436], "coeffici": [259, 267, 271, 392, 414, 444, 496, 512, 677, 693, 852, 892], "pp": [259, 414, 415], "unlik": 259, "semidefinit": 259, "55": 259, "703": 259, "708": 259, "1988": [259, 892], "biometrika": 259, "335": 259, "346": [259, 889], "1356": 259, "0000": [259, 892], "2022": 259, "3271": 259, "robust": [260, 271, 348, 362, 396, 485, 488, 502, 505, 518, 521, 667, 670, 683, 686, 772, 775, 788, 791, 885, 889, 890, 892, 893], "walk": [260, 415], "period": [260, 261, 328, 335, 414, 415, 418, 424, 432, 434, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 867, 889, 893], "drift": 260, "increment": 260, "discard": 260, "vr": [260, 415], "plu": [260, 496, 512, 677, 693], "presenc": [260, 261], "campbel": 260, "lo": 260, "mackinlai": 260, "craig": 260, "nj": 260, "pdr": 260, "get_data_fr": [260, 885], "djia": [260, 885], "2020": 260, "month": [260, 415], "1370": 260, "trim": 261, "break": [261, 414, 415], "singl": [261, 411, 413, 415, 418, 455, 459, 463, 472, 476, 480, 490, 507, 523, 538, 542, 546, 555, 559, 563, 572, 576, 580, 589, 593, 598, 607, 611, 615, 624, 628, 632, 636, 640, 647, 654, 658, 662, 672, 688, 703, 707, 711, 715, 719, 726, 733, 737, 741, 745, 749, 756, 758, 762, 769, 777, 793, 806, 834, 853, 864, 873, 877, 881, 890, 893], "percentag": 261, "333": 261, "h0": 261, "follow": [261, 429, 446, 885, 889, 891, 893], "baum": 261, "2015": 261, "candid": 261, "front": 261, "dummi": 261, "subsequ": 261, "reduct": 261, "pessimist": 261, "character": 261, "off": [261, 422, 488, 505, 521, 670, 686, 775, 791, 813, 843, 889, 890, 891, 892, 893], "f": [261, 415, 421, 637, 644, 716, 719, 723, 746, 753, 759, 766, 854, 861, 889], "zandrew": 261, "stata": 261, "softwar": 261, "s437301": 261, "boston": 261, "colleg": 261, "depart": 261, "revis": 261, "further": [261, 263, 265, 268], "evid": [261, 414], "great": 261, "crash": 261, "oil": [261, 414], "price": [261, 414], "shock": [261, 418, 885, 889, 892, 893], "251": 261, "ba": 262, "nw": 262, "pa": 262, "gallant": 262, "qs": 262, "x_trend": [263, 268], "canon": [263, 413], "hand": [263, 265, 268, 270, 271], "y_t": [263, 265, 268, 270, 271, 392, 414, 421, 422, 423, 432, 433, 439, 889], "1t": [263, 268], "x_t": [263, 265, 268, 270, 271, 414, 421, 422, 432, 433], "eta_": [263, 268], "gamma_1": [263, 268], "2t": [263, 268], "gamma_2": [263, 268], "epsilon_": [263, 268, 418, 419, 420, 425, 427, 429, 431, 434, 885, 891, 892], "eta": [263, 268, 437, 749], "infti": [263, 268, 427, 644, 723, 749, 753, 766, 861, 893], "eta_t": [263, 268], "matric": [263, 268], "partit": [263, 268], "cc": [263, 268, 271], "omega_": [263, 268], "star_t": [263, 268], "lambda": [263, 268, 426, 429, 437, 749, 892], "_2": 263, "kappa": [263, 271, 421, 892], "star_": [263, 268], "park": 263, "societi": [263, 265, 271], "119": 263, "143": 263, "omega_112": 264, "kernel_est": [264, 266, 269], "num_x": [264, 266], "rsquar": [264, 266, 432, 444], "rsquared_adj": [264, 266, 444], "estimator_typ": 264, "long_run_vari": [264, 266], "residual_vari": [264, 266, 418, 442, 443, 490, 507, 523, 672, 688, 777, 793, 806, 834, 891, 893], "r\u00b2": [264, 266, 357, 358, 376, 377], "std_error": [264, 266], "tvalu": [264, 266, 444], "max_lead": 265, "dynam": [265, 266, 362, 413, 418, 419, 420, 425, 426, 427, 429, 431, 436, 889, 891, 892], "dol": 265, "hqic": 265, "inform": [265, 414, 441, 444, 446, 488, 505, 521, 670, 686, 775, 791, 802, 804, 805, 826, 828, 829, 840, 891, 892], "criterion": 265, "hannan": 265, "quinn": 265, "schwartz": 265, "d_t": [265, 270, 271, 414], "gamma": [265, 268, 270, 271, 392, 414, 421, 422, 432, 433, 434, 640, 702, 749, 762, 890, 892, 893], "kappa_i": 265, "sum": [265, 356, 375, 434, 640, 719, 749, 762, 857], "lambda_j": [265, 427], "epsilon_t": [265, 270, 362, 392, 414, 418, 421, 422, 423, 427, 432, 433, 439, 885, 889, 892], "contemporan": 265, "ln": [265, 425, 640, 719, 749, 762], "saikkonen": 265, "theori": 265, "27": [265, 414, 418, 891, 893], "watson": [265, 415], "1993": 265, "783": 265, "820": 265, "cov_typ": [266, 362, 444, 488, 505, 521, 670, 686, 775, 791], "reg_result": 266, "regressionresult": [266, 267, 279, 292, 315], "full_cov": 266, "incl": [266, 366], "full_param": 266, "xsection": [267, 269], "dimens": [267, 443, 490, 507, 523, 672, 688, 777, 793, 806, 821, 834, 889], "stochast": [267, 269, 270, 384, 401], "cointegrating_vector": [267, 269, 414], "distribution_ord": [267, 269], "_1": 268, "z_tz": 268, "z_t": [268, 270, 271, 362, 414], "1990": [268, 271], "advanc": 268, "225": 268, "248": 268, "za": [269, 271, 414, 415], "tstat": 270, "englegrangertestresult": 270, "zt": [271, 414], "pu": [271, 414], "pz": [271, 414], "z\u03b1": 271, "p\u1d64": 271, "trace": 271, "unadjust": [271, 348, 362, 396], "classic": [271, 348, 362, 396, 485, 488, 502, 505, 518, 521, 667, 670, 683, 686, 772, 775, 788, 791], "phillipsouliaristestresult": 271, "go": 271, "still": [271, 427, 490, 507, 523, 672, 688, 777, 793, 806, 834], "far": 271, "5000": 271, "distinct": [271, 414, 889], "u_t": 271, "let": 271, "_u": 271, "2_1": 271, "2_u": 271, "cdot2": 271, "tild": 271, "cdot": [271, 421], "xi_t": 271, "xi_": 271, "_z": 271, "mathrm": 271, "tr": 271, "m_": 271, "zz": [271, 362], "express": 271, "subtract": 271, "z_1": 271, "anyth": 271, "165": 271, "193": 271, "df": [274, 287, 300, 311, 325, 339, 411, 415, 885, 889, 890, 892, 893, 894], "sequenc": [283, 296, 307, 320, 334, 346, 891], "differenc": [348, 396, 427], "multipli": [348, 362, 396], "cointegrationanalysisresult": [348, 396], "epsilon": [356, 375, 418, 426], "text": [360, 379, 816, 851], "csv": [360, 379], "latex": [360, 379, 816, 851], "homoskedast": 362, "dynamicolsresult": 362, "linear_model": 362, "ordin": 362, "2_": [362, 418, 426, 885], "hac": 362, "ax": [389, 405, 414, 889, 890, 891, 892, 893], "titl": [389, 405, 414, 415, 890, 891, 893], "hold": [389, 405, 432, 488, 505, 521, 670, 686, 775, 791, 893], "y_": [392, 414, 421, 422, 889], "delta_i": 392, "share": [411, 419], "trigger": 411, "vari": [411, 895], "nc": [411, 415], "summari": [411, 414, 415, 885, 889, 890, 892], "premium": [411, 415], "yield": [411, 415, 885], "portfolio": 411, "baa": [411, 415], "aaa": [411, 415], "bond": [411, 415], "unitroot": [411, 414, 415], "1919": 411, "fred": [411, 415, 890, 892], "448": 411, "045": [411, 892], "97": [411, 415, 889, 892], "41": [411, 414, 415], "analys": 413, "four": [413, 414], "look": 414, "spot": 414, "crude": 414, "cush": 414, "ok": 414, "texa": [414, 892], "intermedi": [414, 892], "brent": 414, "underli": [414, 892], "energi": 414, "administr": 414, "log_pric": 414, "xl": [414, 891], "set_xlim": [414, 889, 891, 892, 893], "verifi": [414, 432], "wti": 414, "780": 414, "391": 414, "constantcrit": 414, "87": [414, 889, 892], "655": [414, 890], "454": [414, 890], "might": [414, 415, 892, 893], "relationship": [414, 418, 757, 770], "eg_test": 414, "468": 414, "007": [414, 415], "\u03c1": 414, "\u03b3": 414, "939": [414, 890], "78": [414, 889], "37": 414, "cointegrationaltern": 414, "cointegrationdistribut": 414, "expos": [414, 892, 893, 895], "he": 414, "arbitrag": 414, "000621": 414, "conclus": [414, 415], "firmli": 414, "assumpt": [414, 892, 893], "837": 414, "81": [414, 415, 889], "931769": 414, "296939": 414, "000185": 414, "crisi": [414, 893], "2008": [414, 893], "962": 414, "825": 414, "48": [414, 890], "quit": [414, 889], "bit": [414, 889], "happen": [414, 893], "surg": 414, "get_ax": 414, "set_titl": [414, 891, 893], "approach": [414, 889, 893], "stabil": 414, "diverg": 414, "singular": 414, "p_u": 414, "p_z": 414, "multivari": 414, "agre": [414, 415], "po_zt_test": 414, "357": 414, "06": [414, 415, 418, 889, 891, 892, 893], "93": [414, 890, 891, 892], "po_za_test": 414, "531": 414, "34": [414, 891, 892], "denomin": 414, "balanc": 414, "occur": [414, 490, 507, 523, 672, 688, 777, 793, 806, 834, 867], "po_pu_test": 414, "102": [414, 490, 507, 523, 672, 688, 777, 793, 806, 834], "868": 414, "648": 414, "01": [414, 418, 432, 490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 777, 793, 806, 807, 813, 834, 835, 843, 889, 891, 892, 893], "32": 414, "po_pz_test": 414, "114": [414, 415], "601": 414, "67": [414, 885], "eg": 414, "simplefilt": 415, "corpor": 415, "default_data": 415, "confirm": 415, "acf": 415, "tsa": 415, "stattool": 415, "kind": [415, 892], "By": [415, 418], "addition": [415, 418], "as_text": 415, "356": 415, "013": 415, "44": [415, 890], "86": [415, 890, 892], "suffici": 415, "pick": 415, "582": 415, "006": 415, "alter": 415, "786": 415, "017": [415, 892], "reg_r": 415, "dep": [415, 885, 889, 890, 892, 893], "095": [415, 890], "090": 415, "83": [415, 891], "tue": 415, "prob": [415, 830], "30e": 415, "02": [415, 885, 889, 890, 892, 893], "likelihood": [415, 444, 446, 465, 482, 548, 565, 582, 600, 617, 634, 640, 664, 713, 719, 743, 749, 762, 840, 857, 866, 883, 885, 889, 890, 892, 893], "630": [415, 892], "1194": 415, "1244": 415, "1186": 415, "1204": 415, "coef": [415, 885, 889, 890, 892, 893], "err": [415, 885, 889, 890, 892, 893], "gt": [415, 889, 890, 891, 892, 893], "025": 415, "975": 415, "l1": 415, "0248": 415, "038": 415, "012": 415, "2229": 415, "029": 415, "669": 415, "166": [415, 893], "l2": 415, "0525": 415, "030": [415, 892], "769": 415, "077": 415, "111": 415, "l3": 415, "1363": 415, "642": 415, "194": 415, "079": [415, 892], "l4": 415, "0510": 415, "727": 415, "084": 415, "109": 415, "l5": 415, "0440": 415, "516": 415, "130": [415, 892], "0383": 415, "004": 415, "065": 415, "586e": 415, "29e": 415, "230": [415, 889], "219": 415, "11e": 415, "43e": 415, "omnibu": 415, "665": 415, "553": 415, "durbin": 415, "jarqu": 415, "bera": 415, "jb": 415, "146083": 415, "295": 415, "425": 415, "00": [415, 891], "kurtosi": [415, 757, 770], "113": [415, 890], "cond": 415, "70e": 415, "03": [415, 885, 889, 890, 891, 892, 893], "7e": 415, "strong": 415, "multicollinear": 415, "322": 415, "020": 415, "96": [415, 890], "464": [415, 889], "009": [415, 890], "43": 415, "58": 415, "898": 415, "002": 415, "024": 415, "262": [415, 890], "088": 415, "74": [415, 890], "393": 415, "900": 415, "040": 415, "pure": [415, 446], "versu": 415, "ken": 415, "neg": [415, 418, 807, 835, 885, 890, 891, 892], "momentum": 415, "de": 415, "bias": 415, "206": 415, "git": [415, 891], "py": [415, 891], "1679": 415, "invalidlengthwarn": 415, "inherit": [417, 446, 886, 895], "public": [417, 440, 886, 895], "forward": 418, "caveat": 418, "particular": [418, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 885, 893], "sens": [418, 889, 893], "evolv": [418, 434, 465, 482, 490, 507, 523, 548, 565, 582, 600, 617, 634, 664, 672, 688, 713, 743, 777, 793, 806, 807, 834, 835, 883, 892], "tractabl": [418, 888], "ahead": [418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 889, 891], "harch": [418, 434, 885, 892], "horizon": [418, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 807, 834, 835, 873, 889, 891, 893], "prior": [418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 866], "explain": 418, "eqnarrai": [418, 885], "r_t": [418, 885, 892], "sigma_t": [418, 420, 421, 426, 885, 892], "2_t": [418, 421, 885, 892], "sim": [418, 891, 892, 893], "get_data_yahoo": 418, "am": [418, 490, 507, 523, 672, 688, 777, 793, 807, 813, 835, 843, 885, 891, 892], "dist": [418, 885, 891, 892, 893], "year": [418, 813, 843], "split_dat": 418, "sigma_": [418, 419, 425, 426, 429, 431, 434, 891, 892], "e_": [418, 425, 889], "draw": [418, 647, 726, 756, 769, 864, 893], "path": [418, 443, 455, 472, 538, 555, 572, 589, 607, 624, 654, 703, 733, 821, 873, 889, 891], "few": 418, "advantag": [418, 893], "valuabl": 418, "egarch": [418, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 885, 886], "equat": [418, 421, 427], "virtual": [418, 893], "drawn": [418, 893], "attach": [418, 430, 435, 437, 438, 445, 639, 646, 718, 725, 748, 755, 761, 768, 856, 863, 891], "dure": [418, 893], "mode": [418, 885, 890, 891, 892], "datetime64": 418, "timestamp": [418, 488, 489, 490, 505, 506, 507, 521, 522, 523, 670, 671, 672, 686, 687, 688, 775, 776, 777, 791, 792, 793, 806, 834], "until": [418, 890], "align": [418, 442, 443, 490, 507, 523, 672, 688, 777, 793, 805, 806, 821, 829, 834], "target": [418, 442, 490, 507, 523, 672, 688, 777, 793, 806, 834], "Not": [418, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 886], "archmodelforecast": [418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 891], "whenev": [418, 891], "2013": [418, 434], "24": [418, 885], "489534": 418, "495875": 418, "501122": 418, "509194": 418, "518614": 418, "26": [418, 891, 892], "474691": 418, "480416": 418, "483664": 418, "491932": 418, "502419": 418, "447054": 418, "454875": 418, "462167": 418, "467515": 418, "475632": 418, "421528": 418, "430024": 418, "439856": 418, "448282": 418, "457368": 418, "407544": 418, "415616": 418, "422848": 418, "430246": 418, "439451": 418, "decemb": 418, "dai": [418, 813, 843, 893], "timedelta": 418, "04": [418, 885, 889, 890, 891, 892, 893], "739303": 418, "741100": 418, "744529": 418, "746940": 418, "752688": 418, "695349": 418, "702488": 418, "706812": 418, "713342": 418, "721629": 418, "649343": 418, "654048": 418, "664055": 418, "672742": 418, "681263": 418, "fill": [418, 490, 507, 523, 672, 688, 777, 793, 806, 834, 890, 891], "common_asym": 419, "asymmetr": [419, 425, 429, 434, 885, 892], "symmetr": [419, 420, 425, 427, 429, 885, 892], "innov": [419, 420, 425, 427, 429, 885], "transform": [419, 421, 422, 423, 425, 427, 429, 432, 433, 439, 449, 468, 488, 505, 521, 534, 551, 568, 585, 603, 620, 645, 650, 670, 686, 699, 724, 729, 754, 767, 775, 791, 862, 866, 869, 885, 886, 892], "lie": 419, "asymmetri": 419, "alpha_": [419, 420, 425, 429, 431], "i_": [419, 892], "beta_": [419, 425, 429], "gamma_i": 419, "num_param": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 439, 440, 441, 444, 447, 802, 804, 826, 828], "subarrai": [419, 420, 424, 425, 426, 427, 428, 429, 431, 434, 436, 447, 460, 462, 477, 479, 543, 545, 560, 562, 577, 579, 594, 596, 612, 614, 629, 631, 659, 661, 708, 710, 738, 740, 878, 880], "stop": [419, 420, 424, 425, 426, 427, 428, 429, 431, 434, 436, 447], "scalar": [421, 422, 431, 432, 459, 476, 496, 512, 528, 542, 559, 576, 593, 611, 628, 658, 677, 693, 707, 737, 782, 877, 885], "har": [421, 422, 432, 490, 496, 507, 512, 523, 672, 677, 688, 693, 777, 793, 807, 835, 885, 890], "interpret": 421, "phi_": [421, 422, 432, 434], "ret": [421, 893], "gim": 421, "update_freq": [422, 488, 505, 521, 670, 686, 775, 791, 813, 843, 891, 892], "cm": [423, 528], "earch": 425, "lam": 426, "riskmetr": [426, 436, 892], "treat": [426, 889], "daili": [426, 436, 813, 843], "rm": [426, 436], "truncat": 427, "ab": [427, 429, 889], "fiavarch": 427, "strictli": [427, 429], "point": [427, 441, 444, 455, 459, 472, 476, 490, 496, 507, 512, 523, 538, 542, 555, 559, 572, 576, 589, 593, 607, 611, 624, 628, 640, 654, 658, 672, 677, 688, 693, 703, 707, 719, 733, 737, 749, 762, 777, 793, 806, 810, 834, 838, 873, 877, 889, 893], "represent": 427, "h_t": 427, "h_": 427, "lambda_i": 427, "delta_1": 427, "delta_j": 427, "delta_": 427, "lambda_": 427, "fiarch": 427, "fiavgarch": 427, "infin": [427, 597], "unit_scal": [428, 890], "enforc": 428, "proport": 428, "gjr": [429, 890, 893], "avarch": 429, "avgarch": 429, "tarch": [429, 490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835, 885], "heterogen": [431, 432, 892], "realist": 431, "use_rot": 432, "rotat": 432, "harx_1": 432, "harx_2": 432, "third": 432, "manual": [432, 885], "harx_3": 432, "harx_4": 432, "inspect": 432, "r2": [432, 444], "085": 432, "asym": 434, "accord": 434, "propto": 434, "phi_i": 434, "foroni": 434, "claudia": 434, "massimiliano": 434, "marcellino": 434, "survei": 434, "frequenc": [434, 488, 505, 521, 670, 686, 775, 791, 813, 843, 892], "norg": 434, "bank": 434, "manuscript": 434, "2018": [434, 891, 892], "longer": [434, 891], "66": 434, "tau0": 436, "1560": 436, "tau1": 436, "kmax": 436, "4142135623730951": 436, "cycl": 436, "adjac": 436, "densiti": [437, 645, 724, 754, 767, 862, 891], "705": 437, "730": 437, "www": 437, "ssc": 437, "wisc": 437, "edu": 437, "bhansen": 437, "ier_94": 437, "pdf": 437, "zm": [439, 782], "abstract": [440, 446, 447, 793, 796, 797, 798, 853, 854, 855, 857, 858, 860, 861, 862, 864, 865, 866, 867, 870, 871, 872, 876, 877, 879], "notimplementederror": [440, 455, 466, 472, 483, 538, 549, 555, 566, 572, 583, 589, 601, 607, 618, 624, 635, 654, 665, 703, 714, 733, 744, 873, 884], "subclass": [440, 445, 446, 487, 498, 504, 514, 520, 530, 669, 679, 685, 695, 774, 784, 790, 800], "privat": [440, 886], "overrid": [440, 813, 843], "dep_var": [441, 444], "loglikelihood": [441, 444, 802, 804, 826, 828, 840, 892], "is_panda": [441, 444], "archmodel": [441, 444, 809, 837, 885, 886], "criteria": [441, 444, 802, 804, 826, 828], "conditional_volatil": [441, 444, 890, 891, 892, 893], "start_index": 442, "simulated_path": 442, "simulated_vari": 442, "simulated_residual_vari": 442, "simulated_residu": 442, "optim_output": 444, "fit_start": 444, "fit_stop": 444, "optimizeresult": [444, 840], "slice": 444, "notat": 444, "convergence_flag": 444, "coverg": [444, 840], "std_err": 444, "templat": 445, "__init__": [446, 893], "initialize_upd": 446, "precomput": 446, "write": [446, 891], "pyx": 446, "cython": 446, "metaclass": 446, "poor": 446, "loop": [446, 889], "though": 447, "var_bound": [452, 455, 463, 465, 470, 472, 480, 482, 536, 538, 546, 548, 553, 555, 563, 565, 570, 572, 580, 582, 587, 589, 598, 600, 605, 607, 615, 617, 622, 624, 632, 634, 652, 654, 662, 664, 701, 703, 711, 713, 731, 733, 741, 743, 867, 871, 873, 881, 883], "store": [452, 463, 470, 480, 536, 546, 553, 563, 570, 580, 587, 598, 605, 615, 622, 632, 652, 662, 701, 711, 731, 741, 871, 881], "inequ": [453, 471, 537, 554, 571, 588, 606, 623, 653, 732, 872], "len": [455, 472, 538, 555, 572, 589, 607, 624, 654, 703, 733, 873, 893], "varianceforecast": [455, 472, 538, 555, 572, 589, 607, 624, 654, 703, 733, 873], "valueerror": [455, 472, 538, 555, 572, 589, 607, 624, 654, 703, 733, 873, 891], "burn": [459, 476, 496, 512, 528, 542, 559, 576, 593, 611, 628, 658, 677, 693, 707, 737, 782, 798, 877, 889], "initial_valu": [459, 476, 496, 512, 528, 542, 559, 576, 593, 611, 628, 658, 677, 693, 707, 737, 782, 798, 877], "sv": [461, 478, 497, 513, 529, 544, 561, 578, 595, 613, 630, 648, 660, 678, 694, 709, 727, 739, 757, 770, 783, 799, 865, 879], "variance_param": [463, 480, 546, 563, 580, 598, 615, 632, 662, 711, 741, 881], "loos": [465, 482, 548, 565, 582, 600, 617, 634, 664, 713, 743, 883], "deriv": [485, 502, 518, 667, 683, 772, 788], "starting_valu": [488, 505, 521, 670, 686, 775, 791], "show_warn": [488, 505, 521, 670, 686, 775, 791], "tol": [488, 505, 521, 670, 686, 775, 791], "everi": [488, 505, 521, 670, 686, 775, 791], "displai": [488, 505, 521, 670, 686, 775, 791], "noth": [488, 505, 521, 670, 686, 775, 791], "literatur": [488, 505, 521, 670, 686, 775, 791], "bollerslev": [488, 505, 521, 670, 686, 775, 791], "wooldridg": [488, 505, 521, 670, 686, 775, 791], "shown": [488, 505, 521, 670, 686, 775, 791], "toler": [488, 505, 521, 670, 686, 775, 791], "termin": [488, 505, 521, 670, 686, 775, 791, 885, 890, 891, 892], "entri": [488, 505, 521, 670, 686, 775, 791], "ftol": [488, 505, 521, 670, 686, 775, 791], "ep": [488, 505, 521, 670, 686, 775, 791], "maxit": [488, 505, 521, 670, 686, 775, 791], "2_0": [488, 505, 521, 670, 686, 775, 791], "archmodelresult": [488, 505, 521, 670, 686, 775, 791, 887, 893], "convergencewarn": [488, 505, 521, 670, 686, 775, 791], "difficulti": [488, 505, 521, 670, 686, 775, 791], "optimum": [488, 505, 521, 670, 686, 775, 791], "slsqp": [488, 505, 521, 670, 686, 775, 791], "archmodelfixedresult": [489, 506, 522, 671, 687, 776, 792, 887], "constraint": [489, 506, 522, 671, 687, 776, 792], "convert": [490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835], "1945": [490, 507, 523, 672, 688, 777, 793, 806, 807, 834, 835], "th": [490, 507, 523, 672, 688, 777, 793, 805, 806, 829, 834], "custom": [490, 507, 523, 672, 688, 777, 793, 806, 834], "As": [490, 507, 523, 672, 688, 777, 793, 806, 834, 893], "septemb": [490, 507, 523, 672, 688, 777, 793, 806, 834, 891], "nforecast": [490, 507, 523, 672, 688, 777, 793, 806, 834], "had": [490, 507, 523, 672, 688, 777, 793, 806, 834], "panel": [490, 507, 523, 672, 688, 777, 793, 806, 834], "0th": [490, 507, 523, 672, 688, 777, 793, 806, 834], "complex": [490, 507, 523, 672, 688, 777, 793, 806, 834], "accommod": [490, 507, 523, 672, 688, 777, 793, 806, 834], "scenario": [490, 507, 523, 672, 688, 777, 793, 806, 834, 888], "pleas": [490, 507, 523, 672, 688, 777, 793, 806, 834], "sim_data": [490, 496, 507, 512, 523, 528, 672, 677, 688, 693, 777, 782, 793, 807, 813, 835, 843, 892], "hedgehog_plot": [490, 507, 523, 672, 688, 777, 793], "liter": 491, "arraylike1d": [495, 511, 527, 676, 692, 781, 797], "initial_value_vol": [496, 512, 528, 677, 693, 782, 798], "ex": [496, 512, 677, 693], "jth": [496, 512, 677, 693], "simulated_data": [496, 512, 528, 677, 693, 782], "harx_param": [496, 512, 677, 693], "garch_param": [496, 512, 528, 677, 693], "92": [496, 512, 528, 677, 693, 813, 843], "concaten": [496, 512, 528, 677, 693, 889], "x_param": [496, 512, 677, 693], "arraylike2d": [499, 515, 531, 680, 696, 785], "arraylik": [500, 516, 532, 681, 697, 786, 801], "cm_param": 528, "cumul": [637, 645, 716, 724, 746, 754, 759, 767, 854, 862], "parameterless": [637, 641, 644, 645, 716, 720, 723, 724, 746, 750, 753, 754, 759, 763, 766, 767, 854, 858, 861, 862, 892], "constrain": [638, 717, 747, 760, 855], "individu": [640, 719, 749, 762, 857, 885], "ged": [640, 885], "ll": [640, 719, 749, 762, 892], "nu": [640, 762, 892], "ln2": [640, 719], "int_": [644, 723, 753, 766, 861], "dx": [644, 723, 753, 766, 861], "winkler": [644, 723, 753, 766, 861], "1972": [644, 723, 753, 766, 861], "manag": [644, 723, 753, 766, 861], "pit": [645, 724, 754, 767, 862], "invers": [645, 724, 754, 767, 862], "icdf": [645, 724, 754, 767, 862], "valuer": [648, 757, 770], "impli": 648, "heavier": 648, "empti": [719, 889, 894], "bx": 749, "sgn": 749, "quad": 749, "trivial": 782, "waldteststatist": [803, 827, 894], "plot_typ": [807, 835], "skip": [807, 835], "spine": [807, 835], "earliest": [807, 835], "weekli": [813, 843], "252": [813, 843, 890, 893], "2520": [813, 843], "asset": [813, 843, 892], "archmodelforecastsimul": [819, 891], "ith": 830, "optim_result": 840, "onc": 866, "inplac": 867, "popular": 885, "arx": [885, 889, 892], "assembl": [885, 892], "constantmean": [885, 892, 893], "llf": [885, 890, 891, 892], "5159": 885, "58323938": 885, "5156": 885, "09760149": 885, "5152": 885, "29989336": 885, "5146": 885, "47531817": 885, "5143": 885, "86337547": 885, "02096168": 885, "5142": 885, "24105141": 885, "07138907": 885, "5141": 885, "416653": 885, "39212288": 885, "39023885": 885, "85": 885, "39023359": 885, "successfulli": [885, 890, 891, 892], "exit": [885, 890, 891, 892], "gradient": [885, 890, 891, 892], "10290": 885, "10315": 885, "3520": 885, "fri": 885, "dec": 885, "2016": [885, 891], "3516": 885, "conf": [885, 889, 890, 892, 893], "0531": 885, "487e": 885, "569": 885, "581e": 885, "392e": 885, "220e": 885, "0156": 885, "932e": [885, 890], "155": [885, 892], "606e": 885, "892e": 885, "523e": [885, 889], "0879": 885, "140e": 885, "710": 885, "260e": [885, 892], "554e": 885, "110": 885, "9014": 885, "183e": 885, "163": 885, "878": 885, "925": 885, "carefulli": 885, "permit": 885, "ls": [885, 892], "gaussian": 885, "skewt": [885, 891, 892], "configur": 885, "silent": 885, "aim": 886, "lack": 887, "univarait": 888, "util": 888, "phi_0": 889, "phi_1": 889, "beta_0": 889, "beta_1": 889, "suppli": 889, "vale": 889, "track": 889, "dim0": 889, "x_mod": 889, "x0": 889, "x1": 889, "resid_mod": 889, "phi1": 889, "phi0": 889, "legend": [889, 891, 893], "frameon": [889, 891, 893], "999": 889, "x_0": 889, "x_1": 889, "x0_oo": 889, "x1_oo": 889, "els": [889, 891], "32610653": 889, "16305327": 889, "08152663": 889, "04076332": 889, "02038166": 889, "01019083": 889, "00509541": 889, "00254771": 889, "00127385": 889, "00063693": 889, "993": 889, "1302": 889, "2618": 889, "2652": 889, "65": [889, 890], "mon": [889, 890, 892, 893], "9480": 889, "149": [889, 892], "818": 889, "088e": [889, 892], "656": 889, "6971": 889, "421e": 889, "203": 889, "759": 889, "690": 889, "704": 889, "0186": 889, "063e": 889, "827": 889, "978": 889, "059": 889, "0115": 889, "483e": 889, "060": 889, "963": 889, "1144": 889, "879e": 889, "946": 889, "162e": [889, 892], "041e": 889, "0633": 889, "982e": 889, "123": 889, "374e": 889, "866e": 889, "122": 889, "7940": 889, "035e": 889, "788": 889, "522e": 889, "617": 889, "971": 889, "consider": 889, "exactli": 889, "devic": 889, "exog_fcast": 889, "lt": [889, 891], "axessubplot": [889, 891], "free": 889, "array_forecast": 889, "08": [889, 891, 893], "09": [889, 890, 892, 893], "multi_forecast": 889, "990": 889, "197255": 889, "766334": 889, "577107": 889, "505601": 889, "459461": 889, "377620": 889, "224185": 889, "981486": 889, "644090": 889, "214210": 889, "991": [889, 892], "890108": 889, "296009": 889, "321045": 889, "826688": 889, "010886": 889, "148451": 889, "193448": 889, "124665": 889, "936575": 889, "633031": 889, "992": 889, "507089": 889, "755860": 889, "044790": 889, "011246": 889, "975703": 889, "089727": 889, "584868": 889, "033252": 889, "264283": 889, "297785": 889, "095946": 889, "869621": 889, "890602": 889, "627904": 889, "352285": 889, "211499": 889, "277740": 889, "422307": 889, "888448": 889, "135017": 889, "994": [889, 890], "415586": 889, "143577": 889, "654791": 889, "258179": 889, "089347": 889, "805444": 889, "424787": 889, "788488": 889, "925033": 889, "865051": 889, "921109": 889, "075917": 889, "299730": 889, "950490": 889, "178127": 889, "093677": 889, "778853": 889, "293623": 889, "681971": 889, "976192": 889, "996": 889, "935776": 889, "954178": 889, "178160": 889, "832262": 889, "036522": 889, "901080": 889, "515904": 889, "950270": 889, "255725": 889, "469814": 889, "997": 889, "416878": 889, "689798": 889, "409599": 889, "650164": 889, "515074": 889, "101508": 889, "488851": 889, "737583": 889, "891902": 889, "983206": 889, "998": 889, "633381": 889, "555164": 889, "072909": 889, "153335": 889, "864477": 889, "296675": 889, "532205": 889, "636352": 889, "657221": 889, "628546": 889, "573900": 889, "317818": 889, "245648": 889, "612879": 889, "620680": 889, "415346": 889, "097526": 889, "733225": 889, "363590": 889, "012647": 889, "revers": 889, "array_multi_forecast": 889, "949": 889, "2310": 889, "4632": 889, "63": [889, 891, 892], "4662": 889, "3468": 889, "283": 889, "346e": 889, "112": 889, "901": 889, "793": 889, "7555": 889, "631e": 889, "446": [889, 892], "737": 889, "774": 889, "7840": 889, "195e": 889, "799": [889, 892], "192e": 889, "182": 889, "663": 889, "905": [889, 892], "0493": [889, 890], "753": 889, "052": 889, "085e": 889, "574": 889, "524": 889, "1626": 889, "741e": 889, "385e": 889, "926e": [889, 890], "236": 889, "3401": 889, "129": 889, "670e": 889, "593": 889, "forecast_1d": 889, "forecast_2d": 889, "wish": 889, "sim_fixedx": 889, "94510757": 889, "97700028": 889, "13035701": 889, "10824845": 889, "26825095": 889, "26590793": 889, "23342443": 889, "18098812": 889, "28265677": 889, "2315994": 889, "much": [889, 892, 893], "variat": 889, "sim_ar1": 889, "20210301": 889, "x0_sim": 889, "x1_sim": 889, "fcast": [889, 891], "fo": 889, "join": 889, "21343234": 889, "99297815": 889, "29477322": 889, "49884207": 889, "47501636": 889, "64628226": 889, "72478144": 889, "78606273": 889, "03824963": 889, "30368669": 889, "easi": 890, "space": 890, "vix": 890, "illustr": [890, 893], "vix_data": 890, "filter": [890, 893], "876": 890, "2267": 890, "4545": 890, "4571": 890, "1233": 890, "6335": 890, "359": [890, 892], "831e": 890, "264": 890, "9287": 890, "589e": 890, "056e": 890, "058": 890, "0318": 890, "449e": 890, "492": 890, "622": [890, 892], "158": 890, "463e": 890, "0612": 890, "180e": 890, "926": 890, "409e": 890, "076e": [890, 892], "124": [890, 892], "2910": 890, "396": 890, "782": 890, "361e": 890, "514": 890, "068": 890, "vol_mod": 890, "vol_r": 890, "1936": 890, "3881": 890, "3902": 890, "2355": 890, "134e": 890, "578": 890, "647e": 890, "415": 890, "7217": 890, "374": 890, "931": 890, "353e": 890, "098e": 890, "859": 890, "255e": 890, "217": 890, "227": [890, 892], "5789": 890, "184": 890, "692e": [890, 892], "218": 890, "940": 890, "miss": 890, "reflect": [890, 893], "impos": 890, "empty_lik": 890, "fv": 890, "255804020824": 890, "06442": 890, "930358": 890, "3675771978": 890, "3486": 890, "712776444361": 890, "2885": 890, "697003460417": 890, "65536047": 890, "04082758": 890, "1935": 890, "9527544064895": 890, "9470521073954": 890, "9470514966379": 890, "89": 890, "3907": 890, "5584": 890, "153": [890, 892], "661": 890, "507e": 890, "857": 890, "9376": 890, "625e": 890, "866": 890, "607e": 890, "867": 890, "0249": 890, "782e": 890, "657": 890, "511": 890, "899e": 890, "102e": 890, "344": 890, "909e": 890, "064e": [890, 892], "044e": 890, "9986": 890, "081e": [890, 892, 893], "358": 890, "420e": 890, "157": 890, "repetit": 890, "strategi": [890, 893], "3879": 890, "3899": 890, "5602": 890, "152": 890, "681": 890, "324e": 890, "9381": 890, "616e": 890, "389e": 890, "148": 890, "0262": 890, "774e": [890, 892], "693": 890, "488": 890, "781e": 890, "0499": 890, "099e": 890, "733e": 890, "809e": 890, "109e": [890, 893], "875": 890, "1932": 890, "3922": 890, "7796": 890, "190": [890, 892], "513": [890, 892], "554": 890, "9180": 890, "291": 890, "156": 890, "597e": 890, "348": 890, "0393": 890, "296": 890, "133": 890, "894": 890, "620": 890, "541": [890, 892], "0632": 890, "136e": 890, "188": 890, "2357": 890, "944": 890, "345": [890, 892], "254": 890, "725": 890, "7091": 890, "069": 890, "664": [890, 892], "507": 890, "386": [890, 892], "804": 890, "519": 890, "367": [890, 892], "172": 890, "726": [890, 892], "308": 890, "5579": 890, "855": 890, "117": 890, "233": 890, "sn": [891, 893], "conveni": 891, "computation": 891, "wast": 891, "futurewarn": 891, "silenc": 891, "sy": 891, "Be": 891, "6970": [891, 892], "282172935112": [891, 892], "6936": [891, 892], "718477483884": [891, 892], "718476988963": [891, 892], "056353": 891, "59647": 891, "568502": 891, "540887": 891, "513621": 891, "4867": 891, "_util": 891, "messag": 891, "comment": 891, "global": 891, "entir": [891, 893], "head": [891, 892, 893], "4578": 891, "713295409127": 891, "4555": 891, "338451419905": 891, "285110045323": 891, "381757": 891, "390905": 891, "399988": 891, "409008": 891, "417964": 891, "451724": 891, "460381": 891, "468976": 891, "477512": 891, "485987": 891, "428416": 891, "437236": 891, "445994": 891, "454691": 891, "463326": 891, "420554": 891, "429429": 891, "438242": 891, "446993": 891, "455683": 891, "402483": 891, "411486": 891, "420425": 891, "429301": 891, "438115": 891, "start_loc": 891, "end_loc": 891, "stdout": 891, "flush": 891, "temp": 891, "615314": 891, "621743": 891, "628133": 891, "751747": 891, "757343": 891, "762905": 891, "710453": 891, "716315": 891, "722142": 891, "666244": 891, "672346": 891, "678411": 891, "634424": 891, "640706": 891, "646949": 891, "600109": 891, "606595": 891, "613040": 891, "565514": 891, "572212": 891, "578869": 891, "599561": 891, "606051": 891, "612501": 891, "608309": 891, "614748": 891, "621148": 891, "575065": 891, "581756": 891, "588406": 891, "629890": 891, "636245": 891, "642561": 891, "695074": 891, "701042": 891, "706974": 891, "737154": 891, "742908": 891, "748627": 891, "954167": 891, "958725": 891, "963255": 891, "253453": 891, "256401": 891, "259332": 891, "178691": 891, "182043": 891, "185374": 891, "112205": 891, "115886": 891, "119545": 891, "051295": 891, "055327": 891, "059335": 891, "085678": 891, "089512": 891, "093324": 891, "085786": 891, "089594": 891, "093378": 891, "751723": 891, "757321": 891, "762885": 891, "709956": 891, "715791": 891, "721591": 891, "666057": 891, "672146": 891, "678197": 891, "634503": 891, "640776": 891, "647011": 891, "600417": 891, "606893": 891, "613329": 891, "565684": 891, "572369": 891, "579014": 891, "599963": 891, "606438": 891, "612874": 891, "608558": 891, "614982": 891, "621366": 891, "575020": 891, "581639": 891, "588217": 891, "629696": 891, "635989": 891, "642244": 891, "694735": 891, "700656": 891, "706541": 891, "736509": 891, "742193": 891, "747842": 891, "952751": 891, "957246": 891, "961713": 891, "251145": 891, "254050": 891, "256936": 891, "176864": 891, "180162": 891, "183441": 891, "110848": 891, "114497": 891, "118124": 891, "050102": 891, "054077": 891, "058028": 891, "084669": 891, "088454": 891, "092216": 891, "085003": 891, "088783": 891, "092541": 891, "6846": 891, "496665348549": 891, "6822": [891, 892], "883179474602": 891, "882823372691": 891, "010188": 891, "meaning": 891, "subplot": [891, 892, 893], "var_2016": 891, "16804": 891, "17165": 891, "color": [891, 893], "9cb2d6": 891, "set_label": 891, "002868": 891, "gca": 891, "set_xtick": [891, 893], "boxplot": 891, "nearli": 891, "var_": 891, "mu_": 891, "q_": 891, "2017": [891, 893], "ppf": 891, "cond_mean": 891, "cond_var": 891, "64484999": 891, "64965918": 891, "along": [891, 892], "highlight": 891, "value_at_risk": 891, "rets_2018": 891, "idx": [891, 893], "bb0000": 891, "bb00bb": 891, "exceed": 891, "marker": 891, "uniqu": 891, "sel": 891, "scatter": 891, "leg": 891, "ncol": 891, "std_ret": 891, "668273": 891, "723352": 891, "st": 892, "en": 892, "xlim": [892, 893], "invoc": 892, "72": 892, "13881": 892, "13907": 892, "5030": [892, 893], "5029": [892, 893], "0564": 892, "149e": 892, "906": 892, "302e": 892, "384e": 892, "887e": 892, "0175": 892, "683e": 892, "738": 892, "854e": 892, "328e": 892, "669e": 892, "1022": 892, "301e": 892, "852": 892, "105e": 892, "665e": 892, "128": 892, "8852": 892, "380e": 892, "125": 892, "912": 892, "quickli": [892, 893], "visual": 892, "88": 892, "13655": 892, "13688": 892, "145e": 892, "529": 892, "126": 892, "936e": 892, "995e": 892, "0196": 892, "051e": 892, "830": 892, "362e": 892, "163e": 892, "751e": 892, "7478e": 892, "026e": 892, "652e": 892, "011e": 892, "1831": 892, "266e": 892, "543e": 892, "139": 892, "8922": 892, "458e": 892, "864": 892, "921": 892, "dramat": 892, "6828": 892, "932812491481": 892, "6799": 892, "178684427803": 892, "178521556838": 892, "103": 892, "13608": 892, "13641": 892, "0143": 892, "091e": 892, "311": 892, "570e": 892, "0258": 892, "100e": 892, "299": 892, "986e": 892, "779e": 892, "386e": 892, "4313e": 892, "156e": 892, "563e": 892, "794e": 892, "1707": 892, "601e": 892, "500e": 892, "202": 892, "9098": 892, "672e": 892, "066": 892, "891": 892, "929": 892, "heavi": 892, "6729": 892, "0422428182555": 892, "6722": 892, "1511847441025": 892, "151184733062": 892, "13456": 892, "13495": 892, "0323": 892, "547": 892, "651e": 892, "679e": 892, "0201": 892, "498e": 892, "736": 892, "716e": 892, "321e": 892, "1825e": 892, "224e": 892, "654e": 892, "612e": 892, "1721": 892, "513e": 892, "306e": 892, "142": 892, "9139": 892, "578e": 892, "419": 892, "895": 892, "933": 892, "9557": 892, "881": 892, "715e": 892, "229": 892, "683": 892, "fixed_r": 892, "0235": 892, "9382": 892, "6908": 892, "13829": 892, "13869": 892, "0100": 892, "0600": 892, "10596": 892, "17896": 892, "liquid": 892, "ewmavari": 892, "riskmetrics2006": 892, "adequ": 892, "complic": 892, "feder": 892, "site": 892, "core_cpi": 892, "ann_infl": 892, "cpilfesl": 892, "3299": 892, "84": 892, "6609": 892, "6632": 892, "719": 892, "715": 892, "0216": 892, "981": 892, "762e": 892, "218e": 892, "1921": 892, "475e": 892, "306": 892, "315e": 892, "258": 892, "1798": 892, "411": 892, "030e": 892, "989e": 892, "0232": 892, "370e": 892, "692": 892, "058e": 892, "002e": 892, "666e": 892, "567": 892, "4180": 892, "487": 892, "381e": 892, "410e": 892, "938e": 892, "suppress": 892, "3174": 892, "6369": 892, "6414": 892, "8500": 892, "883": 892, "841": 892, "0859": 892, "534e": 892, "590e": 892, "207": 892, "0788": 892, "855e": 892, "084e": 892, "154": 892, "282e": 892, "0189": 892, "157e": 892, "154e": 892, "821e": 892, "8602": 892, "015": 892, "592e": 892, "472": 892, "082e": 892, "1345": 892, "003e": 892, "824e": 892, "600e": 892, "213": 892, "2280": 892, "284e": 892, "628": 892, "860e": 892, "105": 892, "351": 892, "1838": 892, "802e": 892, "702": 892, "891e": 892, "047e": 892, "317": 892, "2538": 892, "826e": 892, "242": 892, "185e": 892, "407": 892, "1954": 892, "756": 892, "853e": 892, "644e": 892, "334": 892, "magnitud": [892, 893], "3168": 892, "6358": 892, "51": 892, "6408": 892, "1223": 892, "861": 892, "678": 892, "339e": 892, "525": 892, "770": 892, "0843": 892, "525e": 892, "763": 892, "208": 892, "0730": 892, "873e": 892, "885": 892, "946e": 892, "911e": 892, "0236": 892, "316e": 892, "791": 892, "330e": [892, 893], "934e": 892, "3431": 892, "235": 892, "924": 892, "278e": 892, "1715": 892, "222e": 892, "271": 892, "2202": 892, "394e": 892, "444": 892, "742e": 892, "486e": 892, "1547": 892, "327e": 892, "446e": 892, "073e": 892, "279": 892, "2117": 892, "287e": 892, "677e": 892, "884e": 892, "355": 892, "1959": 892, "495": 892, "200e": 892, "350": 892, "0456": 892, "687": 892, "211e": 892, "447": 892, "644": 892, "fairli": 892, "heavili": 892, "collect": 892, "ordereddict": 892, "crude_ret": 892, "dcoilwtico": 892, "res_norm": 892, "res_t": 892, "res_skewt": 892, "18165": 892, "858870": 892, "17919": 892, "643916": 892, "17916": 892, "669052": 892, "085627": 892, "064980": 892, "064889": 892, "909098": 892, "927950": 892, "928215": 892, "036986": 892, "046682": 892, "056438": 892, "040928": 892, "178584": 892, "186475": 892, "055806": 892, "048516": 892, "047683": 892, "unstandard": 892, "peak": 892, "somewhat": 892, "unit_var_resid": 892, "kde": 892, "029365": 892, "044374": 892, "044344": 892, "036104": 892, "931280": 892, "211281": 892, "041616": 892, "sim_mod": 892, "892196": 892, "761690": 892, "921562": 892, "987987": 892, "115573": 892, "958622": 892, "809655": 892, "723446": 892, "780290": 892, "249386": 892, "380700": 892, "220021": 892, "530404": 892, "120267": 892, "559770": 892, "cell": 892, "later": 892, "892380934": 892, "189201902": 892, "129129894": 892, "9890437": 892, "repro_mod": 892, "616836": 892, "787697": 892, "587470": 892, "106780": 892, "637129": 892, "077415": 892, "530200": 892, "561457": 892, "500834": 892, "284833": 892, "507739": 892, "255468": 892, "378519": 892, "381016": 892, "349153": 892, "pattern": 893, "want": 893, "could": 893, "twice": 893, "anoth": 893, "histor": 893, "histori": 893, "ground": 893, "precis": 893, "uniformli": 893, "preliminari": 893, "nasdaq": 893, "2208": 893, "050049": 893, "2251": 893, "270020": 893, "2320": 893, "860107": 893, "2326": 893, "090088": 893, "2344": 893, "409912": 893, "almost": 893, "extern": 893, "convers": 893, "intercept": 893, "8196": 893, "16403": 893, "16436": 893, "0376": 893, "476e": 893, "549": 893, "693e": 893, "656e": 893, "0214": 893, "001e": 893, "281": 893, "861e": 893, "161e": 893, "121e": 893, "0152": 893, "442e": 893, "802": 893, "148e": 893, "176e": 893, "1265": 893, "024e": 893, "684e": 893, "9100": 893, "107e": 893, "232": 893, "888": 893, "932": 893, "id": 893, "0x1dc32815c40": 893, "623295": 893, "637504": 893, "651549": 893, "665431": 893, "679154": 893, "692717": 893, "599455": 893, "613940": 893, "628257": 893, "642408": 893, "656397": 893, "670223": 893, "567297": 893, "582153": 893, "596837": 893, "611352": 893, "625699": 893, "639880": 893, "542506": 893, "557649": 893, "572616": 893, "587410": 893, "602034": 893, "616488": 893, "515452": 893, "530906": 893, "546183": 893, "561282": 893, "576208": 893, "590961": 893, "706124": 893, "719376": 893, "732475": 893, "745423": 893, "683890": 893, "697399": 893, "710752": 893, "723950": 893, "653897": 893, "667753": 893, "681448": 893, "694985": 893, "630776": 893, "644899": 893, "658858": 893, "672656": 893, "605543": 893, "619957": 893, "634205": 893, "648288": 893, "toward": 893, "sim_forecast": 893, "637251": 893, "647817": 893, "663746": 893, "673404": 893, "687952": 893, "617539": 893, "635838": 893, "649695": 893, "659733": 893, "667267": 893, "583415": 893, "597571": 893, "613065": 893, "621790": 893, "636180": 893, "555688": 893, "570280": 893, "585426": 893, "595551": 893, "608487": 893, "528771": 893, "542658": 893, "559684": 893, "580434": 893, "594855": 893, "697221": 893, "707707": 893, "717701": 893, "729465": 893, "686503": 893, "699708": 893, "707203": 893, "718560": 893, "650287": 893, "663344": 893, "679835": 893, "692300": 893, "619195": 893, "638180": 893, "653185": 893, "661366": 893, "605136": 893, "621835": 893, "634091": 893, "653222": 893, "remaind": 893, "surpris": 893, "shift": 893, "grow": 893, "faster": 893, "scenario_rng": 893, "scenario_forecast": 893, "685911": 893, "745202": 893, "821112": 893, "886289": 893, "966737": 893, "668181": 893, "743119": 893, "811486": 893, "877539": 893, "936587": 893, "629195": 893, "691225": 893, "758891": 893, "816663": 893, "893986": 893, "596301": 893, "656603": 893, "721505": 893, "778286": 893, "849680": 893, "567086": 893, "622224": 893, "689831": 893, "775048": 893, "845656": 893, "970796": 893, "977504": 893, "982202": 893, "992547": 893, "955295": 893, "965540": 893, "966432": 893, "974248": 893, "905952": 893, "915208": 893, "930777": 893, "938636": 893, "856175": 893, "873866": 893, "886221": 893, "890002": 893, "851104": 893, "864591": 893, "874696": 893, "894397": 893, "fh": 893, "act": 893, "scenariobootstraprng": 893, "self": 893, "_shock": 893, "asarrai": 893, "_r": 893, "randint": 893, "std_shock": 893, "scenario_bootstrap": 893, "bs_forecast": 893, "676081": 893, "734322": 893, "779325": 893, "828189": 893, "898202": 893, "645237": 893, "697133": 893, "750169": 893, "816280": 893, "888417": 893, "610493": 893, "665995": 893, "722954": 893, "777860": 893, "840369": 893, "597387": 893, "644535": 893, "691387": 893, "741206": 893, "783319": 893, "561312": 893, "611026": 893, "647824": 893, "700559": 893, "757398": 893, "958215": 893, "043704": 893, "124684": 893, "203893": 893, "945120": 893, "013400": 893, "084043": 893, "158148": 893, "889032": 893, "961424": 893, "022413": 893, "097192": 893, "840667": 893, "895559": 893, "957266": 893, "019497": 893, "820788": 893, "887791": 893, "938708": 893, "028614": 893, "rapidli": 893, "slowli": 893, "bootstrp": 893, "color_palett": 893, "dark": 893, "sim_path": 893, "bs_path": 893, "set_ylim": 893, "2019": 893, "get_loc": 893, "new_idx": 893, "holder": 894, "wald": 894, "statement": 894, "usag": 895}, "objects": {"arch": [[2, 0, 0, "-", "bootstrap"], [412, 0, 0, "-", "unitroot"]], "arch.bootstrap": [[5, 1, 1, "", "CircularBlockBootstrap"], [6, 1, 1, "", "IIDBootstrap"], [7, 1, 1, "", "IndependentSamplesBootstrap"], [232, 1, 1, "", "MCS"], [8, 1, 1, "", "MovingBlockBootstrap"], [233, 1, 1, "", "SPA"], [9, 1, 1, "", "StationaryBootstrap"], [234, 1, 1, "", "StepM"], [252, 0, 0, "-", "multiple_comparison"], [10, 4, 1, "", "optimal_block_length"]], "arch.bootstrap.CircularBlockBootstrap": [[11, 2, 1, "", "apply"], [12, 2, 1, "", "bootstrap"], [13, 2, 1, "", "clone"], [14, 2, 1, "", "conf_int"], [15, 2, 1, "", "cov"], [16, 3, 1, "", "generator"], [17, 2, 1, "", "get_state"], [18, 3, 1, "", "index"], [19, 3, 1, "", "random_state"], [20, 2, 1, "", "reset"], [21, 2, 1, "", "seed"], [22, 2, 1, "", "set_state"], [23, 3, 1, "", "state"], [24, 2, 1, "", "update_indices"], [25, 2, 1, "", "var"]], "arch.bootstrap.IIDBootstrap": [[26, 2, 1, "", "apply"], [27, 2, 1, "", "bootstrap"], [28, 2, 1, "", "clone"], [29, 2, 1, "", "conf_int"], [30, 2, 1, "", "cov"], [31, 3, 1, "", "generator"], [32, 2, 1, "", "get_state"], [33, 3, 1, "", "index"], [34, 3, 1, "", "random_state"], [35, 2, 1, "", "reset"], [36, 2, 1, "", "seed"], [37, 2, 1, "", "set_state"], [38, 3, 1, "", "state"], [39, 2, 1, "", "update_indices"], [40, 2, 1, "", "var"]], "arch.bootstrap.IndependentSamplesBootstrap": [[41, 2, 1, "", "apply"], [42, 2, 1, "", "bootstrap"], [43, 2, 1, "", "clone"], [44, 2, 1, "", "conf_int"], [45, 2, 1, "", "cov"], [46, 3, 1, "", "generator"], [47, 2, 1, "", "get_state"], [48, 3, 1, "", "index"], [49, 3, 1, "", "random_state"], [50, 2, 1, "", "reset"], [51, 2, 1, "", "seed"], [52, 2, 1, "", "set_state"], [53, 3, 1, "", "state"], [54, 2, 1, "", "update_indices"], [55, 2, 1, "", "var"]], "arch.bootstrap.MCS": [[235, 2, 1, "", "compute"], [236, 3, 1, "", "excluded"], [237, 3, 1, "", "included"], [238, 3, 1, "", "pvalues"], [239, 2, 1, "", "reset"], [240, 2, 1, "", "seed"]], "arch.bootstrap.MovingBlockBootstrap": [[56, 2, 1, "", "apply"], [57, 2, 1, "", "bootstrap"], [58, 2, 1, "", "clone"], [59, 2, 1, "", "conf_int"], [60, 2, 1, "", "cov"], [61, 3, 1, "", "generator"], [62, 2, 1, "", "get_state"], [63, 3, 1, "", "index"], [64, 3, 1, "", "random_state"], [65, 2, 1, "", "reset"], [66, 2, 1, "", "seed"], [67, 2, 1, "", "set_state"], [68, 3, 1, "", "state"], [69, 2, 1, "", "update_indices"], [70, 2, 1, "", "var"]], "arch.bootstrap.SPA": [[241, 2, 1, "", "better_models"], [242, 2, 1, "", "compute"], [243, 2, 1, "", "critical_values"], [244, 3, 1, "", "pvalues"], [245, 2, 1, "", "reset"], [246, 2, 1, "", "seed"], [247, 2, 1, "", "subset"]], "arch.bootstrap.StationaryBootstrap": [[71, 2, 1, "", "apply"], [72, 2, 1, "", "bootstrap"], [73, 2, 1, "", "clone"], [74, 2, 1, "", "conf_int"], [75, 2, 1, "", "cov"], [76, 3, 1, "", "generator"], [77, 2, 1, "", "get_state"], [78, 3, 1, "", "index"], [79, 3, 1, "", "random_state"], [80, 2, 1, "", "reset"], [81, 2, 1, "", "seed"], [82, 2, 1, "", "set_state"], [83, 3, 1, "", "state"], [84, 2, 1, "", "update_indices"], [85, 2, 1, "", "var"]], "arch.bootstrap.StepM": [[248, 2, 1, "", "compute"], [249, 2, 1, "", "reset"], [250, 2, 1, "", "seed"], [251, 3, 1, "", "superior_models"]], "arch.covariance": [[92, 0, 0, "-", "kernel"]], "arch.covariance.kernel": [[93, 1, 1, "", "Andrews"], [94, 1, 1, "", "Bartlett"], [95, 1, 1, "", "CovarianceEstimate"], [96, 1, 1, "", "Gallant"], [97, 1, 1, "", "NeweyWest"], [98, 1, 1, "", "Parzen"], [99, 1, 1, "", "ParzenCauchy"], [100, 1, 1, "", "ParzenGeometric"], [101, 1, 1, "", "ParzenRiesz"], [102, 1, 1, "", "QuadraticSpectral"], [103, 1, 1, "", "TukeyHamming"], [104, 1, 1, "", "TukeyHanning"], [105, 1, 1, "", "TukeyParzen"]], "arch.covariance.kernel.Andrews": [[106, 3, 1, "", "bandwidth"], [107, 3, 1, "", "bandwidth_scale"], [108, 3, 1, "", "centered"], [109, 3, 1, "", "cov"], [110, 3, 1, "", "force_int"], [111, 3, 1, "", "kernel_const"], [112, 3, 1, "", "kernel_weights"], [113, 3, 1, "", "name"], [114, 3, 1, "", "opt_bandwidth"], [115, 3, 1, "", "rate"]], "arch.covariance.kernel.Bartlett": [[116, 3, 1, "", "bandwidth"], [117, 3, 1, "", "bandwidth_scale"], [118, 3, 1, "", "centered"], [119, 3, 1, "", "cov"], [120, 3, 1, "", "force_int"], [121, 3, 1, "", "kernel_const"], [122, 3, 1, "", "kernel_weights"], [123, 3, 1, "", "name"], [124, 3, 1, "", "opt_bandwidth"], [125, 3, 1, "", "rate"]], "arch.covariance.kernel.CovarianceEstimate": [[126, 3, 1, "", "long_run"], [127, 3, 1, "", "one_sided"], [128, 3, 1, "", "one_sided_strict"], [129, 3, 1, "", "short_run"]], "arch.covariance.kernel.Gallant": [[130, 3, 1, "", "bandwidth"], [131, 3, 1, "", "bandwidth_scale"], [132, 3, 1, "", "centered"], [133, 3, 1, "", "cov"], [134, 3, 1, "", "force_int"], [135, 3, 1, "", "kernel_const"], [136, 3, 1, "", "kernel_weights"], [137, 3, 1, "", "name"], [138, 3, 1, "", "opt_bandwidth"], [139, 3, 1, "", "rate"]], "arch.covariance.kernel.NeweyWest": [[140, 3, 1, "", "bandwidth"], [141, 3, 1, "", "bandwidth_scale"], [142, 3, 1, "", "centered"], [143, 3, 1, "", "cov"], [144, 3, 1, "", "force_int"], [145, 3, 1, "", "kernel_const"], [146, 3, 1, "", "kernel_weights"], [147, 3, 1, "", "name"], [148, 3, 1, "", "opt_bandwidth"], [149, 3, 1, "", "rate"]], "arch.covariance.kernel.Parzen": [[150, 3, 1, "", "bandwidth"], [151, 3, 1, "", "bandwidth_scale"], [152, 3, 1, "", "centered"], [153, 3, 1, "", "cov"], [154, 3, 1, "", "force_int"], [155, 3, 1, "", "kernel_const"], [156, 3, 1, "", "kernel_weights"], [157, 3, 1, "", "name"], [158, 3, 1, "", "opt_bandwidth"], [159, 3, 1, "", "rate"]], "arch.covariance.kernel.ParzenCauchy": [[160, 3, 1, "", "bandwidth"], [161, 3, 1, "", "bandwidth_scale"], [162, 3, 1, "", "centered"], [163, 3, 1, "", "cov"], [164, 3, 1, "", "force_int"], [165, 3, 1, "", "kernel_const"], [166, 3, 1, "", "kernel_weights"], [167, 3, 1, "", "name"], [168, 3, 1, "", "opt_bandwidth"], [169, 3, 1, "", "rate"]], "arch.covariance.kernel.ParzenGeometric": [[170, 3, 1, "", "bandwidth"], [171, 3, 1, "", "bandwidth_scale"], [172, 3, 1, "", "centered"], [173, 3, 1, "", "cov"], [174, 3, 1, "", "force_int"], [175, 3, 1, "", "kernel_const"], [176, 3, 1, "", "kernel_weights"], [177, 3, 1, "", "name"], [178, 3, 1, "", "opt_bandwidth"], [179, 3, 1, "", "rate"]], "arch.covariance.kernel.ParzenRiesz": [[180, 3, 1, "", "bandwidth"], [181, 3, 1, "", "bandwidth_scale"], [182, 3, 1, "", "centered"], [183, 3, 1, "", "cov"], [184, 3, 1, "", "force_int"], [185, 3, 1, "", "kernel_const"], [186, 3, 1, "", "kernel_weights"], [187, 3, 1, "", "name"], [188, 3, 1, "", "opt_bandwidth"], [189, 3, 1, "", "rate"]], "arch.covariance.kernel.QuadraticSpectral": [[190, 3, 1, "", "bandwidth"], [191, 3, 1, "", "bandwidth_scale"], [192, 3, 1, "", "centered"], [193, 3, 1, "", "cov"], [194, 3, 1, "", "force_int"], [195, 3, 1, "", "kernel_const"], [196, 3, 1, "", "kernel_weights"], [197, 3, 1, "", "name"], [198, 3, 1, "", "opt_bandwidth"], [199, 3, 1, "", "rate"]], "arch.covariance.kernel.TukeyHamming": [[200, 3, 1, "", "bandwidth"], [201, 3, 1, "", "bandwidth_scale"], [202, 3, 1, "", "centered"], [203, 3, 1, "", "cov"], [204, 3, 1, "", "force_int"], [205, 3, 1, "", "kernel_const"], [206, 3, 1, "", "kernel_weights"], [207, 3, 1, "", "name"], [208, 3, 1, "", "opt_bandwidth"], [209, 3, 1, "", "rate"]], "arch.covariance.kernel.TukeyHanning": [[210, 3, 1, "", "bandwidth"], [211, 3, 1, "", "bandwidth_scale"], [212, 3, 1, "", "centered"], [213, 3, 1, "", "cov"], [214, 3, 1, "", "force_int"], [215, 3, 1, "", "kernel_const"], [216, 3, 1, "", "kernel_weights"], [217, 3, 1, "", "name"], [218, 3, 1, "", "opt_bandwidth"], [219, 3, 1, "", "rate"]], "arch.covariance.kernel.TukeyParzen": [[220, 3, 1, "", "bandwidth"], [221, 3, 1, "", "bandwidth_scale"], [222, 3, 1, "", "centered"], [223, 3, 1, "", "cov"], [224, 3, 1, "", "force_int"], [225, 3, 1, "", "kernel_const"], [226, 3, 1, "", "kernel_weights"], [227, 3, 1, "", "name"], [228, 3, 1, "", "opt_bandwidth"], [229, 3, 1, "", "rate"]], "arch.unitroot": [[256, 1, 1, "", "ADF"], [257, 1, 1, "", "DFGLS"], [258, 1, 1, "", "KPSS"], [259, 1, 1, "", "PhillipsPerron"], [260, 1, 1, "", "VarianceRatio"], [261, 1, 1, "", "ZivotAndrews"], [262, 4, 1, "", "auto_bandwidth"], [255, 0, 0, "-", "cointegration"]], "arch.unitroot.ADF": [[272, 3, 1, "", "alternative_hypothesis"], [273, 3, 1, "", "critical_values"], [274, 3, 1, "", "lags"], [275, 3, 1, "", "max_lags"], [276, 3, 1, "", "nobs"], [277, 3, 1, "", "null_hypothesis"], [278, 3, 1, "", "pvalue"], [279, 3, 1, "", "regression"], [280, 3, 1, "", "stat"], [281, 2, 1, "", "summary"], [282, 3, 1, "", "trend"], [283, 3, 1, "", "valid_trends"], [284, 3, 1, "", "y"]], "arch.unitroot.DFGLS": [[285, 3, 1, "", "alternative_hypothesis"], [286, 3, 1, "", "critical_values"], [287, 3, 1, "", "lags"], [288, 3, 1, "", "max_lags"], [289, 3, 1, "", "nobs"], [290, 3, 1, "", "null_hypothesis"], [291, 3, 1, "", "pvalue"], [292, 3, 1, "", "regression"], [293, 3, 1, "", "stat"], [294, 2, 1, "", "summary"], [295, 3, 1, "", "trend"], [296, 3, 1, "", "valid_trends"], [297, 3, 1, "", "y"]], "arch.unitroot.KPSS": [[298, 3, 1, "", "alternative_hypothesis"], [299, 3, 1, "", "critical_values"], [300, 3, 1, "", "lags"], [301, 3, 1, "", "nobs"], [302, 3, 1, "", "null_hypothesis"], [303, 3, 1, "", "pvalue"], [304, 3, 1, "", "stat"], [305, 2, 1, "", "summary"], [306, 3, 1, "", "trend"], [307, 3, 1, "", "valid_trends"], [308, 3, 1, "", "y"]], "arch.unitroot.PhillipsPerron": [[309, 3, 1, "", "alternative_hypothesis"], [310, 3, 1, "", "critical_values"], [311, 3, 1, "", "lags"], [312, 3, 1, "", "nobs"], [313, 3, 1, "", "null_hypothesis"], [314, 3, 1, "", "pvalue"], [315, 3, 1, "", "regression"], [316, 3, 1, "", "stat"], [317, 2, 1, "", "summary"], [318, 3, 1, "", "test_type"], [319, 3, 1, "", "trend"], [320, 3, 1, "", "valid_trends"], [321, 3, 1, "", "y"]], "arch.unitroot.VarianceRatio": [[322, 3, 1, "", "alternative_hypothesis"], [323, 3, 1, "", "critical_values"], [324, 3, 1, "", "debiased"], [325, 3, 1, "", "lags"], [326, 3, 1, "", "nobs"], [327, 3, 1, "", "null_hypothesis"], [328, 3, 1, "", "overlap"], [329, 3, 1, "", "pvalue"], [330, 3, 1, "", "robust"], [331, 3, 1, "", "stat"], [332, 2, 1, "", "summary"], [333, 3, 1, "", "trend"], [334, 3, 1, "", "valid_trends"], [335, 3, 1, "", "vr"], [336, 3, 1, "", "y"]], "arch.unitroot.ZivotAndrews": [[337, 3, 1, "", "alternative_hypothesis"], [338, 3, 1, "", "critical_values"], [339, 3, 1, "", "lags"], [340, 3, 1, "", "nobs"], [341, 3, 1, "", "null_hypothesis"], [342, 3, 1, "", "pvalue"], [343, 3, 1, "", "stat"], [344, 2, 1, "", "summary"], [345, 3, 1, "", "trend"], [346, 3, 1, "", "valid_trends"], [347, 3, 1, "", "y"]], "arch.unitroot.cointegration": [[263, 1, 1, "", "CanonicalCointegratingReg"], [264, 1, 1, "", "CointegrationAnalysisResults"], [265, 1, 1, "", "DynamicOLS"], [266, 1, 1, "", "DynamicOLSResults"], [267, 1, 1, "", "EngleGrangerTestResults"], [268, 1, 1, "", "FullyModifiedOLS"], [269, 1, 1, "", "PhillipsOuliarisTestResults"], [270, 4, 1, "", "engle_granger"], [271, 4, 1, "", "phillips_ouliaris"]], "arch.unitroot.cointegration.CanonicalCointegratingReg": [[348, 2, 1, "", "fit"]], "arch.unitroot.cointegration.CointegrationAnalysisResults": [[349, 3, 1, "", "bandwidth"], [350, 3, 1, "", "cov"], [351, 3, 1, "", "kernel"], [352, 3, 1, "", "long_run_variance"], [353, 3, 1, "", "params"], [354, 3, 1, "", "pvalues"], [355, 3, 1, "", "resid"], [356, 3, 1, "", "residual_variance"], [357, 3, 1, "", "rsquared"], [358, 3, 1, "", "rsquared_adj"], [359, 3, 1, "", "std_errors"], [360, 2, 1, "", "summary"], [361, 3, 1, "", "tvalues"]], "arch.unitroot.cointegration.DynamicOLS": [[362, 2, 1, "", "fit"]], "arch.unitroot.cointegration.DynamicOLSResults": [[363, 3, 1, "", "bandwidth"], [364, 3, 1, "", "cov"], [365, 3, 1, "", "cov_type"], [366, 3, 1, "", "full_cov"], [367, 3, 1, "", "full_params"], [368, 3, 1, "", "kernel"], [369, 3, 1, "", "lags"], [370, 3, 1, "", "leads"], [371, 3, 1, "", "long_run_variance"], [372, 3, 1, "", "params"], [373, 3, 1, "", "pvalues"], [374, 3, 1, "", "resid"], [375, 3, 1, "", "residual_variance"], [376, 3, 1, "", "rsquared"], [377, 3, 1, "", "rsquared_adj"], [378, 3, 1, "", "std_errors"], [379, 2, 1, "", "summary"], [380, 3, 1, "", "tvalues"]], "arch.unitroot.cointegration.EngleGrangerTestResults": [[381, 3, 1, "", "alternative_hypothesis"], [382, 3, 1, "", "cointegrating_vector"], [383, 3, 1, "", "critical_values"], [384, 3, 1, "", "distribution_order"], [385, 3, 1, "", "lags"], [386, 3, 1, "", "max_lags"], [387, 3, 1, "", "name"], [388, 3, 1, "", "null_hypothesis"], [389, 2, 1, "", "plot"], [390, 3, 1, "", "pvalue"], [391, 3, 1, "", "resid"], [392, 3, 1, "", "rho"], [393, 3, 1, "", "stat"], [394, 2, 1, "", "summary"], [395, 3, 1, "", "trend"]], "arch.unitroot.cointegration.FullyModifiedOLS": [[396, 2, 1, "", "fit"]], "arch.unitroot.cointegration.PhillipsOuliarisTestResults": [[397, 3, 1, "", "alternative_hypothesis"], [398, 3, 1, "", "bandwidth"], [399, 3, 1, "", "cointegrating_vector"], [400, 3, 1, "", "critical_values"], [401, 3, 1, "", "distribution_order"], [402, 3, 1, "", "kernel"], [403, 3, 1, "", "name"], [404, 3, 1, "", "null_hypothesis"], [405, 2, 1, "", "plot"], [406, 3, 1, "", "pvalue"], [407, 3, 1, "", "resid"], [408, 3, 1, "", "stat"], [409, 2, 1, "", "summary"], [410, 3, 1, "", "trend"]], "arch.univariate": [[419, 1, 1, "", "APARCH"], [420, 1, 1, "", "ARCH"], [421, 1, 1, "", "ARCHInMean"], [422, 1, 1, "", "ARX"], [423, 1, 1, "", "ConstantMean"], [424, 1, 1, "", "ConstantVariance"], [425, 1, 1, "", "EGARCH"], [426, 1, 1, "", "EWMAVariance"], [427, 1, 1, "", "FIGARCH"], [428, 1, 1, "", "FixedVariance"], [429, 1, 1, "", "GARCH"], [430, 1, 1, "", "GeneralizedError"], [431, 1, 1, "", "HARCH"], [432, 1, 1, "", "HARX"], [433, 1, 1, "", "LS"], [434, 1, 1, "", "MIDASHyperbolic"], [435, 1, 1, "", "Normal"], [436, 1, 1, "", "RiskMetrics2006"], [437, 1, 1, "", "SkewStudent"], [438, 1, 1, "", "StudentsT"], [439, 1, 1, "", "ZeroMean"], [885, 4, 1, "", "arch_model"]], "arch.univariate.APARCH": [[448, 2, 1, "", "backcast"], [449, 2, 1, "", "backcast_transform"], [450, 2, 1, "", "bounds"], [451, 3, 1, "", "common_asym"], [452, 2, 1, "", "compute_variance"], [453, 2, 1, "", "constraints"], [454, 3, 1, "", "delta"], [455, 2, 1, "", "forecast"], [456, 3, 1, "", "name"], [457, 3, 1, "", "num_params"], [458, 2, 1, "", "parameter_names"], [459, 2, 1, "", "simulate"], [460, 3, 1, "", "start"], [461, 2, 1, "", "starting_values"], [462, 3, 1, "", "stop"], [463, 2, 1, "", "update"], [464, 3, 1, "", "updateable"], [465, 2, 1, "", "variance_bounds"], [466, 3, 1, "", "volatility_updater"]], "arch.univariate.ARCH": [[467, 2, 1, "", "backcast"], [468, 2, 1, "", "backcast_transform"], [469, 2, 1, "", "bounds"], [470, 2, 1, "", "compute_variance"], [471, 2, 1, "", "constraints"], [472, 2, 1, "", "forecast"], [473, 3, 1, "", "name"], [474, 3, 1, "", "num_params"], [475, 2, 1, "", "parameter_names"], [476, 2, 1, "", "simulate"], [477, 3, 1, "", "start"], [478, 2, 1, "", "starting_values"], [479, 3, 1, "", "stop"], [480, 2, 1, "", "update"], [481, 3, 1, "", "updateable"], [482, 2, 1, "", "variance_bounds"], [483, 3, 1, "", "volatility_updater"]], "arch.univariate.ARCHInMean": [[484, 2, 1, "", "bounds"], [485, 2, 1, "", "compute_param_cov"], [486, 2, 1, "", "constraints"], [487, 3, 1, "", "distribution"], [488, 2, 1, "", "fit"], [489, 2, 1, "", "fix"], [490, 2, 1, "", "forecast"], [491, 3, 1, "", "form"], [492, 3, 1, "", "name"], [493, 3, 1, "", "num_params"], [494, 2, 1, "", "parameter_names"], [495, 2, 1, "", "resids"], [496, 2, 1, "", "simulate"], [497, 2, 1, "", "starting_values"], [498, 3, 1, "", "volatility"], [499, 3, 1, "", "x"], [500, 3, 1, "", "y"]], "arch.univariate.ARX": [[501, 2, 1, "", "bounds"], [502, 2, 1, "", "compute_param_cov"], [503, 2, 1, "", "constraints"], [504, 3, 1, "", "distribution"], [505, 2, 1, "", "fit"], [506, 2, 1, "", "fix"], [507, 2, 1, "", "forecast"], [508, 3, 1, "", "name"], [509, 3, 1, "", "num_params"], [510, 2, 1, "", "parameter_names"], [511, 2, 1, "", "resids"], [512, 2, 1, "", "simulate"], [513, 2, 1, "", "starting_values"], [514, 3, 1, "", "volatility"], [515, 3, 1, "", "x"], [516, 3, 1, "", "y"]], "arch.univariate.ConstantMean": [[517, 2, 1, "", "bounds"], [518, 2, 1, "", "compute_param_cov"], [519, 2, 1, "", "constraints"], [520, 3, 1, "", "distribution"], [521, 2, 1, "", "fit"], [522, 2, 1, "", "fix"], [523, 2, 1, "", "forecast"], [524, 3, 1, "", "name"], [525, 3, 1, "", "num_params"], [526, 2, 1, "", "parameter_names"], [527, 2, 1, "", "resids"], [528, 2, 1, "", "simulate"], [529, 2, 1, "", "starting_values"], [530, 3, 1, "", "volatility"], [531, 3, 1, "", "x"], [532, 3, 1, "", "y"]], "arch.univariate.ConstantVariance": [[533, 2, 1, "", "backcast"], [534, 2, 1, "", "backcast_transform"], [535, 2, 1, "", "bounds"], [536, 2, 1, "", "compute_variance"], [537, 2, 1, "", "constraints"], [538, 2, 1, "", "forecast"], [539, 3, 1, "", "name"], [540, 3, 1, "", "num_params"], [541, 2, 1, "", "parameter_names"], [542, 2, 1, "", "simulate"], [543, 3, 1, "", "start"], [544, 2, 1, "", "starting_values"], [545, 3, 1, "", "stop"], [546, 2, 1, "", "update"], [547, 3, 1, "", "updateable"], [548, 2, 1, "", "variance_bounds"], [549, 3, 1, "", "volatility_updater"]], "arch.univariate.EGARCH": [[550, 2, 1, "", "backcast"], [551, 2, 1, "", "backcast_transform"], [552, 2, 1, "", "bounds"], [553, 2, 1, "", "compute_variance"], [554, 2, 1, "", "constraints"], [555, 2, 1, "", "forecast"], [556, 3, 1, "", "name"], [557, 3, 1, "", "num_params"], [558, 2, 1, "", "parameter_names"], [559, 2, 1, "", "simulate"], [560, 3, 1, "", "start"], [561, 2, 1, "", "starting_values"], [562, 3, 1, "", "stop"], [563, 2, 1, "", "update"], [564, 3, 1, "", "updateable"], [565, 2, 1, "", "variance_bounds"], [566, 3, 1, "", "volatility_updater"]], "arch.univariate.EWMAVariance": [[567, 2, 1, "", "backcast"], [568, 2, 1, "", "backcast_transform"], [569, 2, 1, "", "bounds"], [570, 2, 1, "", "compute_variance"], [571, 2, 1, "", "constraints"], [572, 2, 1, "", "forecast"], [573, 3, 1, "", "name"], [574, 3, 1, "", "num_params"], [575, 2, 1, "", "parameter_names"], [576, 2, 1, "", "simulate"], [577, 3, 1, "", "start"], [578, 2, 1, "", "starting_values"], [579, 3, 1, "", "stop"], [580, 2, 1, "", "update"], [581, 3, 1, "", "updateable"], [582, 2, 1, "", "variance_bounds"], [583, 3, 1, "", "volatility_updater"]], "arch.univariate.FIGARCH": [[584, 2, 1, "", "backcast"], [585, 2, 1, "", "backcast_transform"], [586, 2, 1, "", "bounds"], [587, 2, 1, "", "compute_variance"], [588, 2, 1, "", "constraints"], [589, 2, 1, "", "forecast"], [590, 3, 1, "", "name"], [591, 3, 1, "", "num_params"], [592, 2, 1, "", "parameter_names"], [593, 2, 1, "", "simulate"], [594, 3, 1, "", "start"], [595, 2, 1, "", "starting_values"], [596, 3, 1, "", "stop"], [597, 3, 1, "", "truncation"], [598, 2, 1, "", "update"], [599, 3, 1, "", "updateable"], [600, 2, 1, "", "variance_bounds"], [601, 3, 1, "", "volatility_updater"]], "arch.univariate.FixedVariance": [[602, 2, 1, "", "backcast"], [603, 2, 1, "", "backcast_transform"], [604, 2, 1, "", "bounds"], [605, 2, 1, "", "compute_variance"], [606, 2, 1, "", "constraints"], [607, 2, 1, "", "forecast"], [608, 3, 1, "", "name"], [609, 3, 1, "", "num_params"], [610, 2, 1, "", "parameter_names"], [611, 2, 1, "", "simulate"], [612, 3, 1, "", "start"], [613, 2, 1, "", "starting_values"], [614, 3, 1, "", "stop"], [615, 2, 1, "", "update"], [616, 3, 1, "", "updateable"], [617, 2, 1, "", "variance_bounds"], [618, 3, 1, "", "volatility_updater"]], "arch.univariate.GARCH": [[619, 2, 1, "", "backcast"], [620, 2, 1, "", "backcast_transform"], [621, 2, 1, "", "bounds"], [622, 2, 1, "", "compute_variance"], [623, 2, 1, "", "constraints"], [624, 2, 1, "", "forecast"], [625, 3, 1, "", "name"], [626, 3, 1, "", "num_params"], [627, 2, 1, "", "parameter_names"], [628, 2, 1, "", "simulate"], [629, 3, 1, "", "start"], [630, 2, 1, "", "starting_values"], [631, 3, 1, "", "stop"], [632, 2, 1, "", "update"], [633, 3, 1, "", "updateable"], [634, 2, 1, "", "variance_bounds"], [635, 3, 1, "", "volatility_updater"]], "arch.univariate.GeneralizedError": [[636, 2, 1, "", "bounds"], [637, 2, 1, "", "cdf"], [638, 2, 1, "", "constraints"], [639, 3, 1, "", "generator"], [640, 2, 1, "", "loglikelihood"], [641, 2, 1, "", "moment"], [642, 3, 1, "", "name"], [643, 2, 1, "", "parameter_names"], [644, 2, 1, "", "partial_moment"], [645, 2, 1, "", "ppf"], [646, 3, 1, "", "random_state"], [647, 2, 1, "", "simulate"], [648, 2, 1, "", "starting_values"]], "arch.univariate.HARCH": [[649, 2, 1, "", "backcast"], [650, 2, 1, "", "backcast_transform"], [651, 2, 1, "", "bounds"], [652, 2, 1, "", "compute_variance"], [653, 2, 1, "", "constraints"], [654, 2, 1, "", "forecast"], [655, 3, 1, "", "name"], [656, 3, 1, "", "num_params"], [657, 2, 1, "", "parameter_names"], [658, 2, 1, "", "simulate"], [659, 3, 1, "", "start"], [660, 2, 1, "", "starting_values"], [661, 3, 1, "", "stop"], [662, 2, 1, "", "update"], [663, 3, 1, "", "updateable"], [664, 2, 1, "", "variance_bounds"], [665, 3, 1, "", "volatility_updater"]], "arch.univariate.HARX": [[666, 2, 1, "", "bounds"], [667, 2, 1, "", "compute_param_cov"], [668, 2, 1, "", "constraints"], [669, 3, 1, "", "distribution"], [670, 2, 1, "", "fit"], [671, 2, 1, "", "fix"], [672, 2, 1, "", "forecast"], [673, 3, 1, "", "name"], [674, 3, 1, "", "num_params"], [675, 2, 1, "", "parameter_names"], [676, 2, 1, "", "resids"], [677, 2, 1, "", "simulate"], [678, 2, 1, "", "starting_values"], [679, 3, 1, "", "volatility"], [680, 3, 1, "", "x"], [681, 3, 1, "", "y"]], "arch.univariate.LS": [[682, 2, 1, "", "bounds"], [683, 2, 1, "", "compute_param_cov"], [684, 2, 1, "", "constraints"], [685, 3, 1, "", "distribution"], [686, 2, 1, "", "fit"], [687, 2, 1, "", "fix"], [688, 2, 1, "", "forecast"], [689, 3, 1, "", "name"], [690, 3, 1, "", "num_params"], [691, 2, 1, "", "parameter_names"], [692, 2, 1, "", "resids"], [693, 2, 1, "", "simulate"], [694, 2, 1, "", "starting_values"], [695, 3, 1, "", "volatility"], [696, 3, 1, "", "x"], [697, 3, 1, "", "y"]], "arch.univariate.MIDASHyperbolic": [[698, 2, 1, "", "backcast"], [699, 2, 1, "", "backcast_transform"], [700, 2, 1, "", "bounds"], [701, 2, 1, "", "compute_variance"], [702, 2, 1, "", "constraints"], [703, 2, 1, "", "forecast"], [704, 3, 1, "", "name"], [705, 3, 1, "", "num_params"], [706, 2, 1, "", "parameter_names"], [707, 2, 1, "", "simulate"], [708, 3, 1, "", "start"], [709, 2, 1, "", "starting_values"], [710, 3, 1, "", "stop"], [711, 2, 1, "", "update"], [712, 3, 1, "", "updateable"], [713, 2, 1, "", "variance_bounds"], [714, 3, 1, "", "volatility_updater"]], "arch.univariate.Normal": [[715, 2, 1, "", "bounds"], [716, 2, 1, "", "cdf"], [717, 2, 1, "", "constraints"], [718, 3, 1, "", "generator"], [719, 2, 1, "", "loglikelihood"], [720, 2, 1, "", "moment"], [721, 3, 1, "", "name"], [722, 2, 1, "", "parameter_names"], [723, 2, 1, "", "partial_moment"], [724, 2, 1, "", "ppf"], [725, 3, 1, "", "random_state"], [726, 2, 1, "", "simulate"], [727, 2, 1, "", "starting_values"]], "arch.univariate.RiskMetrics2006": [[728, 2, 1, "", "backcast"], [729, 2, 1, "", "backcast_transform"], [730, 2, 1, "", "bounds"], [731, 2, 1, "", "compute_variance"], [732, 2, 1, "", "constraints"], [733, 2, 1, "", "forecast"], [734, 3, 1, "", "name"], [735, 3, 1, "", "num_params"], [736, 2, 1, "", "parameter_names"], [737, 2, 1, "", "simulate"], [738, 3, 1, "", "start"], [739, 2, 1, "", "starting_values"], [740, 3, 1, "", "stop"], [741, 2, 1, "", "update"], [742, 3, 1, "", "updateable"], [743, 2, 1, "", "variance_bounds"], [744, 3, 1, "", "volatility_updater"]], "arch.univariate.SkewStudent": [[745, 2, 1, "", "bounds"], [746, 2, 1, "", "cdf"], [747, 2, 1, "", "constraints"], [748, 3, 1, "", "generator"], [749, 2, 1, "", "loglikelihood"], [750, 2, 1, "", "moment"], [751, 3, 1, "", "name"], [752, 2, 1, "", "parameter_names"], [753, 2, 1, "", "partial_moment"], [754, 2, 1, "", "ppf"], [755, 3, 1, "", "random_state"], [756, 2, 1, "", "simulate"], [757, 2, 1, "", "starting_values"]], "arch.univariate.StudentsT": [[758, 2, 1, "", "bounds"], [759, 2, 1, "", "cdf"], [760, 2, 1, "", "constraints"], [761, 3, 1, "", "generator"], [762, 2, 1, "", "loglikelihood"], [763, 2, 1, "", "moment"], [764, 3, 1, "", "name"], [765, 2, 1, "", "parameter_names"], [766, 2, 1, "", "partial_moment"], [767, 2, 1, "", "ppf"], [768, 3, 1, "", "random_state"], [769, 2, 1, "", "simulate"], [770, 2, 1, "", "starting_values"]], "arch.univariate.ZeroMean": [[771, 2, 1, "", "bounds"], [772, 2, 1, "", "compute_param_cov"], [773, 2, 1, "", "constraints"], [774, 3, 1, "", "distribution"], [775, 2, 1, "", "fit"], [776, 2, 1, "", "fix"], [777, 2, 1, "", "forecast"], [778, 3, 1, "", "name"], [779, 3, 1, "", "num_params"], [780, 2, 1, "", "parameter_names"], [781, 2, 1, "", "resids"], [782, 2, 1, "", "simulate"], [783, 2, 1, "", "starting_values"], [784, 3, 1, "", "volatility"], [785, 3, 1, "", "x"], [786, 3, 1, "", "y"]], "arch.univariate.base": [[440, 1, 1, "", "ARCHModel"], [441, 1, 1, "", "ARCHModelFixedResult"], [442, 1, 1, "", "ARCHModelForecast"], [443, 1, 1, "", "ARCHModelForecastSimulation"], [444, 1, 1, "", "ARCHModelResult"]], "arch.univariate.base.ARCHModel": [[787, 2, 1, "", "bounds"], [788, 2, 1, "", "compute_param_cov"], [789, 2, 1, "", "constraints"], [790, 3, 1, "", "distribution"], [791, 2, 1, "", "fit"], [792, 2, 1, "", "fix"], [793, 2, 1, "", "forecast"], [794, 3, 1, "", "name"], [795, 3, 1, "", "num_params"], [796, 2, 1, "", "parameter_names"], [797, 2, 1, "", "resids"], [798, 2, 1, "", "simulate"], [799, 2, 1, "", "starting_values"], [800, 3, 1, "", "volatility"], [801, 3, 1, "", "y"]], "arch.univariate.base.ARCHModelFixedResult": [[802, 3, 1, "", "aic"], [803, 2, 1, "", "arch_lm_test"], [804, 3, 1, "", "bic"], [805, 3, 1, "", "conditional_volatility"], [806, 2, 1, "", "forecast"], [807, 2, 1, "", "hedgehog_plot"], [808, 3, 1, "", "loglikelihood"], [809, 3, 1, "", "model"], [810, 3, 1, "", "nobs"], [811, 3, 1, "", "num_params"], [812, 3, 1, "", "params"], [813, 2, 1, "", "plot"], [814, 3, 1, "", "resid"], [815, 3, 1, "", "std_resid"], [816, 2, 1, "", "summary"]], "arch.univariate.base.ARCHModelForecast": [[817, 3, 1, "", "mean"], [818, 3, 1, "", "residual_variance"], [819, 3, 1, "", "simulations"], [820, 3, 1, "", "variance"]], "arch.univariate.base.ARCHModelForecastSimulation": [[821, 3, 1, "", "index"], [822, 3, 1, "", "residual_variances"], [823, 3, 1, "", "residuals"], [824, 3, 1, "", "values"], [825, 3, 1, "", "variances"]], "arch.univariate.base.ARCHModelResult": [[826, 3, 1, "", "aic"], [827, 2, 1, "", "arch_lm_test"], [828, 3, 1, "", "bic"], [829, 3, 1, "", "conditional_volatility"], [830, 2, 1, "", "conf_int"], [831, 3, 1, "", "convergence_flag"], [832, 3, 1, "", "fit_start"], [833, 3, 1, "", "fit_stop"], [834, 2, 1, "", "forecast"], [835, 2, 1, "", "hedgehog_plot"], [836, 3, 1, "", "loglikelihood"], [837, 3, 1, "", "model"], [838, 3, 1, "", "nobs"], [839, 3, 1, "", "num_params"], [840, 3, 1, "", "optimization_result"], [841, 3, 1, "", "param_cov"], [842, 3, 1, "", "params"], [843, 2, 1, "", "plot"], [844, 3, 1, "", "pvalues"], [845, 3, 1, "", "resid"], [846, 3, 1, "", "rsquared"], [847, 3, 1, "", "rsquared_adj"], [848, 3, 1, "", "scale"], [849, 3, 1, "", "std_err"], [850, 3, 1, "", "std_resid"], [851, 2, 1, "", "summary"], [852, 3, 1, "", "tvalues"]], "arch.univariate.distribution": [[445, 1, 1, "", "Distribution"]], "arch.univariate.distribution.Distribution": [[853, 2, 1, "", "bounds"], [854, 2, 1, "", "cdf"], [855, 2, 1, "", "constraints"], [856, 3, 1, "", "generator"], [857, 2, 1, "", "loglikelihood"], [858, 2, 1, "", "moment"], [859, 3, 1, "", "name"], [860, 2, 1, "", "parameter_names"], [861, 2, 1, "", "partial_moment"], [862, 2, 1, "", "ppf"], [863, 3, 1, "", "random_state"], [864, 2, 1, "", "simulate"], [865, 2, 1, "", "starting_values"]], "arch.univariate.recursions_python": [[446, 1, 1, "", "VolatilityUpdater"]], "arch.univariate.recursions_python.VolatilityUpdater": [[866, 2, 1, "", "initialize_update"], [867, 2, 1, "", "update"]], "arch.univariate.volatility": [[447, 1, 1, "", "VolatilityProcess"]], "arch.univariate.volatility.VolatilityProcess": [[868, 2, 1, "", "backcast"], [869, 2, 1, "", "backcast_transform"], [870, 2, 1, "", "bounds"], [871, 2, 1, "", "compute_variance"], [872, 2, 1, "", "constraints"], [873, 2, 1, "", "forecast"], [874, 3, 1, "", "name"], [875, 3, 1, "", "num_params"], [876, 2, 1, "", "parameter_names"], [877, 2, 1, "", "simulate"], [878, 3, 1, "", "start"], [879, 2, 1, "", "starting_values"], [880, 3, 1, "", "stop"], [881, 2, 1, "", "update"], [882, 3, 1, "", "updateable"], [883, 2, 1, "", "variance_bounds"], [884, 3, 1, "", "volatility_updater"]], "arch.utility": [[894, 0, 0, "-", "testing"]], "arch.utility.testing": [[894, 1, 1, "", "WaldTestStatistic"]], "arch.utility.testing.WaldTestStatistic": [[894, 3, 1, "", "critical_values"], [894, 3, 1, "", "null"], [894, 3, 1, "", "pval"], [894, 3, 1, "", "stat"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"]}, "titleterms": {"api": 0, "refer": [0, 1, 231, 252], "volatil": [0, 91, 447, 498, 514, 530, 679, 695, 784, 800, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 888, 890, 891, 892, 893, 895], "model": [0, 3, 91, 252, 253, 809, 837, 885, 886, 887, 888, 889, 890, 892], "high": 0, "level": [0, 87], "mean": [0, 817, 886, 890, 892], "specif": 0, "process": [0, 890, 892, 895], "shock": 0, "distribut": [0, 86, 417, 445, 487, 504, 520, 669, 685, 774, 790, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 892], "unit": [0, 91, 412, 413, 415], "root": [0, 91, 412, 413, 415], "test": [0, 252, 253, 255, 412, 413, 414, 415, 894], "cointegr": [0, 255, 263, 264, 265, 266, 267, 268, 269, 270, 271, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 413, 414], "relationship": 0, "estim": [0, 3, 87, 88, 92, 255, 890], "bootstrap": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 90, 91, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 418, 891, 893], "block": [0, 3], "length": [0, 3], "select": [0, 412], "multipl": [0, 252, 253, 254, 889], "comparison": [0, 253, 254], "long": [0, 92], "run": [0, 92], "covari": [0, 88, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "hac": 0, "exampl": [3, 411], "sharp": 3, "ratio": [3, 415], "reproduc": 3, "warn": 3, "optim": 3, "probit": 3, "statsmodel": 3, "fit": [3, 348, 362, 396, 488, 505, 521, 670, 686, 775, 791, 889], "directli": 3, "The": [3, 87, 253, 412], "wrapper": 3, "function": 3, "speed": 3, "thing": 3, "up": 3, "uneven": 3, "sampl": [3, 86, 889], "confid": [4, 252, 253], "interv": 4, "setup": [4, 91, 415, 890, 892], "type": 4, "nonparametr": 4, "semi": 4, "parametr": [4, 89, 891], "method": [4, 89], "basic": [4, 411, 891], "percentil": 4, "asymptot": 4, "normal": [4, 435, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727], "approxim": 4, "norm": 4, "cov": [4, 15, 30, 45, 60, 75, 109, 119, 133, 143, 153, 163, 173, 183, 193, 203, 213, 223, 350, 364], "var": [4, 25, 40, 55, 70, 85, 891], "student": [4, 892], "bia": 4, "correct": 4, "bc": 4, "debias": [4, 324], "acceler": 4, "bca": 4, "arch": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 892], "circularblockbootstrap": [5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], "iidbootstrap": [6, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40], "independentsamplesbootstrap": [7, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55], "movingblockbootstrap": [8, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70], "stationarybootstrap": [9, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "optimal_block_length": 10, "appli": [11, 26, 41, 56, 71], "clone": [13, 28, 43, 58, 73], "conf_int": [14, 29, 44, 59, 74, 830], "gener": [16, 31, 46, 61, 76, 639, 718, 748, 761, 856, 891, 893], "get_stat": [17, 32, 47, 62, 77], "index": [18, 33, 48, 63, 78, 230, 821], "random_st": [19, 34, 49, 64, 79, 646, 725, 755, 768, 863], "reset": [20, 35, 50, 65, 80, 239, 245, 249], "seed": [21, 36, 51, 66, 81, 240, 246, 250], "set_stat": [22, 37, 52, 67, 82], "state": [23, 38, 53, 68, 83], "update_indic": [24, 39, 54, 69, 84], "independ": 86, "ident": 86, "data": [86, 889, 890, 891], "i": 86, "d": 86, "low": 87, "interfac": 87, "construct": 87, "paramet": [87, 892], "iter": 87, "semiparametr": 89, "us": [89, 889, 890], "partial": 89, "instead": 89, "extra_kwarg": 89, "altern": [89, 891], "time": 90, "seri": 90, "chang": [91, 891], "log": 91, "version": 91, "5": 91, "releas": 91, "3": 91, "2": 91, "1": 91, "0": 91, "4": 91, "19": 91, "18": 91, "17": 91, "16": 91, "15": 91, "14": 91, "13": 91, "12": 91, "11": 91, "10": 91, "9": 91, "8": 91, "7": 91, "6": 91, "result": [92, 255, 887, 894], "kernel": [93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 351, 368, 402], "andrew": [93, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 415], "bartlett": [94, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "covarianceestim": [95, 126, 127, 128, 129], "gallant": [96, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "neweywest": [97, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "parzen": [98, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "parzencauchi": [99, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "parzengeometr": [100, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "parzenriesz": [101, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "quadraticspectr": [102, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "tukeyham": [103, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209], "tukeyhan": [104, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "tukeyparzen": [105, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "bandwidth": [106, 116, 130, 140, 150, 160, 170, 180, 190, 200, 210, 220, 349, 363, 398, 412], "bandwidth_scal": [107, 117, 131, 141, 151, 161, 171, 181, 191, 201, 211, 221], "center": [108, 118, 132, 142, 152, 162, 172, 182, 192, 202, 212, 222], "force_int": [110, 120, 134, 144, 154, 164, 174, 184, 194, 204, 214, 224], "kernel_const": [111, 121, 135, 145, 155, 165, 175, 185, 195, 205, 215, 225], "kernel_weight": [112, 122, 136, 146, 156, 166, 176, 186, 196, 206, 216, 226], "name": [113, 123, 137, 147, 157, 167, 177, 187, 197, 207, 217, 227, 387, 403, 456, 473, 492, 508, 524, 539, 556, 573, 590, 608, 625, 642, 655, 673, 689, 704, 721, 734, 751, 764, 778, 794, 859, 874], "opt_bandwidth": [114, 124, 138, 148, 158, 168, 178, 188, 198, 208, 218, 228], "rate": [115, 125, 139, 149, 159, 169, 179, 189, 199, 209, 219, 229], "long_run": 126, "one_sid": 127, "one_sided_strict": 128, "short_run": 129, "introduct": [230, 411, 885], "citat": 230, "mc": [232, 235, 236, 237, 238, 239, 240, 252], "spa": [233, 241, 242, 243, 244, 245, 246, 247, 252, 253], "stepm": [234, 248, 249, 250, 251, 252, 253], "comput": [235, 242, 248], "exclud": 236, "includ": 237, "pvalu": [238, 244, 278, 291, 303, 314, 329, 342, 354, 373, 390, 406, 844], "better_model": 241, "critical_valu": [243, 273, 286, 299, 310, 323, 338, 383, 400], "subset": 247, "superior_model": 251, "modul": 252, "superior": [252, 253], "predict": [252, 253], "abil": [252, 253], "realiti": 252, "check": 252, "stepwis": [252, 253], "set": [252, 253, 415], "studi": 253, "design": 253, "power": 253, "procedur": 254, "vector": 255, "class": [255, 418], "unitroot": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "adf": [256, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "dfgl": [257, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297], "kpss": [258, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 415], "phillipsperron": [259, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321], "varianceratio": [260, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336], "zivotandrew": [261, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347], "auto_bandwidth": 262, "canonicalcointegratingreg": [263, 348], "cointegrationanalysisresult": [264, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361], "dynamicol": [265, 362], "dynamicolsresult": [266, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380], "englegrangertestresult": [267, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395], "fullymodifiedol": [268, 396], "phillipsouliaristestresult": [269, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410], "engle_grang": 270, "phillips_ouliari": 271, "alternative_hypothesi": [272, 285, 298, 309, 322, 337, 381, 397], "lag": [274, 287, 300, 311, 325, 339, 369, 385, 415], "max_lag": [275, 288, 386], "nob": [276, 289, 301, 312, 326, 340, 810, 838], "null_hypothesi": [277, 290, 302, 313, 327, 341, 388, 404], "regress": [279, 292, 315, 415], "stat": [280, 293, 304, 316, 331, 343, 393, 408], "summari": [281, 294, 305, 317, 332, 344, 360, 379, 394, 409, 816, 851], "trend": [282, 295, 306, 319, 333, 345, 395, 410], "valid_trend": [283, 296, 307, 320, 334, 346], "y": [284, 297, 308, 321, 336, 347, 500, 516, 532, 681, 697, 786, 801], "test_typ": 318, "overlap": 328, "robust": 330, "vr": 335, "long_run_vari": [352, 371], "param": [353, 372, 812, 842], "resid": [355, 374, 391, 407, 495, 511, 527, 676, 692, 781, 797, 814, 845], "residual_vari": [356, 375, 818, 822], "rsquar": [357, 376, 846], "rsquared_adj": [358, 377, 847], "std_error": [359, 378], "tvalu": [361, 380, 852], "cov_typ": 365, "full_cov": 366, "full_param": 367, "lead": 370, "cointegrating_vector": [382, 399], "distribution_ord": [384, 401], "plot": [389, 405, 813, 843, 889], "rho": 392, "automat": 412, "analysi": 413, "phillip": [414, 415], "ouliari": 414, "augment": 415, "dickei": 415, "fuller": 415, "number": 415, "determinist": 415, "term": 415, "output": [415, 418], "gl": 415, "perron": 415, "zivot": 415, "varianc": [415, 820, 825, 890, 895], "theoret": 416, "background": 416, "write": [417, 886, 895], "new": [417, 886, 895], "forecast": [418, 455, 472, 490, 507, 523, 538, 555, 572, 589, 607, 624, 654, 672, 688, 703, 733, 777, 793, 806, 834, 873, 889, 891], "analyt": [418, 891], "simul": [418, 459, 476, 496, 512, 528, 542, 559, 576, 593, 611, 628, 647, 658, 677, 693, 707, 726, 737, 756, 769, 782, 798, 819, 864, 877, 889, 891, 892], "option": 418, "understand": 418, "univari": [419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 888], "aparch": [419, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "archinmean": [421, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500], "arx": [422, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516], "constantmean": [423, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532], "constantvari": [424, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549], "egarch": [425, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566], "ewmavari": [426, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583], "figarch": [427, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601], "fixedvari": [428, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 890, 895], "garch": [429, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 892], "generalizederror": [430, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648], "harch": [431, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665], "harx": [432, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681], "ls": [433, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697], "midashyperbol": [434, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714], "riskmetrics2006": [436, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744], "skewstud": [437, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757], "studentst": [438, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770], "zeromean": [439, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786], "base": [440, 441, 442, 443, 444, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852], "archmodel": [440, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801], "archmodelfixedresult": [441, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816], "archmodelforecast": [442, 817, 818, 819, 820], "archmodelforecastsimul": [443, 821, 822, 823, 824, 825], "archmodelresult": [444, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852], "recursions_python": [446, 866, 867], "volatilityupdat": [446, 866, 867], "volatilityprocess": [447, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884], "backcast": [448, 467, 533, 550, 567, 584, 602, 619, 649, 698, 728, 868], "backcast_transform": [449, 468, 534, 551, 568, 585, 603, 620, 650, 699, 729, 869], "bound": [450, 469, 484, 501, 517, 535, 552, 569, 586, 604, 621, 636, 651, 666, 682, 700, 715, 730, 745, 758, 771, 787, 853, 870], "common_asym": 451, "compute_vari": [452, 470, 536, 553, 570, 587, 605, 622, 652, 701, 731, 871], "constraint": [453, 471, 486, 503, 519, 537, 554, 571, 588, 606, 623, 638, 653, 668, 684, 702, 717, 732, 747, 760, 773, 789, 855, 872], "delta": 454, "num_param": [457, 474, 493, 509, 525, 540, 557, 574, 591, 609, 626, 656, 674, 690, 705, 735, 779, 795, 811, 839, 875], "parameter_nam": [458, 475, 494, 510, 526, 541, 558, 575, 592, 610, 627, 643, 657, 675, 691, 706, 722, 736, 752, 765, 780, 796, 860, 876], "start": [460, 477, 543, 560, 577, 594, 612, 629, 659, 708, 738, 878], "starting_valu": [461, 478, 497, 513, 529, 544, 561, 578, 595, 613, 630, 648, 660, 678, 694, 709, 727, 739, 757, 770, 783, 799, 865, 879], "stop": [462, 479, 545, 562, 579, 596, 614, 631, 661, 710, 740, 880], "updat": [463, 464, 480, 481, 546, 547, 563, 564, 580, 581, 598, 599, 615, 616, 632, 633, 662, 663, 711, 712, 741, 742, 867, 881, 882], "variance_bound": [465, 482, 548, 565, 582, 600, 617, 634, 664, 713, 743, 883], "volatility_updat": [466, 483, 549, 566, 583, 601, 618, 635, 665, 714, 744, 884], "compute_param_cov": [485, 502, 518, 667, 683, 772, 788], "fix": [489, 506, 522, 671, 687, 776, 792, 890, 891, 892], "form": 491, "x": [499, 515, 531, 680, 696, 785, 889], "truncat": 597, "cdf": [637, 716, 746, 759, 854], "loglikelihood": [640, 719, 749, 762, 808, 836, 857], "moment": [641, 720, 750, 763, 858], "partial_mo": [644, 723, 753, 766, 861], "ppf": [645, 724, 754, 767, 862], "aic": [802, 826], "arch_lm_test": [803, 827], "bic": [804, 828], "conditional_volatil": [805, 829], "hedgehog_plot": [807, 835], "std_resid": [815, 850], "residu": 823, "valu": [824, 889, 891], "convergence_flag": 831, "fit_start": 832, "fit_stop": 833, "optimization_result": 840, "param_cov": 841, "scale": 848, "std_err": 849, "initialize_upd": 866, "constructor": 885, "g": 886, "special": [886, 889], "requir": 886, "exogen": 889, "regressor": 889, "dict": 889, "datafram": 889, "an": 889, "arrai": 889, "produc": 889, "input": 889, "size": 889, "case": 889, "singl": 889, "variabl": 889, "static": 889, "out": 889, "initi": 890, "re": 890, "zig": 890, "zag": 890, "direct": 890, "futur": 891, "shape": 891, "scheme": 891, "window": 891, "roll": 891, "recurs": 891, "tarch": [891, 892], "risk": 891, "filter": 891, "histor": 891, "specifi": 892, "common": 892, "constant": 892, "gjr": 892, "zarch": 892, "s": 892, "t": 892, "error": 892, "build": 892, "from": 892, "compon": 892, "wti": 892, "crude": 892, "scenario": 893, "custom": 893, "random": 893, "visual": 893, "differ": 893, "compar": 893, "path": 893, "across": 893, "year": 893, "util": 894, "parameterless": 895}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 6, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 56}})